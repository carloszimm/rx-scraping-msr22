Operator,URL,Operator(URL),RxClojure,RxCpp,RxGroovy,RxJava 1․x,RxJava 2․x,RxJS,RxKotlin,RxNET,RxPHP,RxPY,Rxrb,RxScala,RxSwift
Aggregate,http://reactivex.io/documentation/operators/reduce.html,Reduce,into; iterate; reduce,iterate; reduce,collect; reduce,collect; reduce,collect; collectInto; reduce; reduceWith,reduce,collect; reduce,Aggregate,reduce,aggregate; expand; reduce,reduce,foldLeft; reduce,reduce
All,http://reactivex.io/documentation/operators/all.html,All,every,,all,all,all,every; jortSort; jortSortUntil,all,All,,all; every,all?,forall,
Amb,http://reactivex.io/documentation/operators/amb.html,Amb,,amb,amb; ambWith,amb; ambWith,amb; ambArray; ambWith,amb,amb; ambWith,Amb,race,amb,amb,amb,amb
ambArray,http://reactivex.io/documentation/operators/amb.html,Amb,,amb,amb; ambWith,amb; ambWith,amb; ambArray; ambWith,amb,amb; ambWith,Amb,race,amb,amb,amb,amb
ambWith,http://reactivex.io/documentation/operators/amb.html,Amb,,amb,amb; ambWith,amb; ambWith,amb; ambArray; ambWith,amb,amb; ambWith,Amb,race,amb,amb,amb,amb
and_,http://reactivex.io/documentation/operators/and-then-when.html,And/Then/When,,,and; then; when,and; then; when,,and; thenDo; when,and; then; when,And; Then; When,,and_; then_do; when,,,
And,http://reactivex.io/documentation/operators/and-then-when.html,And/Then/When,,,and; then; when,and; then; when,,and; thenDo; when,and; then; when,And; Then; When,,and_; then_do; when,,,
Any,http://reactivex.io/documentation/operators/contains.html,Contains,some,,contains; exists; isEmpty,contains; exists; isEmpty,any; contains; isEmpty,contains; findIndex; indexOf; isEmpty,contains; exists,Any; Contains,isEmpty,contains; find; find_index; is_empty; some,any?; contains?; none?,contains; exists; isEmpty,
apply,http://reactivex.io/documentation/operators/create.html,Create,generator,,create,create,create; generate; unsafeCreate,create; createWithDisposable; generate; generateWithAbsoluteTime; generateWithRelativeTime,create,Create; Generate,create,create; generate; generate_with_relative_time,create; generate,apply; create,create; generate
as_blocking,http://reactivex.io/documentation/operators/to.html,To,BlockingObservable.blocking; interpose; BlockingObservable.into; BlockingObservable.seq; sort; sort-by; sorted-list-by,as_blocking,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,blockingIterable; blockingLatest; blockingMostRecent; blockingNext; sorted; to; toFuture; toList; toMap; toMultimap; toSortedList,toArray; toMap; toSet,BlockingObservable.from; BlockingObservable.getIterator; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,GetEnumerator; ToArray; ToDictionary; ToEnumerable; ToEvent; ToEventPattern; ToList; ToLookup; ToTask,toArray,BlockingObservable.to_iterable; to_array; to_blocking; to_dict; to_future; to_iterable; to_list; to_marbles; to_set,to_a; to_h,nest; to; toArray; toBlocking; toBuffer; BlockingObservable.toFuture; toIndexedSeq; BlockingObservable.toIterable; toIterable; toIterator; BlockingObservable.toList; toList; toMap; toMultiMap; toSet; toStream; toTraversable; toVector,toArray
asObservable,http://reactivex.io/documentation/operators/from.html,From,seq,from,decode; from; fromAction; fromCallable; fromFunc0; fromRunnable; runAsync,decode; from; fromAction; fromCallable; fromFunc0; fromRunnable; runAsync,fromArray; fromCallable; fromFuture; fromIterable; fromPublisher,from; fromCallback; fromEvent; fromEventPattern; fromNodeCallback; fromPromise; of; ofArrayChanges; ofObjectChanges; ofWithScheduler; pairs,asObservable; from,AsObservable; FromAsyncPattern; FromEvent; FromEventPattern; ToObservable,fromArray; fromIterator; asObservable; fromPromise,from_array; from_callback; from_future; from_iterable; from_list; from_marbles; of,of_array; of_enumerable; of_enumerator,from; items,from; toObservable
AssertEqual,http://reactivex.io/documentation/operators/sequenceequal.html,SequenceEqual,,,sequenceEqual,sequenceEqual,sequenceEqual,sequenceEqual,sequenceEqual,AssertEqual; SequenceEqual,,sequence_equal,sequence_eql?,sequenceEqual; sequenceEqualWith,
asyncAction,http://reactivex.io/documentation/operators/start.html,Start,,,asyncAction; asyncFunc; deferFuture; forEachFuture; fromAction; fromCallable; fromFunc0; fromRunnable; start; startFuture; toAsync,asyncAction; asyncFunc; deferFuture; forEachFuture; fromAction; fromCallable; fromFunc0; fromRunnable; start; startFuture; toAsync,fromCallable,start; startAsync; toAsync,asyncAction; asyncFunc; deferFuture; forEachFuture; fromAction; fromCallable; fromFunc0; fromRunnable; start; startFuture; toAsync,Start; ToAsync,start,start; start_async; to_async,,,
asyncFunc,http://reactivex.io/documentation/operators/start.html,Start,,,asyncAction; asyncFunc; deferFuture; forEachFuture; fromAction; fromCallable; fromFunc0; fromRunnable; start; startFuture; toAsync,asyncAction; asyncFunc; deferFuture; forEachFuture; fromAction; fromCallable; fromFunc0; fromRunnable; start; startFuture; toAsync,fromCallable,start; startAsync; toAsync,asyncAction; asyncFunc; deferFuture; forEachFuture; fromAction; fromCallable; fromFunc0; fromRunnable; start; startFuture; toAsync,Start; ToAsync,start,start; start_async; to_async,,,
Average,http://reactivex.io/documentation/operators/average.html,Average,,average,averageDouble; averageFloat; averageInteger; averageLong,averageDouble; averageFloat; averageInteger; averageLong,,average,averageDouble; averageFloat; averageInteger; averageLong,Average,average,average,average,,
averageDouble,http://reactivex.io/documentation/operators/average.html,Average,,average,averageDouble; averageFloat; averageInteger; averageLong,averageDouble; averageFloat; averageInteger; averageLong,,average,averageDouble; averageFloat; averageInteger; averageLong,Average,average,average,average,,
averageFloat,http://reactivex.io/documentation/operators/average.html,Average,,average,averageDouble; averageFloat; averageInteger; averageLong,averageDouble; averageFloat; averageInteger; averageLong,,average,averageDouble; averageFloat; averageInteger; averageLong,Average,average,average,average,,
averageInteger,http://reactivex.io/documentation/operators/average.html,Average,,average,averageDouble; averageFloat; averageInteger; averageLong,averageDouble; averageFloat; averageInteger; averageLong,,average,averageDouble; averageFloat; averageInteger; averageLong,Average,average,average,average,,
averageLong,http://reactivex.io/documentation/operators/average.html,Average,,average,averageDouble; averageFloat; averageInteger; averageLong,averageDouble; averageFloat; averageInteger; averageLong,,average,averageDouble; averageFloat; averageInteger; averageLong,Average,average,average,average,,
blocking,http://reactivex.io/documentation/operators/to.html,To,BlockingObservable.blocking; interpose; BlockingObservable.into; BlockingObservable.seq; sort; sort-by; sorted-list-by,as_blocking,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,blockingIterable; blockingLatest; blockingMostRecent; blockingNext; sorted; to; toFuture; toList; toMap; toMultimap; toSortedList,toArray; toMap; toSet,BlockingObservable.from; BlockingObservable.getIterator; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,GetEnumerator; ToArray; ToDictionary; ToEnumerable; ToEvent; ToEventPattern; ToList; ToLookup; ToTask,toArray,BlockingObservable.to_iterable; to_array; to_blocking; to_dict; to_future; to_iterable; to_list; to_marbles; to_set,to_a; to_h,nest; to; toArray; toBlocking; toBuffer; BlockingObservable.toFuture; toIndexedSeq; BlockingObservable.toIterable; toIterable; toIterator; BlockingObservable.toList; toList; toMap; toMultiMap; toSet; toStream; toTraversable; toVector,toArray
blockingFirst,http://reactivex.io/documentation/operators/first.html,First,first; single,first,first; firstOrDefault; latest; mostRecent; next; single; singleOrDefault; takeFirst,first; firstOrDefault; latest; mostRecent; next; single; singleOrDefault; takeFirst,blockingFirst; blockingSingle; first; firstElement; single; singleElement; takeFirst,find; findIndex; first; single,first; firstOrDefault; mostRecent; single; singleOrDefault; takeFirst,First; FirstOrDefault; Latest; Next; Single; SingleOrDefault,,first; first_or_default; single; single_or_default,first; first_or_default; single; single_or_default,first; firstOrElse; head; headOption; headOrElse; latest; next; single; singleOption; singleOrElse,single
blockingForEach,http://reactivex.io/documentation/operators/subscribe.html,Subscribe,BlockingObservable.doseq; subscribe,subscribe,BlockingObservable.forEach; forEach; subscribe,BlockingObservable.forEach; forEach; subscribe,blockingForEach; blockingSubscribe; forEachWhile; safeSubscribe; subscribe,forEach; subscribe; subscribeOnCompleted; subscribeOnError; subscribeOnNext,BlockingObservable.forEach; forEach; subscribe,ForEach; Subscribe,subscribe,BlockingObservable.for_each; subscribe,subscribe,BlockingObservable.foreach; forEach; subscribe,subscribe
blockingIterable,http://reactivex.io/documentation/operators/to.html,To,BlockingObservable.blocking; interpose; BlockingObservable.into; BlockingObservable.seq; sort; sort-by; sorted-list-by,as_blocking,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,blockingIterable; blockingLatest; blockingMostRecent; blockingNext; sorted; to; toFuture; toList; toMap; toMultimap; toSortedList,toArray; toMap; toSet,BlockingObservable.from; BlockingObservable.getIterator; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,GetEnumerator; ToArray; ToDictionary; ToEnumerable; ToEvent; ToEventPattern; ToList; ToLookup; ToTask,toArray,BlockingObservable.to_iterable; to_array; to_blocking; to_dict; to_future; to_iterable; to_list; to_marbles; to_set,to_a; to_h,nest; to; toArray; toBlocking; toBuffer; BlockingObservable.toFuture; toIndexedSeq; BlockingObservable.toIterable; toIterable; toIterator; BlockingObservable.toList; toList; toMap; toMultiMap; toSet; toStream; toTraversable; toVector,toArray
blockingLast,http://reactivex.io/documentation/operators/last.html,Last,last,last,last; lastOrDefault,last; lastOrDefault,blockingLast; last; lastElement,last,last; lastOrDefault; takeLast,Last; LastOrDefault,,last; last_or_default,last; last_or_default,last; lastOrElse; head; headOption; headOrElse,
blockingLatest,http://reactivex.io/documentation/operators/to.html,To,BlockingObservable.blocking; interpose; BlockingObservable.into; BlockingObservable.seq; sort; sort-by; sorted-list-by,as_blocking,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,blockingIterable; blockingLatest; blockingMostRecent; blockingNext; sorted; to; toFuture; toList; toMap; toMultimap; toSortedList,toArray; toMap; toSet,BlockingObservable.from; BlockingObservable.getIterator; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,GetEnumerator; ToArray; ToDictionary; ToEnumerable; ToEvent; ToEventPattern; ToList; ToLookup; ToTask,toArray,BlockingObservable.to_iterable; to_array; to_blocking; to_dict; to_future; to_iterable; to_list; to_marbles; to_set,to_a; to_h,nest; to; toArray; toBlocking; toBuffer; BlockingObservable.toFuture; toIndexedSeq; BlockingObservable.toIterable; toIterable; toIterator; BlockingObservable.toList; toList; toMap; toMultiMap; toSet; toStream; toTraversable; toVector,toArray
blockingMostRecent,http://reactivex.io/documentation/operators/to.html,To,BlockingObservable.blocking; interpose; BlockingObservable.into; BlockingObservable.seq; sort; sort-by; sorted-list-by,as_blocking,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,blockingIterable; blockingLatest; blockingMostRecent; blockingNext; sorted; to; toFuture; toList; toMap; toMultimap; toSortedList,toArray; toMap; toSet,BlockingObservable.from; BlockingObservable.getIterator; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,GetEnumerator; ToArray; ToDictionary; ToEnumerable; ToEvent; ToEventPattern; ToList; ToLookup; ToTask,toArray,BlockingObservable.to_iterable; to_array; to_blocking; to_dict; to_future; to_iterable; to_list; to_marbles; to_set,to_a; to_h,nest; to; toArray; toBlocking; toBuffer; BlockingObservable.toFuture; toIndexedSeq; BlockingObservable.toIterable; toIterable; toIterator; BlockingObservable.toList; toList; toMap; toMultiMap; toSet; toStream; toTraversable; toVector,toArray
blockingNext,http://reactivex.io/documentation/operators/to.html,To,BlockingObservable.blocking; interpose; BlockingObservable.into; BlockingObservable.seq; sort; sort-by; sorted-list-by,as_blocking,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,blockingIterable; blockingLatest; blockingMostRecent; blockingNext; sorted; to; toFuture; toList; toMap; toMultimap; toSortedList,toArray; toMap; toSet,BlockingObservable.from; BlockingObservable.getIterator; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,GetEnumerator; ToArray; ToDictionary; ToEnumerable; ToEvent; ToEventPattern; ToList; ToLookup; ToTask,toArray,BlockingObservable.to_iterable; to_array; to_blocking; to_dict; to_future; to_iterable; to_list; to_marbles; to_set,to_a; to_h,nest; to; toArray; toBlocking; toBuffer; BlockingObservable.toFuture; toIndexedSeq; BlockingObservable.toIterable; toIterable; toIterator; BlockingObservable.toList; toList; toMap; toMultiMap; toSet; toStream; toTraversable; toVector,toArray
blockingSingle,http://reactivex.io/documentation/operators/first.html,First,first; single,first,first; firstOrDefault; latest; mostRecent; next; single; singleOrDefault; takeFirst,first; firstOrDefault; latest; mostRecent; next; single; singleOrDefault; takeFirst,blockingFirst; blockingSingle; first; firstElement; single; singleElement; takeFirst,find; findIndex; first; single,first; firstOrDefault; mostRecent; single; singleOrDefault; takeFirst,First; FirstOrDefault; Latest; Next; Single; SingleOrDefault,,first; first_or_default; single; single_or_default,first; first_or_default; single; single_or_default,first; firstOrElse; head; headOption; headOrElse; latest; next; single; singleOption; singleOrElse,single
blockingSubscribe,http://reactivex.io/documentation/operators/subscribe.html,Subscribe,BlockingObservable.doseq; subscribe,subscribe,BlockingObservable.forEach; forEach; subscribe,BlockingObservable.forEach; forEach; subscribe,blockingForEach; blockingSubscribe; forEachWhile; safeSubscribe; subscribe,forEach; subscribe; subscribeOnCompleted; subscribeOnError; subscribeOnNext,BlockingObservable.forEach; forEach; subscribe,ForEach; Subscribe,subscribe,BlockingObservable.for_each; subscribe,subscribe,BlockingObservable.foreach; forEach; subscribe,subscribe
Buffer,http://reactivex.io/documentation/operators/buffer.html,Buffer,,buffer; pairwise,buffer,buffer,buffer,buffer; bufferWithCount; bufferWithTime; bufferWithTimeOrCount,buffer,Buffer,bufferWithCount,buffer; buffer_with_count; buffer_with_time; buffer_with_time_or_count; pairwise,buffer_with_count; buffer_with_time,slidingBuffer; tumblingBuffer,buffer
bufferWithCount,http://reactivex.io/documentation/operators/buffer.html,Buffer,,buffer; pairwise,buffer,buffer,buffer,buffer; bufferWithCount; bufferWithTime; bufferWithTimeOrCount,buffer,Buffer,bufferWithCount,buffer; buffer_with_count; buffer_with_time; buffer_with_time_or_count; pairwise,buffer_with_count; buffer_with_time,slidingBuffer; tumblingBuffer,buffer
bufferWithTime,http://reactivex.io/documentation/operators/buffer.html,Buffer,,buffer; pairwise,buffer,buffer,buffer,buffer; bufferWithCount; bufferWithTime; bufferWithTimeOrCount,buffer,Buffer,bufferWithCount,buffer; buffer_with_count; buffer_with_time; buffer_with_time_or_count; pairwise,buffer_with_count; buffer_with_time,slidingBuffer; tumblingBuffer,buffer
bufferWithTimeOrCount,http://reactivex.io/documentation/operators/buffer.html,Buffer,,buffer; pairwise,buffer,buffer,buffer,buffer; bufferWithCount; bufferWithTime; bufferWithTimeOrCount,buffer,Buffer,bufferWithCount,buffer; buffer_with_count; buffer_with_time; buffer_with_time_or_count; pairwise,buffer_with_count; buffer_with_time,slidingBuffer; tumblingBuffer,buffer
byLine,http://reactivex.io/documentation/operators/map.html,Map,keep; keep-indexed; map; map-indexed,map,byLine; cast; encode; map,byLine; cast; encode; map,cast; map,map; pluck; select,cast; map,Cast; Select,map; mapWithIndex; mapTo; select; pluck,map; pluck; select,map; map_with_index,map,map; mapWithIndex
cache,http://reactivex.io/documentation/operators/replay.html,Replay,cache,publish_synchronized; replay,replay; cache,cache; replay,cache; replay,replay; shareReplay,replay; cache,Replay,replay; shareReplay,replay,,replay; cache,replay; shareReplay
cacheWithInitialCapacity,http://reactivex.io/documentation/operators/replay.html,Replay,cache,publish_synchronized; replay,replay; cache,cache; replay,cache; replay,replay; shareReplay,replay; cache,Replay,replay; shareReplay,replay,,replay; cache,replay; shareReplay
case,http://reactivex.io/documentation/operators/defer.html,Defer,,defer,defer; ifThen; switchCase,defer; ifThen; switchCase,defer,case; defer; if; switchCase,defer; switchCase,Defer,defer,case; defer; if_then; switch_case,defer,defer,defer
Cast,http://reactivex.io/documentation/operators/map.html,Map,keep; keep-indexed; map; map-indexed,map,byLine; cast; encode; map,byLine; cast; encode; map,cast; map,map; pluck; select,cast; map,Cast; Select,map; mapWithIndex; mapTo; select; pluck,map; pluck; select,map; map_with_index,map,map; mapWithIndex
Catch,http://reactivex.io/documentation/operators/catch.html,Catch,catch*,,onErrorResumeNext; onErrorReturn; onExceptionResumeNext,onErrorResumeNext; onErrorReturn; onExceptionResumeNext,onErrorResumeNext; onErrorReturn; onErrorReturnItem; onExceptionResumeNext,catch; onErrorResumeNext,onErrorResumeNext; onErrorReturn; onExceptionResumeNext,Catch; OnErrorResumeNext,catch,catch_exception; on_error_resume_next,on_error_resume_next; rescue_error,onErrorFlatMap; onErrorResumeNext; onErrorReturn; onExceptionResumeNext,catchError; catchErrorJustReturn
catchError,http://reactivex.io/documentation/operators/catch.html,Catch,catch*,,onErrorResumeNext; onErrorReturn; onExceptionResumeNext,onErrorResumeNext; onErrorReturn; onExceptionResumeNext,onErrorResumeNext; onErrorReturn; onErrorReturnItem; onExceptionResumeNext,catch; onErrorResumeNext,onErrorResumeNext; onErrorReturn; onExceptionResumeNext,Catch; OnErrorResumeNext,catch,catch_exception; on_error_resume_next,on_error_resume_next; rescue_error,onErrorFlatMap; onErrorResumeNext; onErrorReturn; onExceptionResumeNext,catchError; catchErrorJustReturn
catchException,http://reactivex.io/documentation/operators/catch.html,Catch,catch*,,onErrorResumeNext; onErrorReturn; onExceptionResumeNext,onErrorResumeNext; onErrorReturn; onExceptionResumeNext,onErrorResumeNext; onErrorReturn; onErrorReturnItem; onExceptionResumeNext,catch; onErrorResumeNext,onErrorResumeNext; onErrorReturn; onExceptionResumeNext,Catch; OnErrorResumeNext,catch,catch_exception; on_error_resume_next,on_error_resume_next; rescue_error,onErrorFlatMap; onErrorResumeNext; onErrorReturn; onExceptionResumeNext,catchError; catchErrorJustReturn
collect,http://reactivex.io/documentation/operators/reduce.html,Reduce,into; iterate; reduce,iterate; reduce,collect; reduce,collect; reduce,collect; collectInto; reduce; reduceWith,reduce,collect; reduce,Aggregate,reduce,aggregate; expand; reduce,reduce,foldLeft; reduce,reduce
collect,http://reactivex.io/documentation/operators/filter.html,Filter,filter,filter,filter; ofType,filter; ofType,filter; ofType,filter; where,filter; ofType,OfType; Where,filter; where,filter; slice; where,select; select_with_index,collect; filter; filterNot; BlockingObservable.withFilter; withFilter,filter
collectInto,http://reactivex.io/documentation/operators/reduce.html,Reduce,into; iterate; reduce,iterate; reduce,collect; reduce,collect; reduce,collect; collectInto; reduce; reduceWith,reduce,collect; reduce,Aggregate,reduce,aggregate; expand; reduce,reduce,foldLeft; reduce,reduce
CombineLatest,http://reactivex.io/documentation/operators/combinelatest.html,CombineLatest,,combine_latest,combineLatest; withLatestFrom,combineLatest; withLatestFrom,combineLatest; combineLatestDelayError; withLatestFrom,combineLatest; withLatestFrom,combineLatest,CombineLatest,combineLatest; withLatestFrom,combine_latest; with_latest_from,combine_latest,combineLatest; combineLatestWith,combineLatest; withLatestFrom
combineLatestDelayError,http://reactivex.io/documentation/operators/combinelatest.html,CombineLatest,,combine_latest,combineLatest; withLatestFrom,combineLatest; withLatestFrom,combineLatest; combineLatestDelayError; withLatestFrom,combineLatest; withLatestFrom,combineLatest,CombineLatest,combineLatest; withLatestFrom,combine_latest; with_latest_from,combine_latest,combineLatest; combineLatestWith,combineLatest; withLatestFrom
combineLatestWith,http://reactivex.io/documentation/operators/combinelatest.html,CombineLatest,,combine_latest,combineLatest; withLatestFrom,combineLatest; withLatestFrom,combineLatest; combineLatestDelayError; withLatestFrom,combineLatest; withLatestFrom,combineLatest,CombineLatest,combineLatest; withLatestFrom,combine_latest; with_latest_from,combine_latest,combineLatest; combineLatestWith,combineLatest; withLatestFrom
Concat,http://reactivex.io/documentation/operators/concat.html,Concat,concat; concat*,concat,concat; concatWith,concat; concatWith,concat; concatArray; concatArrayDelayError; concatArrayEager; concatDelayError; concatEager; concatWith,concat; concatAll,concat; concatWith,Concat,concat; concatAll,concat; concatAll,concat; merge_all,concat; ++,concat
concat_all,http://reactivex.io/documentation/operators/flatmap.html,FlatMap,flatmap; mapcat,concat_map; flat_map,concatMap; flatMap; flatMapIterable; StringObservable.split; switchMap,concatMap; flatMap; flatMapIterable; StringObervable.split; switchMap,concatMap; concatMapDelayError; concatMapEager; concatMapEagerDelayError; concatMapIterable; flatMap; flatMapIterable; switchMap; switchMapDelayError,concatMap; concatMapObserver; flatMap; flatMapFirst; flatMapLatest; flatMapObserver; flatMapWithMaxConcurrency; for; forIn; manySelect; selectConcat; selectConcatObserver; selectMany; selectManyObserver; selectSwitch; selectSwitchFirst; selectWithMatchConcurrent; switchMap,concatMap; flatMap; flatMapIterable; switchMap,ManySelect; SelectMany,flatMap; flatMapTo; selectMany; flatMapLatest; concatMap; concatMapTo,concat_all; expand; flat_map; for_in; many_select; select_many; select_switch,flat_map; flat_map_with_index,concatMap; flatMap; flatMapIterable; flatMapIterableWith; flatMapWith; switchMap,flatMap; flatMapWithIndex; flatMapFirst; flatMapLatest
concatAll,http://reactivex.io/documentation/operators/concat.html,Concat,concat; concat*,concat,concat; concatWith,concat; concatWith,concat; concatArray; concatArrayDelayError; concatArrayEager; concatDelayError; concatEager; concatWith,concat; concatAll,concat; concatWith,Concat,concat; concatAll,concat; concatAll,concat; merge_all,concat; ++,concat
concatArray,http://reactivex.io/documentation/operators/concat.html,Concat,concat; concat*,concat,concat; concatWith,concat; concatWith,concat; concatArray; concatArrayDelayError; concatArrayEager; concatDelayError; concatEager; concatWith,concat; concatAll,concat; concatWith,Concat,concat; concatAll,concat; concatAll,concat; merge_all,concat; ++,concat
concatArrayDelayError,http://reactivex.io/documentation/operators/concat.html,Concat,concat; concat*,concat,concat; concatWith,concat; concatWith,concat; concatArray; concatArrayDelayError; concatArrayEager; concatDelayError; concatEager; concatWith,concat; concatAll,concat; concatWith,Concat,concat; concatAll,concat; concatAll,concat; merge_all,concat; ++,concat
concatArrayEager,http://reactivex.io/documentation/operators/concat.html,Concat,concat; concat*,concat,concat; concatWith,concat; concatWith,concat; concatArray; concatArrayDelayError; concatArrayEager; concatDelayError; concatEager; concatWith,concat; concatAll,concat; concatWith,Concat,concat; concatAll,concat; concatAll,concat; merge_all,concat; ++,concat
concatDelayError,http://reactivex.io/documentation/operators/concat.html,Concat,concat; concat*,concat,concat; concatWith,concat; concatWith,concat; concatArray; concatArrayDelayError; concatArrayEager; concatDelayError; concatEager; concatWith,concat; concatAll,concat; concatWith,Concat,concat; concatAll,concat; concatAll,concat; merge_all,concat; ++,concat
concatEager,http://reactivex.io/documentation/operators/concat.html,Concat,concat; concat*,concat,concat; concatWith,concat; concatWith,concat; concatArray; concatArrayDelayError; concatArrayEager; concatDelayError; concatEager; concatWith,concat; concatAll,concat; concatWith,Concat,concat; concatAll,concat; concatAll,concat; merge_all,concat; ++,concat
concatMap,http://reactivex.io/documentation/operators/flatmap.html,FlatMap,flatmap; mapcat,concat_map; flat_map,concatMap; flatMap; flatMapIterable; StringObservable.split; switchMap,concatMap; flatMap; flatMapIterable; StringObervable.split; switchMap,concatMap; concatMapDelayError; concatMapEager; concatMapEagerDelayError; concatMapIterable; flatMap; flatMapIterable; switchMap; switchMapDelayError,concatMap; concatMapObserver; flatMap; flatMapFirst; flatMapLatest; flatMapObserver; flatMapWithMaxConcurrency; for; forIn; manySelect; selectConcat; selectConcatObserver; selectMany; selectManyObserver; selectSwitch; selectSwitchFirst; selectWithMatchConcurrent; switchMap,concatMap; flatMap; flatMapIterable; switchMap,ManySelect; SelectMany,flatMap; flatMapTo; selectMany; flatMapLatest; concatMap; concatMapTo,concat_all; expand; flat_map; for_in; many_select; select_many; select_switch,flat_map; flat_map_with_index,concatMap; flatMap; flatMapIterable; flatMapIterableWith; flatMapWith; switchMap,flatMap; flatMapWithIndex; flatMapFirst; flatMapLatest
concatMapDelayError,http://reactivex.io/documentation/operators/flatmap.html,FlatMap,flatmap; mapcat,concat_map; flat_map,concatMap; flatMap; flatMapIterable; StringObservable.split; switchMap,concatMap; flatMap; flatMapIterable; StringObervable.split; switchMap,concatMap; concatMapDelayError; concatMapEager; concatMapEagerDelayError; concatMapIterable; flatMap; flatMapIterable; switchMap; switchMapDelayError,concatMap; concatMapObserver; flatMap; flatMapFirst; flatMapLatest; flatMapObserver; flatMapWithMaxConcurrency; for; forIn; manySelect; selectConcat; selectConcatObserver; selectMany; selectManyObserver; selectSwitch; selectSwitchFirst; selectWithMatchConcurrent; switchMap,concatMap; flatMap; flatMapIterable; switchMap,ManySelect; SelectMany,flatMap; flatMapTo; selectMany; flatMapLatest; concatMap; concatMapTo,concat_all; expand; flat_map; for_in; many_select; select_many; select_switch,flat_map; flat_map_with_index,concatMap; flatMap; flatMapIterable; flatMapIterableWith; flatMapWith; switchMap,flatMap; flatMapWithIndex; flatMapFirst; flatMapLatest
concatMapEager,http://reactivex.io/documentation/operators/flatmap.html,FlatMap,flatmap; mapcat,concat_map; flat_map,concatMap; flatMap; flatMapIterable; StringObservable.split; switchMap,concatMap; flatMap; flatMapIterable; StringObervable.split; switchMap,concatMap; concatMapDelayError; concatMapEager; concatMapEagerDelayError; concatMapIterable; flatMap; flatMapIterable; switchMap; switchMapDelayError,concatMap; concatMapObserver; flatMap; flatMapFirst; flatMapLatest; flatMapObserver; flatMapWithMaxConcurrency; for; forIn; manySelect; selectConcat; selectConcatObserver; selectMany; selectManyObserver; selectSwitch; selectSwitchFirst; selectWithMatchConcurrent; switchMap,concatMap; flatMap; flatMapIterable; switchMap,ManySelect; SelectMany,flatMap; flatMapTo; selectMany; flatMapLatest; concatMap; concatMapTo,concat_all; expand; flat_map; for_in; many_select; select_many; select_switch,flat_map; flat_map_with_index,concatMap; flatMap; flatMapIterable; flatMapIterableWith; flatMapWith; switchMap,flatMap; flatMapWithIndex; flatMapFirst; flatMapLatest
concatMapEagerDelayError,http://reactivex.io/documentation/operators/flatmap.html,FlatMap,flatmap; mapcat,concat_map; flat_map,concatMap; flatMap; flatMapIterable; StringObservable.split; switchMap,concatMap; flatMap; flatMapIterable; StringObervable.split; switchMap,concatMap; concatMapDelayError; concatMapEager; concatMapEagerDelayError; concatMapIterable; flatMap; flatMapIterable; switchMap; switchMapDelayError,concatMap; concatMapObserver; flatMap; flatMapFirst; flatMapLatest; flatMapObserver; flatMapWithMaxConcurrency; for; forIn; manySelect; selectConcat; selectConcatObserver; selectMany; selectManyObserver; selectSwitch; selectSwitchFirst; selectWithMatchConcurrent; switchMap,concatMap; flatMap; flatMapIterable; switchMap,ManySelect; SelectMany,flatMap; flatMapTo; selectMany; flatMapLatest; concatMap; concatMapTo,concat_all; expand; flat_map; for_in; many_select; select_many; select_switch,flat_map; flat_map_with_index,concatMap; flatMap; flatMapIterable; flatMapIterableWith; flatMapWith; switchMap,flatMap; flatMapWithIndex; flatMapFirst; flatMapLatest
concatMapIterable,http://reactivex.io/documentation/operators/flatmap.html,FlatMap,flatmap; mapcat,concat_map; flat_map,concatMap; flatMap; flatMapIterable; StringObservable.split; switchMap,concatMap; flatMap; flatMapIterable; StringObervable.split; switchMap,concatMap; concatMapDelayError; concatMapEager; concatMapEagerDelayError; concatMapIterable; flatMap; flatMapIterable; switchMap; switchMapDelayError,concatMap; concatMapObserver; flatMap; flatMapFirst; flatMapLatest; flatMapObserver; flatMapWithMaxConcurrency; for; forIn; manySelect; selectConcat; selectConcatObserver; selectMany; selectManyObserver; selectSwitch; selectSwitchFirst; selectWithMatchConcurrent; switchMap,concatMap; flatMap; flatMapIterable; switchMap,ManySelect; SelectMany,flatMap; flatMapTo; selectMany; flatMapLatest; concatMap; concatMapTo,concat_all; expand; flat_map; for_in; many_select; select_many; select_switch,flat_map; flat_map_with_index,concatMap; flatMap; flatMapIterable; flatMapIterableWith; flatMapWith; switchMap,flatMap; flatMapWithIndex; flatMapFirst; flatMapLatest
concatMapObserver,http://reactivex.io/documentation/operators/flatmap.html,FlatMap,flatmap; mapcat,concat_map; flat_map,concatMap; flatMap; flatMapIterable; StringObservable.split; switchMap,concatMap; flatMap; flatMapIterable; StringObervable.split; switchMap,concatMap; concatMapDelayError; concatMapEager; concatMapEagerDelayError; concatMapIterable; flatMap; flatMapIterable; switchMap; switchMapDelayError,concatMap; concatMapObserver; flatMap; flatMapFirst; flatMapLatest; flatMapObserver; flatMapWithMaxConcurrency; for; forIn; manySelect; selectConcat; selectConcatObserver; selectMany; selectManyObserver; selectSwitch; selectSwitchFirst; selectWithMatchConcurrent; switchMap,concatMap; flatMap; flatMapIterable; switchMap,ManySelect; SelectMany,flatMap; flatMapTo; selectMany; flatMapLatest; concatMap; concatMapTo,concat_all; expand; flat_map; for_in; many_select; select_many; select_switch,flat_map; flat_map_with_index,concatMap; flatMap; flatMapIterable; flatMapIterableWith; flatMapWith; switchMap,flatMap; flatMapWithIndex; flatMapFirst; flatMapLatest
concatMapTo,http://reactivex.io/documentation/operators/flatmap.html,FlatMap,flatmap; mapcat,concat_map; flat_map,concatMap; flatMap; flatMapIterable; StringObservable.split; switchMap,concatMap; flatMap; flatMapIterable; StringObervable.split; switchMap,concatMap; concatMapDelayError; concatMapEager; concatMapEagerDelayError; concatMapIterable; flatMap; flatMapIterable; switchMap; switchMapDelayError,concatMap; concatMapObserver; flatMap; flatMapFirst; flatMapLatest; flatMapObserver; flatMapWithMaxConcurrency; for; forIn; manySelect; selectConcat; selectConcatObserver; selectMany; selectManyObserver; selectSwitch; selectSwitchFirst; selectWithMatchConcurrent; switchMap,concatMap; flatMap; flatMapIterable; switchMap,ManySelect; SelectMany,flatMap; flatMapTo; selectMany; flatMapLatest; concatMap; concatMapTo,concat_all; expand; flat_map; for_in; many_select; select_many; select_switch,flat_map; flat_map_with_index,concatMap; flatMap; flatMapIterable; flatMapIterableWith; flatMapWith; switchMap,flatMap; flatMapWithIndex; flatMapFirst; flatMapLatest
concatWith,http://reactivex.io/documentation/operators/concat.html,Concat,concat; concat*,concat,concat; concatWith,concat; concatWith,concat; concatArray; concatArrayDelayError; concatArrayEager; concatDelayError; concatEager; concatWith,concat; concatAll,concat; concatWith,Concat,concat; concatAll,concat; concatAll,concat; merge_all,concat; ++,concat
Connect,http://reactivex.io/documentation/operators/connect.html,Connect,,connect; connect_forever,connect,connect,connect,connect,connect,Connect,,connect,,connect,
connect_forever,http://reactivex.io/documentation/operators/connect.html,Connect,,connect; connect_forever,connect,connect,connect,connect,connect,Connect,,connect,,connect,
cons,http://reactivex.io/documentation/operators/startwith.html,StartWith,cons,start_with,startWith,startWith,startWith,startWith,startWith,StartWith,startWith; startWithArray,start_with,start_with,+:,startWith
Contains,http://reactivex.io/documentation/operators/contains.html,Contains,some,,contains; exists; isEmpty,contains; exists; isEmpty,any; contains; isEmpty,contains; findIndex; indexOf; isEmpty,contains; exists,Any; Contains,isEmpty,contains; find; find_index; is_empty; some,any?; contains?; none?,contains; exists; isEmpty,
controlled,http://reactivex.io/documentation/operators/backpressure.html,,,,onBackpressureBuffer; onBackpressureDrop; onBackpressureLatest,onBackpressureBuffer; onBackpressureDrop; onBackpressureLatest,Flowable,controlled; pausable; pausableBuffered; stopAndWait; windowed,,,,,,onBackpressureBuffer; onBackpressureDrop; onBackpressureLatest,
Count,http://reactivex.io/documentation/operators/count.html,Count,count; longCount,count,count; countLong,count; countLong,,count,count,Count; LongCount,count,count,count,count; length; longCount; size,
countLong,http://reactivex.io/documentation/operators/count.html,Count,count; longCount,count,count; countLong,count; countLong,,count,count,Count; LongCount,count,count,count,count; length; longCount; size,
Create,http://reactivex.io/documentation/operators/create.html,Create,generator,,create,create,create; generate; unsafeCreate,create; createWithDisposable; generate; generateWithAbsoluteTime; generateWithRelativeTime,create,Create; Generate,create,create; generate; generate_with_relative_time,create; generate,apply; create,create; generate
cycle,http://reactivex.io/documentation/operators/repeat.html,Repeat,cycle,repeat,doWhile; repeat; repeatWhen; whileDo,doWhile; repeat; repeatWhen; whileDo,repeat; repeatUntil; repeatWhen,doWhile; repeat; while,doWhile; repeat; repeatWhen; whileDo,Repeat,repeat; repeatWhen,do_while; repeat; while_do,repeat; repeat_infinitely,repeat; repeatWhen,repeatElement
Debounce,http://reactivex.io/documentation/operators/debounce.html,Debounce,,,debounce; throttleWithTimeout,debounce; throttleWithTimeout,debounce; throttleWithTimeout,debounce; debounceWithSelector; throttleWithTimeout,debounce; throttleWithTimeout,Throttle,throttle,debounce; throttle_with_selector; throttle_with_timeout,,debounce; throttleWithTimeout,debounce; throttle
decode,http://reactivex.io/documentation/operators/from.html,From,seq,from,decode; from; fromAction; fromCallable; fromFunc0; fromRunnable; runAsync,decode; from; fromAction; fromCallable; fromFunc0; fromRunnable; runAsync,fromArray; fromCallable; fromFuture; fromIterable; fromPublisher,from; fromCallback; fromEvent; fromEventPattern; fromNodeCallback; fromPromise; of; ofArrayChanges; ofObjectChanges; ofWithScheduler; pairs,asObservable; from,AsObservable; FromAsyncPattern; FromEvent; FromEventPattern; ToObservable,fromArray; fromIterator; asObservable; fromPromise,from_array; from_callback; from_future; from_iterable; from_list; from_marbles; of,of_array; of_enumerable; of_enumerator,from; items,from; toObservable
DefaultIfEmpty,http://reactivex.io/documentation/operators/defaultifempty.html,DefaultIfEmpty,,,defaultIfEmpty; switchIfEmpty,defaultIfEmpty; switchIfEmpty,defaultIfEmpty; switchIfEmpty,defaultIfEmpty,defaultIfEmpty,DefaultIfEmpty,defaultIfEmpty,default_if_empty,default_if_empty,orElse; switchIfEmpty,
Defer,http://reactivex.io/documentation/operators/defer.html,Defer,,defer,defer; ifThen; switchCase,defer; ifThen; switchCase,defer,case; defer; if; switchCase,defer; switchCase,Defer,defer,case; defer; if_then; switch_case,defer,defer,defer
deferFuture,http://reactivex.io/documentation/operators/start.html,Start,,,asyncAction; asyncFunc; deferFuture; forEachFuture; fromAction; fromCallable; fromFunc0; fromRunnable; start; startFuture; toAsync,asyncAction; asyncFunc; deferFuture; forEachFuture; fromAction; fromCallable; fromFunc0; fromRunnable; start; startFuture; toAsync,fromCallable,start; startAsync; toAsync,asyncAction; asyncFunc; deferFuture; forEachFuture; fromAction; fromCallable; fromFunc0; fromRunnable; start; startFuture; toAsync,Start; ToAsync,start,start; start_async; to_async,,,
Delay,http://reactivex.io/documentation/operators/delay.html,Delay,,,delay; delaySubscription,delay; delaySubscription,delay; delaySubscription,delay; delaySubscription; delayWithSelector,delay; delaySubscription,Delay; DelaySubscription,delay,delay; delay_subscription; delay_with_selector,,delay; delaySubscription,delaySubscription
delaySubscription,http://reactivex.io/documentation/operators/delay.html,Delay,,,delay; delaySubscription,delay; delaySubscription,delay; delaySubscription,delay; delaySubscription; delayWithSelector,delay; delaySubscription,Delay; DelaySubscription,delay,delay; delay_subscription; delay_with_selector,,delay; delaySubscription,delaySubscription
delayWithSelector,http://reactivex.io/documentation/operators/delay.html,Delay,,,delay; delaySubscription,delay; delaySubscription,delay; delaySubscription,delay; delaySubscription; delayWithSelector,delay; delaySubscription,Delay; DelaySubscription,delay,delay; delay_subscription; delay_with_selector,,delay; delaySubscription,delaySubscription
Dematerialize,http://reactivex.io/documentation/operators/materialize-dematerialize.html,Materialize/Dematerialize,,,dematerialize; materialize,dematerialize; materialize,dematerialize; materialize,dematerialize,dematerialize; materialize,dematerialize; materialize,materialize; dematerialize,dematerialize; materialize,dematerialize; materialize,,
Distinct,http://reactivex.io/documentation/operators/distinct.html,Distinct,distinct,distinct_until_changed,distinct; distinctUntilChanged,distinct; distinctUntilChanged,distinct; distinctUntilChanged,distinct; distinctUntilChanged,distinct; distinctUntilChanged,Distinct; DistinctUntilChanged,distinct; distinctKey; distinctUntilChanged; distinctUntilKeyChanged,distinct; distinct_until_changed,distinct; distinct_until_changed,distinct; distinctUntilChanged,distinctUntilChanged
distinctKey,http://reactivex.io/documentation/operators/distinct.html,Distinct,distinct,distinct_until_changed,distinct; distinctUntilChanged,distinct; distinctUntilChanged,distinct; distinctUntilChanged,distinct; distinctUntilChanged,distinct; distinctUntilChanged,Distinct; DistinctUntilChanged,distinct; distinctKey; distinctUntilChanged; distinctUntilKeyChanged,distinct; distinct_until_changed,distinct; distinct_until_changed,distinct; distinctUntilChanged,distinctUntilChanged
distinctUntilChanged,http://reactivex.io/documentation/operators/distinct.html,Distinct,distinct,distinct_until_changed,distinct; distinctUntilChanged,distinct; distinctUntilChanged,distinct; distinctUntilChanged,distinct; distinctUntilChanged,distinct; distinctUntilChanged,Distinct; DistinctUntilChanged,distinct; distinctKey; distinctUntilChanged; distinctUntilKeyChanged,distinct; distinct_until_changed,distinct; distinct_until_changed,distinct; distinctUntilChanged,distinctUntilChanged
distinctUntilKeyChanged,http://reactivex.io/documentation/operators/distinct.html,Distinct,distinct,distinct_until_changed,distinct; distinctUntilChanged,distinct; distinctUntilChanged,distinct; distinctUntilChanged,distinct; distinctUntilChanged,distinct; distinctUntilChanged,Distinct; DistinctUntilChanged,distinct; distinctKey; distinctUntilChanged; distinctUntilKeyChanged,distinct; distinct_until_changed,distinct; distinct_until_changed,distinct; distinctUntilChanged,distinctUntilChanged
Do,http://reactivex.io/documentation/operators/do.html,Do,do; finally,finally,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo; doAfterTerminate,doAfterTerminate; doOnComplete; doOnDispose; doOnEach; doOnError; doOnLifecycle; doOnNext; doOnSubscribe; doOnTerminate; onTerminateDetach,do; doOnCompleted; doOnError; doOnNext; finally; tap; tapOnCompleted; tapOnError; tapOnNext,doOnCompleted; doOnEach; doOnError; doOnNext; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,Do; Finally,do; doOnError; doOnCompleted; finally,do_action; finally_action; tap,ensures; tap,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,doOn
doAction,http://reactivex.io/documentation/operators/do.html,Do,do; finally,finally,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo; doAfterTerminate,doAfterTerminate; doOnComplete; doOnDispose; doOnEach; doOnError; doOnLifecycle; doOnNext; doOnSubscribe; doOnTerminate; onTerminateDetach,do; doOnCompleted; doOnError; doOnNext; finally; tap; tapOnCompleted; tapOnError; tapOnNext,doOnCompleted; doOnEach; doOnError; doOnNext; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,Do; Finally,do; doOnError; doOnCompleted; finally,do_action; finally_action; tap,ensures; tap,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,doOn
doAfterTerminate,http://reactivex.io/documentation/operators/do.html,Do,do; finally,finally,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo; doAfterTerminate,doAfterTerminate; doOnComplete; doOnDispose; doOnEach; doOnError; doOnLifecycle; doOnNext; doOnSubscribe; doOnTerminate; onTerminateDetach,do; doOnCompleted; doOnError; doOnNext; finally; tap; tapOnCompleted; tapOnError; tapOnNext,doOnCompleted; doOnEach; doOnError; doOnNext; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,Do; Finally,do; doOnError; doOnCompleted; finally,do_action; finally_action; tap,ensures; tap,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,doOn
doOnComplete,http://reactivex.io/documentation/operators/do.html,Do,do; finally,finally,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo; doAfterTerminate,doAfterTerminate; doOnComplete; doOnDispose; doOnEach; doOnError; doOnLifecycle; doOnNext; doOnSubscribe; doOnTerminate; onTerminateDetach,do; doOnCompleted; doOnError; doOnNext; finally; tap; tapOnCompleted; tapOnError; tapOnNext,doOnCompleted; doOnEach; doOnError; doOnNext; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,Do; Finally,do; doOnError; doOnCompleted; finally,do_action; finally_action; tap,ensures; tap,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,doOn
doOnCompleted,http://reactivex.io/documentation/operators/do.html,Do,do; finally,finally,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo; doAfterTerminate,doAfterTerminate; doOnComplete; doOnDispose; doOnEach; doOnError; doOnLifecycle; doOnNext; doOnSubscribe; doOnTerminate; onTerminateDetach,do; doOnCompleted; doOnError; doOnNext; finally; tap; tapOnCompleted; tapOnError; tapOnNext,doOnCompleted; doOnEach; doOnError; doOnNext; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,Do; Finally,do; doOnError; doOnCompleted; finally,do_action; finally_action; tap,ensures; tap,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,doOn
doOnDispose,http://reactivex.io/documentation/operators/do.html,Do,do; finally,finally,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo; doAfterTerminate,doAfterTerminate; doOnComplete; doOnDispose; doOnEach; doOnError; doOnLifecycle; doOnNext; doOnSubscribe; doOnTerminate; onTerminateDetach,do; doOnCompleted; doOnError; doOnNext; finally; tap; tapOnCompleted; tapOnError; tapOnNext,doOnCompleted; doOnEach; doOnError; doOnNext; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,Do; Finally,do; doOnError; doOnCompleted; finally,do_action; finally_action; tap,ensures; tap,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,doOn
doOnEach,http://reactivex.io/documentation/operators/do.html,Do,do; finally,finally,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo; doAfterTerminate,doAfterTerminate; doOnComplete; doOnDispose; doOnEach; doOnError; doOnLifecycle; doOnNext; doOnSubscribe; doOnTerminate; onTerminateDetach,do; doOnCompleted; doOnError; doOnNext; finally; tap; tapOnCompleted; tapOnError; tapOnNext,doOnCompleted; doOnEach; doOnError; doOnNext; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,Do; Finally,do; doOnError; doOnCompleted; finally,do_action; finally_action; tap,ensures; tap,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,doOn
doOnError,http://reactivex.io/documentation/operators/do.html,Do,do; finally,finally,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo; doAfterTerminate,doAfterTerminate; doOnComplete; doOnDispose; doOnEach; doOnError; doOnLifecycle; doOnNext; doOnSubscribe; doOnTerminate; onTerminateDetach,do; doOnCompleted; doOnError; doOnNext; finally; tap; tapOnCompleted; tapOnError; tapOnNext,doOnCompleted; doOnEach; doOnError; doOnNext; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,Do; Finally,do; doOnError; doOnCompleted; finally,do_action; finally_action; tap,ensures; tap,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,doOn
doOnLifecycle,http://reactivex.io/documentation/operators/do.html,Do,do; finally,finally,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo; doAfterTerminate,doAfterTerminate; doOnComplete; doOnDispose; doOnEach; doOnError; doOnLifecycle; doOnNext; doOnSubscribe; doOnTerminate; onTerminateDetach,do; doOnCompleted; doOnError; doOnNext; finally; tap; tapOnCompleted; tapOnError; tapOnNext,doOnCompleted; doOnEach; doOnError; doOnNext; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,Do; Finally,do; doOnError; doOnCompleted; finally,do_action; finally_action; tap,ensures; tap,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,doOn
doOnNext,http://reactivex.io/documentation/operators/do.html,Do,do; finally,finally,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo; doAfterTerminate,doAfterTerminate; doOnComplete; doOnDispose; doOnEach; doOnError; doOnLifecycle; doOnNext; doOnSubscribe; doOnTerminate; onTerminateDetach,do; doOnCompleted; doOnError; doOnNext; finally; tap; tapOnCompleted; tapOnError; tapOnNext,doOnCompleted; doOnEach; doOnError; doOnNext; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,Do; Finally,do; doOnError; doOnCompleted; finally,do_action; finally_action; tap,ensures; tap,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,doOn
doOnRequest,http://reactivex.io/documentation/operators/do.html,Do,do; finally,finally,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo; doAfterTerminate,doAfterTerminate; doOnComplete; doOnDispose; doOnEach; doOnError; doOnLifecycle; doOnNext; doOnSubscribe; doOnTerminate; onTerminateDetach,do; doOnCompleted; doOnError; doOnNext; finally; tap; tapOnCompleted; tapOnError; tapOnNext,doOnCompleted; doOnEach; doOnError; doOnNext; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,Do; Finally,do; doOnError; doOnCompleted; finally,do_action; finally_action; tap,ensures; tap,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,doOn
doOnSubscribe,http://reactivex.io/documentation/operators/do.html,Do,do; finally,finally,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo; doAfterTerminate,doAfterTerminate; doOnComplete; doOnDispose; doOnEach; doOnError; doOnLifecycle; doOnNext; doOnSubscribe; doOnTerminate; onTerminateDetach,do; doOnCompleted; doOnError; doOnNext; finally; tap; tapOnCompleted; tapOnError; tapOnNext,doOnCompleted; doOnEach; doOnError; doOnNext; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,Do; Finally,do; doOnError; doOnCompleted; finally,do_action; finally_action; tap,ensures; tap,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,doOn
doOnTerminate,http://reactivex.io/documentation/operators/do.html,Do,do; finally,finally,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo; doAfterTerminate,doAfterTerminate; doOnComplete; doOnDispose; doOnEach; doOnError; doOnLifecycle; doOnNext; doOnSubscribe; doOnTerminate; onTerminateDetach,do; doOnCompleted; doOnError; doOnNext; finally; tap; tapOnCompleted; tapOnError; tapOnNext,doOnCompleted; doOnEach; doOnError; doOnNext; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,Do; Finally,do; doOnError; doOnCompleted; finally,do_action; finally_action; tap,ensures; tap,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,doOn
doOnUnsubscribe,http://reactivex.io/documentation/operators/do.html,Do,do; finally,finally,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo; doAfterTerminate,doAfterTerminate; doOnComplete; doOnDispose; doOnEach; doOnError; doOnLifecycle; doOnNext; doOnSubscribe; doOnTerminate; onTerminateDetach,do; doOnCompleted; doOnError; doOnNext; finally; tap; tapOnCompleted; tapOnError; tapOnNext,doOnCompleted; doOnEach; doOnError; doOnNext; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,Do; Finally,do; doOnError; doOnCompleted; finally,do_action; finally_action; tap,ensures; tap,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,doOn
doseq,http://reactivex.io/documentation/operators/subscribe.html,Subscribe,BlockingObservable.doseq; subscribe,subscribe,BlockingObservable.forEach; forEach; subscribe,BlockingObservable.forEach; forEach; subscribe,blockingForEach; blockingSubscribe; forEachWhile; safeSubscribe; subscribe,forEach; subscribe; subscribeOnCompleted; subscribeOnError; subscribeOnNext,BlockingObservable.forEach; forEach; subscribe,ForEach; Subscribe,subscribe,BlockingObservable.for_each; subscribe,subscribe,BlockingObservable.foreach; forEach; subscribe,subscribe
doWhile,http://reactivex.io/documentation/operators/repeat.html,Repeat,cycle,repeat,doWhile; repeat; repeatWhen; whileDo,doWhile; repeat; repeatWhen; whileDo,repeat; repeatUntil; repeatWhen,doWhile; repeat; while,doWhile; repeat; repeatWhen; whileDo,Repeat,repeat; repeatWhen,do_while; repeat; while_do,repeat; repeat_infinitely,repeat; repeatWhen,repeatElement
drop,http://reactivex.io/documentation/operators/skip.html,Skip,drop,skip,skip,skip,skip,skip; skipUntilWithTime,skip,Skip,skip,skip; skip_with_time,skip,drop,skip
dropRight,http://reactivex.io/documentation/operators/skiplast.html,SkipLast,,,skipLast,skipLast,skipLast,skipLast; skipLastWithTime,skipLast,SkipLast,skipLast,skip_last; skip_last_with_time,skip_last,dropRight,
dropUntil,http://reactivex.io/documentation/operators/skipuntil.html,SkipUntil,,skip_until,skipUntil,skipUntil,skipUntil,skipUntil,skipUntil,SkipUntil,skipUntil,skipUntil; skipUntil_with_time,skipUntil,dropUntil,skipUntil
dropWhile,http://reactivex.io/documentation/operators/skipwhile.html,SkipWhile,drop-while,,skipWhile,skipWhile,skipWhile,skipWhile,skipWhile,SkipWhile,skipWhile; skipWhileWithIndex,skip_while,skip_while; skip_while_with_index,dropWhile,skipWhile; skipWhileWithIndex
ElementAt,http://reactivex.io/documentation/operators/elementat.html,ElementAt,nth,,elementAt; elementAtOrDefault,elementAt; elementAtOrDefault,elementAt,elementAt,elementAt; elementAtOrDefault,ElementAt; ElementAtOrDefault,,element_at; element_at_or_default,element_at; element_at_or_default,elementAt; elementAtOrDefault,elementAt
ElementAtOrDefault,http://reactivex.io/documentation/operators/elementat.html,ElementAt,nth,,elementAt; elementAtOrDefault,elementAt; elementAtOrDefault,elementAt,elementAt,elementAt; elementAtOrDefault,ElementAt; ElementAtOrDefault,,element_at; element_at_or_default,element_at; element_at_or_default,elementAt; elementAtOrDefault,elementAt
Empty,http://reactivex.io/documentation/operators/empty-never-throw.html,Empty/Never/Throw,empty; never; throw,empty; never; throw,empty; never; error,empty; never; error,empty; never; error,empty; never; throw,empty; never; error; asObservable,Empty; Never; Throw,empty; never; error,empty; never; throw; throw_exception,empty; never; raise_error,empty; never; error,empty; never; failWith
emptyObservable,http://reactivex.io/documentation/operators/empty-never-throw.html,Empty/Never/Throw,empty; never; throw,empty; never; throw,empty; never; error,empty; never; error,empty; never; error,empty; never; throw,empty; never; error; asObservable,Empty; Never; Throw,empty; never; error,empty; never; throw; throw_exception,empty; never; raise_error,empty; never; error,empty; never; failWith
empty?,http://reactivex.io/documentation/operators/contains.html,Contains,some,,contains; exists; isEmpty,contains; exists; isEmpty,any; contains; isEmpty,contains; findIndex; indexOf; isEmpty,contains; exists,Any; Contains,isEmpty,contains; find; find_index; is_empty; some,any?; contains?; none?,contains; exists; isEmpty,
encode,http://reactivex.io/documentation/operators/map.html,Map,keep; keep-indexed; map; map-indexed,map,byLine; cast; encode; map,byLine; cast; encode; map,cast; map,map; pluck; select,cast; map,Cast; Select,map; mapWithIndex; mapTo; select; pluck,map; pluck; select,map; map_with_index,map,map; mapWithIndex
ensures,http://reactivex.io/documentation/operators/do.html,Do,do; finally,finally,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo; doAfterTerminate,doAfterTerminate; doOnComplete; doOnDispose; doOnEach; doOnError; doOnLifecycle; doOnNext; doOnSubscribe; doOnTerminate; onTerminateDetach,do; doOnCompleted; doOnError; doOnNext; finally; tap; tapOnCompleted; tapOnError; tapOnNext,doOnCompleted; doOnEach; doOnError; doOnNext; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,Do; Finally,do; doOnError; doOnCompleted; finally,do_action; finally_action; tap,ensures; tap,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,doOn
error,http://reactivex.io/documentation/operators/empty-never-throw.html,Empty/Never/Throw,empty; never; throw,empty; never; throw,empty; never; error,empty; never; error,empty; never; error,empty; never; throw,empty; never; error; asObservable,Empty; Never; Throw,empty; never; error,empty; never; throw; throw_exception,empty; never; raise_error,empty; never; error,empty; never; failWith
every,http://reactivex.io/documentation/operators/all.html,All,every,,all,all,all,every; jortSort; jortSortUntil,all,All,,all; every,all?,forall,
exclusive,http://reactivex.io/documentation/operators/switch.html,Switch,,switch_on_next,switchOnNext,switchOnNext,switchOnNext; switchOnNextDelayError,switch,switchOnNext,Switch,switch; switchFirst,exclusive; select_switch; switch_latest,latest,switch,switchLatest
exists,http://reactivex.io/documentation/operators/contains.html,Contains,some,,contains; exists; isEmpty,contains; exists; isEmpty,any; contains; isEmpty,contains; findIndex; indexOf; isEmpty,contains; exists,Any; Contains,isEmpty,contains; find; find_index; is_empty; some,any?; contains?; none?,contains; exists; isEmpty,
expand,http://reactivex.io/documentation/operators/flatmap.html,FlatMap,flatmap; mapcat,concat_map; flat_map,concatMap; flatMap; flatMapIterable; StringObservable.split; switchMap,concatMap; flatMap; flatMapIterable; StringObervable.split; switchMap,concatMap; concatMapDelayError; concatMapEager; concatMapEagerDelayError; concatMapIterable; flatMap; flatMapIterable; switchMap; switchMapDelayError,concatMap; concatMapObserver; flatMap; flatMapFirst; flatMapLatest; flatMapObserver; flatMapWithMaxConcurrency; for; forIn; manySelect; selectConcat; selectConcatObserver; selectMany; selectManyObserver; selectSwitch; selectSwitchFirst; selectWithMatchConcurrent; switchMap,concatMap; flatMap; flatMapIterable; switchMap,ManySelect; SelectMany,flatMap; flatMapTo; selectMany; flatMapLatest; concatMap; concatMapTo,concat_all; expand; flat_map; for_in; many_select; select_many; select_switch,flat_map; flat_map_with_index,concatMap; flatMap; flatMapIterable; flatMapIterableWith; flatMapWith; switchMap,flatMap; flatMapWithIndex; flatMapFirst; flatMapLatest
failWith,http://reactivex.io/documentation/operators/empty-never-throw.html,Empty/Never/Throw,empty; never; throw,empty; never; throw,empty; never; error,empty; never; error,empty; never; error,empty; never; throw,empty; never; error; asObservable,Empty; Never; Throw,empty; never; error,empty; never; throw; throw_exception,empty; never; raise_error,empty; never; error,empty; never; failWith
Filter,http://reactivex.io/documentation/operators/filter.html,Filter,filter,filter,filter; ofType,filter; ofType,filter; ofType,filter; where,filter; ofType,OfType; Where,filter; where,filter; slice; where,select; select_with_index,collect; filter; filterNot; BlockingObservable.withFilter; withFilter,filter
filterNot,http://reactivex.io/documentation/operators/filter.html,Filter,filter,filter,filter; ofType,filter; ofType,filter; ofType,filter; where,filter; ofType,OfType; Where,filter; where,filter; slice; where,select; select_with_index,collect; filter; filterNot; BlockingObservable.withFilter; withFilter,filter
Finally,http://reactivex.io/documentation/operators/do.html,Do,do; finally,finally,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo; doAfterTerminate,doAfterTerminate; doOnComplete; doOnDispose; doOnEach; doOnError; doOnLifecycle; doOnNext; doOnSubscribe; doOnTerminate; onTerminateDetach,do; doOnCompleted; doOnError; doOnNext; finally; tap; tapOnCompleted; tapOnError; tapOnNext,doOnCompleted; doOnEach; doOnError; doOnNext; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,Do; Finally,do; doOnError; doOnCompleted; finally,do_action; finally_action; tap,ensures; tap,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,doOn
finallyAction,http://reactivex.io/documentation/operators/do.html,Do,do; finally,finally,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo; doAfterTerminate,doAfterTerminate; doOnComplete; doOnDispose; doOnEach; doOnError; doOnLifecycle; doOnNext; doOnSubscribe; doOnTerminate; onTerminateDetach,do; doOnCompleted; doOnError; doOnNext; finally; tap; tapOnCompleted; tapOnError; tapOnNext,doOnCompleted; doOnEach; doOnError; doOnNext; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,Do; Finally,do; doOnError; doOnCompleted; finally,do_action; finally_action; tap,ensures; tap,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,doOn
finallyDo,http://reactivex.io/documentation/operators/do.html,Do,do; finally,finally,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo; doAfterTerminate,doAfterTerminate; doOnComplete; doOnDispose; doOnEach; doOnError; doOnLifecycle; doOnNext; doOnSubscribe; doOnTerminate; onTerminateDetach,do; doOnCompleted; doOnError; doOnNext; finally; tap; tapOnCompleted; tapOnError; tapOnNext,doOnCompleted; doOnEach; doOnError; doOnNext; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,Do; Finally,do; doOnError; doOnCompleted; finally,do_action; finally_action; tap,ensures; tap,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,doOn
find,http://reactivex.io/documentation/operators/contains.html,Contains,some,,contains; exists; isEmpty,contains; exists; isEmpty,any; contains; isEmpty,contains; findIndex; indexOf; isEmpty,contains; exists,Any; Contains,isEmpty,contains; find; find_index; is_empty; some,any?; contains?; none?,contains; exists; isEmpty,
findIndex,http://reactivex.io/documentation/operators/contains.html,Contains,some,,contains; exists; isEmpty,contains; exists; isEmpty,any; contains; isEmpty,contains; findIndex; indexOf; isEmpty,contains; exists,Any; Contains,isEmpty,contains; find; find_index; is_empty; some,any?; contains?; none?,contains; exists; isEmpty,
First,http://reactivex.io/documentation/operators/first.html,First,first; single,first,first; firstOrDefault; latest; mostRecent; next; single; singleOrDefault; takeFirst,first; firstOrDefault; latest; mostRecent; next; single; singleOrDefault; takeFirst,blockingFirst; blockingSingle; first; firstElement; single; singleElement; takeFirst,find; findIndex; first; single,first; firstOrDefault; mostRecent; single; singleOrDefault; takeFirst,First; FirstOrDefault; Latest; Next; Single; SingleOrDefault,,first; first_or_default; single; single_or_default,first; first_or_default; single; single_or_default,first; firstOrElse; head; headOption; headOrElse; latest; next; single; singleOption; singleOrElse,single
firstElement,http://reactivex.io/documentation/operators/first.html,First,first; single,first,first; firstOrDefault; latest; mostRecent; next; single; singleOrDefault; takeFirst,first; firstOrDefault; latest; mostRecent; next; single; singleOrDefault; takeFirst,blockingFirst; blockingSingle; first; firstElement; single; singleElement; takeFirst,find; findIndex; first; single,first; firstOrDefault; mostRecent; single; singleOrDefault; takeFirst,First; FirstOrDefault; Latest; Next; Single; SingleOrDefault,,first; first_or_default; single; single_or_default,first; first_or_default; single; single_or_default,first; firstOrElse; head; headOption; headOrElse; latest; next; single; singleOption; singleOrElse,single
FirstOrDefault,http://reactivex.io/documentation/operators/first.html,First,first; single,first,first; firstOrDefault; latest; mostRecent; next; single; singleOrDefault; takeFirst,first; firstOrDefault; latest; mostRecent; next; single; singleOrDefault; takeFirst,blockingFirst; blockingSingle; first; firstElement; single; singleElement; takeFirst,find; findIndex; first; single,first; firstOrDefault; mostRecent; single; singleOrDefault; takeFirst,First; FirstOrDefault; Latest; Next; Single; SingleOrDefault,,first; first_or_default; single; single_or_default,first; first_or_default; single; single_or_default,first; firstOrElse; head; headOption; headOrElse; latest; next; single; singleOption; singleOrElse,single
firstOrElse,http://reactivex.io/documentation/operators/first.html,First,first; single,first,first; firstOrDefault; latest; mostRecent; next; single; singleOrDefault; takeFirst,first; firstOrDefault; latest; mostRecent; next; single; singleOrDefault; takeFirst,blockingFirst; blockingSingle; first; firstElement; single; singleElement; takeFirst,find; findIndex; first; single,first; firstOrDefault; mostRecent; single; singleOrDefault; takeFirst,First; FirstOrDefault; Latest; Next; Single; SingleOrDefault,,first; first_or_default; single; single_or_default,first; first_or_default; single; single_or_default,first; firstOrElse; head; headOption; headOrElse; latest; next; single; singleOption; singleOrElse,single
FlatMap,http://reactivex.io/documentation/operators/flatmap.html,FlatMap,flatmap; mapcat,concat_map; flat_map,concatMap; flatMap; flatMapIterable; StringObservable.split; switchMap,concatMap; flatMap; flatMapIterable; StringObervable.split; switchMap,concatMap; concatMapDelayError; concatMapEager; concatMapEagerDelayError; concatMapIterable; flatMap; flatMapIterable; switchMap; switchMapDelayError,concatMap; concatMapObserver; flatMap; flatMapFirst; flatMapLatest; flatMapObserver; flatMapWithMaxConcurrency; for; forIn; manySelect; selectConcat; selectConcatObserver; selectMany; selectManyObserver; selectSwitch; selectSwitchFirst; selectWithMatchConcurrent; switchMap,concatMap; flatMap; flatMapIterable; switchMap,ManySelect; SelectMany,flatMap; flatMapTo; selectMany; flatMapLatest; concatMap; concatMapTo,concat_all; expand; flat_map; for_in; many_select; select_many; select_switch,flat_map; flat_map_with_index,concatMap; flatMap; flatMapIterable; flatMapIterableWith; flatMapWith; switchMap,flatMap; flatMapWithIndex; flatMapFirst; flatMapLatest
flatMapFirst,http://reactivex.io/documentation/operators/flatmap.html,FlatMap,flatmap; mapcat,concat_map; flat_map,concatMap; flatMap; flatMapIterable; StringObservable.split; switchMap,concatMap; flatMap; flatMapIterable; StringObervable.split; switchMap,concatMap; concatMapDelayError; concatMapEager; concatMapEagerDelayError; concatMapIterable; flatMap; flatMapIterable; switchMap; switchMapDelayError,concatMap; concatMapObserver; flatMap; flatMapFirst; flatMapLatest; flatMapObserver; flatMapWithMaxConcurrency; for; forIn; manySelect; selectConcat; selectConcatObserver; selectMany; selectManyObserver; selectSwitch; selectSwitchFirst; selectWithMatchConcurrent; switchMap,concatMap; flatMap; flatMapIterable; switchMap,ManySelect; SelectMany,flatMap; flatMapTo; selectMany; flatMapLatest; concatMap; concatMapTo,concat_all; expand; flat_map; for_in; many_select; select_many; select_switch,flat_map; flat_map_with_index,concatMap; flatMap; flatMapIterable; flatMapIterableWith; flatMapWith; switchMap,flatMap; flatMapWithIndex; flatMapFirst; flatMapLatest
flatMapIterable,http://reactivex.io/documentation/operators/flatmap.html,FlatMap,flatmap; mapcat,concat_map; flat_map,concatMap; flatMap; flatMapIterable; StringObservable.split; switchMap,concatMap; flatMap; flatMapIterable; StringObervable.split; switchMap,concatMap; concatMapDelayError; concatMapEager; concatMapEagerDelayError; concatMapIterable; flatMap; flatMapIterable; switchMap; switchMapDelayError,concatMap; concatMapObserver; flatMap; flatMapFirst; flatMapLatest; flatMapObserver; flatMapWithMaxConcurrency; for; forIn; manySelect; selectConcat; selectConcatObserver; selectMany; selectManyObserver; selectSwitch; selectSwitchFirst; selectWithMatchConcurrent; switchMap,concatMap; flatMap; flatMapIterable; switchMap,ManySelect; SelectMany,flatMap; flatMapTo; selectMany; flatMapLatest; concatMap; concatMapTo,concat_all; expand; flat_map; for_in; many_select; select_many; select_switch,flat_map; flat_map_with_index,concatMap; flatMap; flatMapIterable; flatMapIterableWith; flatMapWith; switchMap,flatMap; flatMapWithIndex; flatMapFirst; flatMapLatest
flatMapIterableWith,http://reactivex.io/documentation/operators/flatmap.html,FlatMap,flatmap; mapcat,concat_map; flat_map,concatMap; flatMap; flatMapIterable; StringObservable.split; switchMap,concatMap; flatMap; flatMapIterable; StringObervable.split; switchMap,concatMap; concatMapDelayError; concatMapEager; concatMapEagerDelayError; concatMapIterable; flatMap; flatMapIterable; switchMap; switchMapDelayError,concatMap; concatMapObserver; flatMap; flatMapFirst; flatMapLatest; flatMapObserver; flatMapWithMaxConcurrency; for; forIn; manySelect; selectConcat; selectConcatObserver; selectMany; selectManyObserver; selectSwitch; selectSwitchFirst; selectWithMatchConcurrent; switchMap,concatMap; flatMap; flatMapIterable; switchMap,ManySelect; SelectMany,flatMap; flatMapTo; selectMany; flatMapLatest; concatMap; concatMapTo,concat_all; expand; flat_map; for_in; many_select; select_many; select_switch,flat_map; flat_map_with_index,concatMap; flatMap; flatMapIterable; flatMapIterableWith; flatMapWith; switchMap,flatMap; flatMapWithIndex; flatMapFirst; flatMapLatest
flatMapLatest,http://reactivex.io/documentation/operators/flatmap.html,FlatMap,flatmap; mapcat,concat_map; flat_map,concatMap; flatMap; flatMapIterable; StringObservable.split; switchMap,concatMap; flatMap; flatMapIterable; StringObervable.split; switchMap,concatMap; concatMapDelayError; concatMapEager; concatMapEagerDelayError; concatMapIterable; flatMap; flatMapIterable; switchMap; switchMapDelayError,concatMap; concatMapObserver; flatMap; flatMapFirst; flatMapLatest; flatMapObserver; flatMapWithMaxConcurrency; for; forIn; manySelect; selectConcat; selectConcatObserver; selectMany; selectManyObserver; selectSwitch; selectSwitchFirst; selectWithMatchConcurrent; switchMap,concatMap; flatMap; flatMapIterable; switchMap,ManySelect; SelectMany,flatMap; flatMapTo; selectMany; flatMapLatest; concatMap; concatMapTo,concat_all; expand; flat_map; for_in; many_select; select_many; select_switch,flat_map; flat_map_with_index,concatMap; flatMap; flatMapIterable; flatMapIterableWith; flatMapWith; switchMap,flatMap; flatMapWithIndex; flatMapFirst; flatMapLatest
flatMapObserver,http://reactivex.io/documentation/operators/flatmap.html,FlatMap,flatmap; mapcat,concat_map; flat_map,concatMap; flatMap; flatMapIterable; StringObservable.split; switchMap,concatMap; flatMap; flatMapIterable; StringObervable.split; switchMap,concatMap; concatMapDelayError; concatMapEager; concatMapEagerDelayError; concatMapIterable; flatMap; flatMapIterable; switchMap; switchMapDelayError,concatMap; concatMapObserver; flatMap; flatMapFirst; flatMapLatest; flatMapObserver; flatMapWithMaxConcurrency; for; forIn; manySelect; selectConcat; selectConcatObserver; selectMany; selectManyObserver; selectSwitch; selectSwitchFirst; selectWithMatchConcurrent; switchMap,concatMap; flatMap; flatMapIterable; switchMap,ManySelect; SelectMany,flatMap; flatMapTo; selectMany; flatMapLatest; concatMap; concatMapTo,concat_all; expand; flat_map; for_in; many_select; select_many; select_switch,flat_map; flat_map_with_index,concatMap; flatMap; flatMapIterable; flatMapIterableWith; flatMapWith; switchMap,flatMap; flatMapWithIndex; flatMapFirst; flatMapLatest
flatMapWith,http://reactivex.io/documentation/operators/flatmap.html,FlatMap,flatmap; mapcat,concat_map; flat_map,concatMap; flatMap; flatMapIterable; StringObservable.split; switchMap,concatMap; flatMap; flatMapIterable; StringObervable.split; switchMap,concatMap; concatMapDelayError; concatMapEager; concatMapEagerDelayError; concatMapIterable; flatMap; flatMapIterable; switchMap; switchMapDelayError,concatMap; concatMapObserver; flatMap; flatMapFirst; flatMapLatest; flatMapObserver; flatMapWithMaxConcurrency; for; forIn; manySelect; selectConcat; selectConcatObserver; selectMany; selectManyObserver; selectSwitch; selectSwitchFirst; selectWithMatchConcurrent; switchMap,concatMap; flatMap; flatMapIterable; switchMap,ManySelect; SelectMany,flatMap; flatMapTo; selectMany; flatMapLatest; concatMap; concatMapTo,concat_all; expand; flat_map; for_in; many_select; select_many; select_switch,flat_map; flat_map_with_index,concatMap; flatMap; flatMapIterable; flatMapIterableWith; flatMapWith; switchMap,flatMap; flatMapWithIndex; flatMapFirst; flatMapLatest
flatMapWithMaxConcurrent,http://reactivex.io/documentation/operators/flatmap.html,FlatMap,flatmap; mapcat,concat_map; flat_map,concatMap; flatMap; flatMapIterable; StringObservable.split; switchMap,concatMap; flatMap; flatMapIterable; StringObervable.split; switchMap,concatMap; concatMapDelayError; concatMapEager; concatMapEagerDelayError; concatMapIterable; flatMap; flatMapIterable; switchMap; switchMapDelayError,concatMap; concatMapObserver; flatMap; flatMapFirst; flatMapLatest; flatMapObserver; flatMapWithMaxConcurrency; for; forIn; manySelect; selectConcat; selectConcatObserver; selectMany; selectManyObserver; selectSwitch; selectSwitchFirst; selectWithMatchConcurrent; switchMap,concatMap; flatMap; flatMapIterable; switchMap,ManySelect; SelectMany,flatMap; flatMapTo; selectMany; flatMapLatest; concatMap; concatMapTo,concat_all; expand; flat_map; for_in; many_select; select_many; select_switch,flat_map; flat_map_with_index,concatMap; flatMap; flatMapIterable; flatMapIterableWith; flatMapWith; switchMap,flatMap; flatMapWithIndex; flatMapFirst; flatMapLatest
flat_map_with_index,http://reactivex.io/documentation/operators/flatmap.html,FlatMap,flatmap; mapcat,concat_map; flat_map,concatMap; flatMap; flatMapIterable; StringObservable.split; switchMap,concatMap; flatMap; flatMapIterable; StringObervable.split; switchMap,concatMap; concatMapDelayError; concatMapEager; concatMapEagerDelayError; concatMapIterable; flatMap; flatMapIterable; switchMap; switchMapDelayError,concatMap; concatMapObserver; flatMap; flatMapFirst; flatMapLatest; flatMapObserver; flatMapWithMaxConcurrency; for; forIn; manySelect; selectConcat; selectConcatObserver; selectMany; selectManyObserver; selectSwitch; selectSwitchFirst; selectWithMatchConcurrent; switchMap,concatMap; flatMap; flatMapIterable; switchMap,ManySelect; SelectMany,flatMap; flatMapTo; selectMany; flatMapLatest; concatMap; concatMapTo,concat_all; expand; flat_map; for_in; many_select; select_many; select_switch,flat_map; flat_map_with_index,concatMap; flatMap; flatMapIterable; flatMapIterableWith; flatMapWith; switchMap,flatMap; flatMapWithIndex; flatMapFirst; flatMapLatest
flatten,http://reactivex.io/documentation/operators/merge.html,Merge,interleave; interleave*; merge; merge*; merge-delay-error; merge-delay-error*,merge,merge; mergeDelayError; mergeWith,merge; mergeDelayError; mergeWith,merge; mergeArray; mergeArrayDelayError; mergeDelayError; mergeWith,merge; mergeAll; mergeDelayError,merge; mergeDelayError; mergeWith,Merge,merge; mergeAll,merge; merge_all; merge_observable,merge; merge_all; merge_concurrent,flatten; flattenDelayError; merge; mergeDelayError,merge
flattenDelayError,http://reactivex.io/documentation/operators/merge.html,Merge,interleave; interleave*; merge; merge*; merge-delay-error; merge-delay-error*,merge,merge; mergeDelayError; mergeWith,merge; mergeDelayError; mergeWith,merge; mergeArray; mergeArrayDelayError; mergeDelayError; mergeWith,merge; mergeAll; mergeDelayError,merge; mergeDelayError; mergeWith,Merge,merge; mergeAll,merge; merge_all; merge_observable,merge; merge_all; merge_concurrent,flatten; flattenDelayError; merge; mergeDelayError,merge
foldl,http://reactivex.io/documentation/operators/reduce.html,Reduce,into; iterate; reduce,iterate; reduce,collect; reduce,collect; reduce,collect; collectInto; reduce; reduceWith,reduce,collect; reduce,Aggregate,reduce,aggregate; expand; reduce,reduce,foldLeft; reduce,reduce
foldLeft,http://reactivex.io/documentation/operators/reduce.html,Reduce,into; iterate; reduce,iterate; reduce,collect; reduce,collect; reduce,collect; collectInto; reduce; reduceWith,reduce,collect; reduce,Aggregate,reduce,aggregate; expand; reduce,reduce,foldLeft; reduce,reduce
for,http://reactivex.io/documentation/operators/flatmap.html,FlatMap,flatmap; mapcat,concat_map; flat_map,concatMap; flatMap; flatMapIterable; StringObservable.split; switchMap,concatMap; flatMap; flatMapIterable; StringObervable.split; switchMap,concatMap; concatMapDelayError; concatMapEager; concatMapEagerDelayError; concatMapIterable; flatMap; flatMapIterable; switchMap; switchMapDelayError,concatMap; concatMapObserver; flatMap; flatMapFirst; flatMapLatest; flatMapObserver; flatMapWithMaxConcurrency; for; forIn; manySelect; selectConcat; selectConcatObserver; selectMany; selectManyObserver; selectSwitch; selectSwitchFirst; selectWithMatchConcurrent; switchMap,concatMap; flatMap; flatMapIterable; switchMap,ManySelect; SelectMany,flatMap; flatMapTo; selectMany; flatMapLatest; concatMap; concatMapTo,concat_all; expand; flat_map; for_in; many_select; select_many; select_switch,flat_map; flat_map_with_index,concatMap; flatMap; flatMapIterable; flatMapIterableWith; flatMapWith; switchMap,flatMap; flatMapWithIndex; flatMapFirst; flatMapLatest
forall,http://reactivex.io/documentation/operators/all.html,All,every,,all,all,all,every; jortSort; jortSortUntil,all,All,,all; every,all?,forall,
ForEach,http://reactivex.io/documentation/operators/subscribe.html,Subscribe,BlockingObservable.doseq; subscribe,subscribe,BlockingObservable.forEach; forEach; subscribe,BlockingObservable.forEach; forEach; subscribe,blockingForEach; blockingSubscribe; forEachWhile; safeSubscribe; subscribe,forEach; subscribe; subscribeOnCompleted; subscribeOnError; subscribeOnNext,BlockingObservable.forEach; forEach; subscribe,ForEach; Subscribe,subscribe,BlockingObservable.for_each; subscribe,subscribe,BlockingObservable.foreach; forEach; subscribe,subscribe
forEachFuture,http://reactivex.io/documentation/operators/start.html,Start,,,asyncAction; asyncFunc; deferFuture; forEachFuture; fromAction; fromCallable; fromFunc0; fromRunnable; start; startFuture; toAsync,asyncAction; asyncFunc; deferFuture; forEachFuture; fromAction; fromCallable; fromFunc0; fromRunnable; start; startFuture; toAsync,fromCallable,start; startAsync; toAsync,asyncAction; asyncFunc; deferFuture; forEachFuture; fromAction; fromCallable; fromFunc0; fromRunnable; start; startFuture; toAsync,Start; ToAsync,start,start; start_async; to_async,,,
forEachWhile,http://reactivex.io/documentation/operators/subscribe.html,Subscribe,BlockingObservable.doseq; subscribe,subscribe,BlockingObservable.forEach; forEach; subscribe,BlockingObservable.forEach; forEach; subscribe,blockingForEach; blockingSubscribe; forEachWhile; safeSubscribe; subscribe,forEach; subscribe; subscribeOnCompleted; subscribeOnError; subscribeOnNext,BlockingObservable.forEach; forEach; subscribe,ForEach; Subscribe,subscribe,BlockingObservable.for_each; subscribe,subscribe,BlockingObservable.foreach; forEach; subscribe,subscribe
forIn,http://reactivex.io/documentation/operators/flatmap.html,FlatMap,flatmap; mapcat,concat_map; flat_map,concatMap; flatMap; flatMapIterable; StringObservable.split; switchMap,concatMap; flatMap; flatMapIterable; StringObervable.split; switchMap,concatMap; concatMapDelayError; concatMapEager; concatMapEagerDelayError; concatMapIterable; flatMap; flatMapIterable; switchMap; switchMapDelayError,concatMap; concatMapObserver; flatMap; flatMapFirst; flatMapLatest; flatMapObserver; flatMapWithMaxConcurrency; for; forIn; manySelect; selectConcat; selectConcatObserver; selectMany; selectManyObserver; selectSwitch; selectSwitchFirst; selectWithMatchConcurrent; switchMap,concatMap; flatMap; flatMapIterable; switchMap,ManySelect; SelectMany,flatMap; flatMapTo; selectMany; flatMapLatest; concatMap; concatMapTo,concat_all; expand; flat_map; for_in; many_select; select_many; select_switch,flat_map; flat_map_with_index,concatMap; flatMap; flatMapIterable; flatMapIterableWith; flatMapWith; switchMap,flatMap; flatMapWithIndex; flatMapFirst; flatMapLatest
forkJoin,http://reactivex.io/documentation/operators/zip.html,Zip,map; mapCat,zip,zip; zipWith,zip; zipWith,zip; zipArray; zipIterable; zipWith,forkJoin; zip; zipArray,zip; zipWith,Zip,zip; forkJoin,zip; zip_array,zip,zip; zipWith; zipWithIndex,zip
From,http://reactivex.io/documentation/operators/from.html,From,seq,from,decode; from; fromAction; fromCallable; fromFunc0; fromRunnable; runAsync,decode; from; fromAction; fromCallable; fromFunc0; fromRunnable; runAsync,fromArray; fromCallable; fromFuture; fromIterable; fromPublisher,from; fromCallback; fromEvent; fromEventPattern; fromNodeCallback; fromPromise; of; ofArrayChanges; ofObjectChanges; ofWithScheduler; pairs,asObservable; from,AsObservable; FromAsyncPattern; FromEvent; FromEventPattern; ToObservable,fromArray; fromIterator; asObservable; fromPromise,from_array; from_callback; from_future; from_iterable; from_list; from_marbles; of,of_array; of_enumerable; of_enumerator,from; items,from; toObservable
fromAction,http://reactivex.io/documentation/operators/from.html,From,seq,from,decode; from; fromAction; fromCallable; fromFunc0; fromRunnable; runAsync,decode; from; fromAction; fromCallable; fromFunc0; fromRunnable; runAsync,fromArray; fromCallable; fromFuture; fromIterable; fromPublisher,from; fromCallback; fromEvent; fromEventPattern; fromNodeCallback; fromPromise; of; ofArrayChanges; ofObjectChanges; ofWithScheduler; pairs,asObservable; from,AsObservable; FromAsyncPattern; FromEvent; FromEventPattern; ToObservable,fromArray; fromIterator; asObservable; fromPromise,from_array; from_callback; from_future; from_iterable; from_list; from_marbles; of,of_array; of_enumerable; of_enumerator,from; items,from; toObservable
fromArray,http://reactivex.io/documentation/operators/from.html,From,seq,from,decode; from; fromAction; fromCallable; fromFunc0; fromRunnable; runAsync,decode; from; fromAction; fromCallable; fromFunc0; fromRunnable; runAsync,fromArray; fromCallable; fromFuture; fromIterable; fromPublisher,from; fromCallback; fromEvent; fromEventPattern; fromNodeCallback; fromPromise; of; ofArrayChanges; ofObjectChanges; ofWithScheduler; pairs,asObservable; from,AsObservable; FromAsyncPattern; FromEvent; FromEventPattern; ToObservable,fromArray; fromIterator; asObservable; fromPromise,from_array; from_callback; from_future; from_iterable; from_list; from_marbles; of,of_array; of_enumerable; of_enumerator,from; items,from; toObservable
FromAsyncPattern,http://reactivex.io/documentation/operators/from.html,From,seq,from,decode; from; fromAction; fromCallable; fromFunc0; fromRunnable; runAsync,decode; from; fromAction; fromCallable; fromFunc0; fromRunnable; runAsync,fromArray; fromCallable; fromFuture; fromIterable; fromPublisher,from; fromCallback; fromEvent; fromEventPattern; fromNodeCallback; fromPromise; of; ofArrayChanges; ofObjectChanges; ofWithScheduler; pairs,asObservable; from,AsObservable; FromAsyncPattern; FromEvent; FromEventPattern; ToObservable,fromArray; fromIterator; asObservable; fromPromise,from_array; from_callback; from_future; from_iterable; from_list; from_marbles; of,of_array; of_enumerable; of_enumerator,from; items,from; toObservable
fromCallable,http://reactivex.io/documentation/operators/from.html,From,seq,from,decode; from; fromAction; fromCallable; fromFunc0; fromRunnable; runAsync,decode; from; fromAction; fromCallable; fromFunc0; fromRunnable; runAsync,fromArray; fromCallable; fromFuture; fromIterable; fromPublisher,from; fromCallback; fromEvent; fromEventPattern; fromNodeCallback; fromPromise; of; ofArrayChanges; ofObjectChanges; ofWithScheduler; pairs,asObservable; from,AsObservable; FromAsyncPattern; FromEvent; FromEventPattern; ToObservable,fromArray; fromIterator; asObservable; fromPromise,from_array; from_callback; from_future; from_iterable; from_list; from_marbles; of,of_array; of_enumerable; of_enumerator,from; items,from; toObservable
fromCallback,http://reactivex.io/documentation/operators/from.html,From,seq,from,decode; from; fromAction; fromCallable; fromFunc0; fromRunnable; runAsync,decode; from; fromAction; fromCallable; fromFunc0; fromRunnable; runAsync,fromArray; fromCallable; fromFuture; fromIterable; fromPublisher,from; fromCallback; fromEvent; fromEventPattern; fromNodeCallback; fromPromise; of; ofArrayChanges; ofObjectChanges; ofWithScheduler; pairs,asObservable; from,AsObservable; FromAsyncPattern; FromEvent; FromEventPattern; ToObservable,fromArray; fromIterator; asObservable; fromPromise,from_array; from_callback; from_future; from_iterable; from_list; from_marbles; of,of_array; of_enumerable; of_enumerator,from; items,from; toObservable
FromEvent,http://reactivex.io/documentation/operators/from.html,From,seq,from,decode; from; fromAction; fromCallable; fromFunc0; fromRunnable; runAsync,decode; from; fromAction; fromCallable; fromFunc0; fromRunnable; runAsync,fromArray; fromCallable; fromFuture; fromIterable; fromPublisher,from; fromCallback; fromEvent; fromEventPattern; fromNodeCallback; fromPromise; of; ofArrayChanges; ofObjectChanges; ofWithScheduler; pairs,asObservable; from,AsObservable; FromAsyncPattern; FromEvent; FromEventPattern; ToObservable,fromArray; fromIterator; asObservable; fromPromise,from_array; from_callback; from_future; from_iterable; from_list; from_marbles; of,of_array; of_enumerable; of_enumerator,from; items,from; toObservable
FromEventPattern,http://reactivex.io/documentation/operators/from.html,From,seq,from,decode; from; fromAction; fromCallable; fromFunc0; fromRunnable; runAsync,decode; from; fromAction; fromCallable; fromFunc0; fromRunnable; runAsync,fromArray; fromCallable; fromFuture; fromIterable; fromPublisher,from; fromCallback; fromEvent; fromEventPattern; fromNodeCallback; fromPromise; of; ofArrayChanges; ofObjectChanges; ofWithScheduler; pairs,asObservable; from,AsObservable; FromAsyncPattern; FromEvent; FromEventPattern; ToObservable,fromArray; fromIterator; asObservable; fromPromise,from_array; from_callback; from_future; from_iterable; from_list; from_marbles; of,of_array; of_enumerable; of_enumerator,from; items,from; toObservable
fromFunc0,http://reactivex.io/documentation/operators/from.html,From,seq,from,decode; from; fromAction; fromCallable; fromFunc0; fromRunnable; runAsync,decode; from; fromAction; fromCallable; fromFunc0; fromRunnable; runAsync,fromArray; fromCallable; fromFuture; fromIterable; fromPublisher,from; fromCallback; fromEvent; fromEventPattern; fromNodeCallback; fromPromise; of; ofArrayChanges; ofObjectChanges; ofWithScheduler; pairs,asObservable; from,AsObservable; FromAsyncPattern; FromEvent; FromEventPattern; ToObservable,fromArray; fromIterator; asObservable; fromPromise,from_array; from_callback; from_future; from_iterable; from_list; from_marbles; of,of_array; of_enumerable; of_enumerator,from; items,from; toObservable
fromFuture,http://reactivex.io/documentation/operators/from.html,From,seq,from,decode; from; fromAction; fromCallable; fromFunc0; fromRunnable; runAsync,decode; from; fromAction; fromCallable; fromFunc0; fromRunnable; runAsync,fromArray; fromCallable; fromFuture; fromIterable; fromPublisher,from; fromCallback; fromEvent; fromEventPattern; fromNodeCallback; fromPromise; of; ofArrayChanges; ofObjectChanges; ofWithScheduler; pairs,asObservable; from,AsObservable; FromAsyncPattern; FromEvent; FromEventPattern; ToObservable,fromArray; fromIterator; asObservable; fromPromise,from_array; from_callback; from_future; from_iterable; from_list; from_marbles; of,of_array; of_enumerable; of_enumerator,from; items,from; toObservable
fromIterable,http://reactivex.io/documentation/operators/from.html,From,seq,from,decode; from; fromAction; fromCallable; fromFunc0; fromRunnable; runAsync,decode; from; fromAction; fromCallable; fromFunc0; fromRunnable; runAsync,fromArray; fromCallable; fromFuture; fromIterable; fromPublisher,from; fromCallback; fromEvent; fromEventPattern; fromNodeCallback; fromPromise; of; ofArrayChanges; ofObjectChanges; ofWithScheduler; pairs,asObservable; from,AsObservable; FromAsyncPattern; FromEvent; FromEventPattern; ToObservable,fromArray; fromIterator; asObservable; fromPromise,from_array; from_callback; from_future; from_iterable; from_list; from_marbles; of,of_array; of_enumerable; of_enumerator,from; items,from; toObservable
fromIterator,http://reactivex.io/documentation/operators/from.html,From,seq,from,decode; from; fromAction; fromCallable; fromFunc0; fromRunnable; runAsync,decode; from; fromAction; fromCallable; fromFunc0; fromRunnable; runAsync,fromArray; fromCallable; fromFuture; fromIterable; fromPublisher,from; fromCallback; fromEvent; fromEventPattern; fromNodeCallback; fromPromise; of; ofArrayChanges; ofObjectChanges; ofWithScheduler; pairs,asObservable; from,AsObservable; FromAsyncPattern; FromEvent; FromEventPattern; ToObservable,fromArray; fromIterator; asObservable; fromPromise,from_array; from_callback; from_future; from_iterable; from_list; from_marbles; of,of_array; of_enumerable; of_enumerator,from; items,from; toObservable
from_list,http://reactivex.io/documentation/operators/from.html,From,seq,from,decode; from; fromAction; fromCallable; fromFunc0; fromRunnable; runAsync,decode; from; fromAction; fromCallable; fromFunc0; fromRunnable; runAsync,fromArray; fromCallable; fromFuture; fromIterable; fromPublisher,from; fromCallback; fromEvent; fromEventPattern; fromNodeCallback; fromPromise; of; ofArrayChanges; ofObjectChanges; ofWithScheduler; pairs,asObservable; from,AsObservable; FromAsyncPattern; FromEvent; FromEventPattern; ToObservable,fromArray; fromIterator; asObservable; fromPromise,from_array; from_callback; from_future; from_iterable; from_list; from_marbles; of,of_array; of_enumerable; of_enumerator,from; items,from; toObservable
fromNodeCallback,http://reactivex.io/documentation/operators/from.html,From,seq,from,decode; from; fromAction; fromCallable; fromFunc0; fromRunnable; runAsync,decode; from; fromAction; fromCallable; fromFunc0; fromRunnable; runAsync,fromArray; fromCallable; fromFuture; fromIterable; fromPublisher,from; fromCallback; fromEvent; fromEventPattern; fromNodeCallback; fromPromise; of; ofArrayChanges; ofObjectChanges; ofWithScheduler; pairs,asObservable; from,AsObservable; FromAsyncPattern; FromEvent; FromEventPattern; ToObservable,fromArray; fromIterator; asObservable; fromPromise,from_array; from_callback; from_future; from_iterable; from_list; from_marbles; of,of_array; of_enumerable; of_enumerator,from; items,from; toObservable
fromPromise,http://reactivex.io/documentation/operators/from.html,From,seq,from,decode; from; fromAction; fromCallable; fromFunc0; fromRunnable; runAsync,decode; from; fromAction; fromCallable; fromFunc0; fromRunnable; runAsync,fromArray; fromCallable; fromFuture; fromIterable; fromPublisher,from; fromCallback; fromEvent; fromEventPattern; fromNodeCallback; fromPromise; of; ofArrayChanges; ofObjectChanges; ofWithScheduler; pairs,asObservable; from,AsObservable; FromAsyncPattern; FromEvent; FromEventPattern; ToObservable,fromArray; fromIterator; asObservable; fromPromise,from_array; from_callback; from_future; from_iterable; from_list; from_marbles; of,of_array; of_enumerable; of_enumerator,from; items,from; toObservable
fromPublisher,http://reactivex.io/documentation/operators/from.html,From,seq,from,decode; from; fromAction; fromCallable; fromFunc0; fromRunnable; runAsync,decode; from; fromAction; fromCallable; fromFunc0; fromRunnable; runAsync,fromArray; fromCallable; fromFuture; fromIterable; fromPublisher,from; fromCallback; fromEvent; fromEventPattern; fromNodeCallback; fromPromise; of; ofArrayChanges; ofObjectChanges; ofWithScheduler; pairs,asObservable; from,AsObservable; FromAsyncPattern; FromEvent; FromEventPattern; ToObservable,fromArray; fromIterator; asObservable; fromPromise,from_array; from_callback; from_future; from_iterable; from_list; from_marbles; of,of_array; of_enumerable; of_enumerator,from; items,from; toObservable
fromRunnable,http://reactivex.io/documentation/operators/from.html,From,seq,from,decode; from; fromAction; fromCallable; fromFunc0; fromRunnable; runAsync,decode; from; fromAction; fromCallable; fromFunc0; fromRunnable; runAsync,fromArray; fromCallable; fromFuture; fromIterable; fromPublisher,from; fromCallback; fromEvent; fromEventPattern; fromNodeCallback; fromPromise; of; ofArrayChanges; ofObjectChanges; ofWithScheduler; pairs,asObservable; from,AsObservable; FromAsyncPattern; FromEvent; FromEventPattern; ToObservable,fromArray; fromIterator; asObservable; fromPromise,from_array; from_callback; from_future; from_iterable; from_list; from_marbles; of,of_array; of_enumerable; of_enumerator,from; items,from; toObservable
Generate,http://reactivex.io/documentation/operators/create.html,Create,generator,,create,create,create; generate; unsafeCreate,create; createWithDisposable; generate; generateWithAbsoluteTime; generateWithRelativeTime,create,Create; Generate,create,create; generate; generate_with_relative_time,create; generate,apply; create,create; generate
generateWithAbsoluteTime,http://reactivex.io/documentation/operators/create.html,Create,generator,,create,create,create; generate; unsafeCreate,create; createWithDisposable; generate; generateWithAbsoluteTime; generateWithRelativeTime,create,Create; Generate,create,create; generate; generate_with_relative_time,create; generate,apply; create,create; generate
generateWithRelativeTime,http://reactivex.io/documentation/operators/create.html,Create,generator,,create,create,create; generate; unsafeCreate,create; createWithDisposable; generate; generateWithAbsoluteTime; generateWithRelativeTime,create,Create; Generate,create,create; generate; generate_with_relative_time,create; generate,apply; create,create; generate
generator,http://reactivex.io/documentation/operators/create.html,Create,generator,,create,create,create; generate; unsafeCreate,create; createWithDisposable; generate; generateWithAbsoluteTime; generateWithRelativeTime,create,Create; Generate,create,create; generate; generate_with_relative_time,create; generate,apply; create,create; generate
GetEnumerator,http://reactivex.io/documentation/operators/to.html,To,BlockingObservable.blocking; interpose; BlockingObservable.into; BlockingObservable.seq; sort; sort-by; sorted-list-by,as_blocking,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,blockingIterable; blockingLatest; blockingMostRecent; blockingNext; sorted; to; toFuture; toList; toMap; toMultimap; toSortedList,toArray; toMap; toSet,BlockingObservable.from; BlockingObservable.getIterator; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,GetEnumerator; ToArray; ToDictionary; ToEnumerable; ToEvent; ToEventPattern; ToList; ToLookup; ToTask,toArray,BlockingObservable.to_iterable; to_array; to_blocking; to_dict; to_future; to_iterable; to_list; to_marbles; to_set,to_a; to_h,nest; to; toArray; toBlocking; toBuffer; BlockingObservable.toFuture; toIndexedSeq; BlockingObservable.toIterable; toIterable; toIterator; BlockingObservable.toList; toList; toMap; toMultiMap; toSet; toStream; toTraversable; toVector,toArray
getIterator,http://reactivex.io/documentation/operators/to.html,To,BlockingObservable.blocking; interpose; BlockingObservable.into; BlockingObservable.seq; sort; sort-by; sorted-list-by,as_blocking,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,blockingIterable; blockingLatest; blockingMostRecent; blockingNext; sorted; to; toFuture; toList; toMap; toMultimap; toSortedList,toArray; toMap; toSet,BlockingObservable.from; BlockingObservable.getIterator; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,GetEnumerator; ToArray; ToDictionary; ToEnumerable; ToEvent; ToEventPattern; ToList; ToLookup; ToTask,toArray,BlockingObservable.to_iterable; to_array; to_blocking; to_dict; to_future; to_iterable; to_list; to_marbles; to_set,to_a; to_h,nest; to; toArray; toBlocking; toBuffer; BlockingObservable.toFuture; toIndexedSeq; BlockingObservable.toIterable; toIterable; toIterator; BlockingObservable.toList; toList; toMap; toMultiMap; toSet; toStream; toTraversable; toVector,toArray
GroupBy,http://reactivex.io/documentation/operators/groupby.html,GroupBy,group-by; split-with,group_by,groupBy,groupBy,groupBy,groupBy; groupByUntil,groupBy,GroupBy; GroupByUntil,groupBy; groupByUntil; partition,group_by; group_by_until; partition,,groupBy,
GroupByUntil,http://reactivex.io/documentation/operators/groupby.html,GroupBy,group-by; split-with,group_by,groupBy,groupBy,groupBy,groupBy; groupByUntil,groupBy,GroupBy; GroupByUntil,groupBy; groupByUntil; partition,group_by; group_by_until; partition,,groupBy,
GroupJoin,http://reactivex.io/documentation/operators/join.html,Join,,,join; groupJoin,join; groupJoin,join; groupJoin,join; groupJoin,join; groupJoin,Join; GroupJoin,,join; group_join,,join; groupJoin,
head,http://reactivex.io/documentation/operators/first.html,First,first; single,first,first; firstOrDefault; latest; mostRecent; next; single; singleOrDefault; takeFirst,first; firstOrDefault; latest; mostRecent; next; single; singleOrDefault; takeFirst,blockingFirst; blockingSingle; first; firstElement; single; singleElement; takeFirst,find; findIndex; first; single,first; firstOrDefault; mostRecent; single; singleOrDefault; takeFirst,First; FirstOrDefault; Latest; Next; Single; SingleOrDefault,,first; first_or_default; single; single_or_default,first; first_or_default; single; single_or_default,first; firstOrElse; head; headOption; headOrElse; latest; next; single; singleOption; singleOrElse,single
headOption,http://reactivex.io/documentation/operators/first.html,First,first; single,first,first; firstOrDefault; latest; mostRecent; next; single; singleOrDefault; takeFirst,first; firstOrDefault; latest; mostRecent; next; single; singleOrDefault; takeFirst,blockingFirst; blockingSingle; first; firstElement; single; singleElement; takeFirst,find; findIndex; first; single,first; firstOrDefault; mostRecent; single; singleOrDefault; takeFirst,First; FirstOrDefault; Latest; Next; Single; SingleOrDefault,,first; first_or_default; single; single_or_default,first; first_or_default; single; single_or_default,first; firstOrElse; head; headOption; headOrElse; latest; next; single; singleOption; singleOrElse,single
headOrElse,http://reactivex.io/documentation/operators/first.html,First,first; single,first,first; firstOrDefault; latest; mostRecent; next; single; singleOrDefault; takeFirst,first; firstOrDefault; latest; mostRecent; next; single; singleOrDefault; takeFirst,blockingFirst; blockingSingle; first; firstElement; single; singleElement; takeFirst,find; findIndex; first; single,first; firstOrDefault; mostRecent; single; singleOrDefault; takeFirst,First; FirstOrDefault; Latest; Next; Single; SingleOrDefault,,first; first_or_default; single; single_or_default,first; first_or_default; single; single_or_default,first; firstOrElse; head; headOption; headOrElse; latest; next; single; singleOption; singleOrElse,single
if,http://reactivex.io/documentation/operators/defer.html,Defer,,defer,defer; ifThen; switchCase,defer; ifThen; switchCase,defer,case; defer; if; switchCase,defer; switchCase,Defer,defer,case; defer; if_then; switch_case,defer,defer,defer
ifThen,http://reactivex.io/documentation/operators/defer.html,Defer,,defer,defer; ifThen; switchCase,defer; ifThen; switchCase,defer,case; defer; if; switchCase,defer; switchCase,Defer,defer,case; defer; if_then; switch_case,defer,defer,defer
IgnoreElements,http://reactivex.io/documentation/operators/ignoreelements.html,IgnoreElements,,,ignoreElements,ignoreElements,ignoreElements,ignoreElements,ignoreElements,IgnoreElements,,ignore_elements,ignore_elements,,
indexOf,http://reactivex.io/documentation/operators/contains.html,Contains,some,,contains; exists; isEmpty,contains; exists; isEmpty,any; contains; isEmpty,contains; findIndex; indexOf; isEmpty,contains; exists,Any; Contains,isEmpty,contains; find; find_index; is_empty; some,any?; contains?; none?,contains; exists; isEmpty,
interleave,http://reactivex.io/documentation/operators/merge.html,Merge,interleave; interleave*; merge; merge*; merge-delay-error; merge-delay-error*,merge,merge; mergeDelayError; mergeWith,merge; mergeDelayError; mergeWith,merge; mergeArray; mergeArrayDelayError; mergeDelayError; mergeWith,merge; mergeAll; mergeDelayError,merge; mergeDelayError; mergeWith,Merge,merge; mergeAll,merge; merge_all; merge_observable,merge; merge_all; merge_concurrent,flatten; flattenDelayError; merge; mergeDelayError,merge
interpose,http://reactivex.io/documentation/operators/to.html,To,BlockingObservable.blocking; interpose; BlockingObservable.into; BlockingObservable.seq; sort; sort-by; sorted-list-by,as_blocking,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,blockingIterable; blockingLatest; blockingMostRecent; blockingNext; sorted; to; toFuture; toList; toMap; toMultimap; toSortedList,toArray; toMap; toSet,BlockingObservable.from; BlockingObservable.getIterator; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,GetEnumerator; ToArray; ToDictionary; ToEnumerable; ToEvent; ToEventPattern; ToList; ToLookup; ToTask,toArray,BlockingObservable.to_iterable; to_array; to_blocking; to_dict; to_future; to_iterable; to_list; to_marbles; to_set,to_a; to_h,nest; to; toArray; toBlocking; toBuffer; BlockingObservable.toFuture; toIndexedSeq; BlockingObservable.toIterable; toIterable; toIterator; BlockingObservable.toList; toList; toMap; toMultiMap; toSet; toStream; toTraversable; toVector,toArray
Interval,http://reactivex.io/documentation/operators/interval.html,Interval,,interval,interval,interval,interval,interval,interval,Interval,interval,interval,,interval,interval
intervalRange,http://reactivex.io/documentation/operators/range.html,Range,range,range,range,range,intervalRange; range,range,range,Range,range,range,range,,range
into,http://reactivex.io/documentation/operators/reduce.html,Reduce,into; iterate; reduce,iterate; reduce,collect; reduce,collect; reduce,collect; collectInto; reduce; reduceWith,reduce,collect; reduce,Aggregate,reduce,aggregate; expand; reduce,reduce,foldLeft; reduce,reduce
isEmpty,http://reactivex.io/documentation/operators/contains.html,Contains,some,,contains; exists; isEmpty,contains; exists; isEmpty,any; contains; isEmpty,contains; findIndex; indexOf; isEmpty,contains; exists,Any; Contains,isEmpty,contains; find; find_index; is_empty; some,any?; contains?; none?,contains; exists; isEmpty,
items,http://reactivex.io/documentation/operators/just.html,Just,return,just,just,just,just,just; return,asObservable; just,Return,of,just; return_value,just,items; just; :+,just; sequenceOf
Join,http://reactivex.io/documentation/operators/join.html,Join,,,join; groupJoin,join; groupJoin,join; groupJoin,join; groupJoin,join; groupJoin,Join; GroupJoin,,join; group_join,,join; groupJoin,
join,http://reactivex.io/documentation/operators/sum.html,Sum,,sum,sumDouble; sumFloat; sumInteger; sumLong; StringObservable.join; StringObservable.stringConcat,sumDouble; sumFloat; sumInteger; sumLong; StringObservable.join; StringObservable.stringConcat,,sum,sumDouble; sumFloat; sumInteger; sumLong,Sum,sum,sum,sum,product; sum,
jortSort,http://reactivex.io/documentation/operators/all.html,All,every,,all,all,all,every; jortSort; jortSortUntil,all,All,,all; every,all?,forall,
jortSortUntil,http://reactivex.io/documentation/operators/all.html,All,every,,all,all,all,every; jortSort; jortSortUntil,all,All,,all; every,all?,forall,
Just,http://reactivex.io/documentation/operators/just.html,Just,return,just,just,just,just,just; return,asObservable; just,Return,of,just; return_value,just,items; just; :+,just; sequenceOf
keep,http://reactivex.io/documentation/operators/map.html,Map,keep; keep-indexed; map; map-indexed,map,byLine; cast; encode; map,byLine; cast; encode; map,cast; map,map; pluck; select,cast; map,Cast; Select,map; mapWithIndex; mapTo; select; pluck,map; pluck; select,map; map_with_index,map,map; mapWithIndex
keep-indexed,http://reactivex.io/documentation/operators/map.html,Map,keep; keep-indexed; map; map-indexed,map,byLine; cast; encode; map,byLine; cast; encode; map,cast; map,map; pluck; select,cast; map,Cast; Select,map; mapWithIndex; mapTo; select; pluck,map; pluck; select,map; map_with_index,map,map; mapWithIndex
Last,http://reactivex.io/documentation/operators/last.html,Last,last,last,last; lastOrDefault,last; lastOrDefault,blockingLast; last; lastElement,last,last; lastOrDefault; takeLast,Last; LastOrDefault,,last; last_or_default,last; last_or_default,last; lastOrElse; head; headOption; headOrElse,
lastElement,http://reactivex.io/documentation/operators/last.html,Last,last,last,last; lastOrDefault,last; lastOrDefault,blockingLast; last; lastElement,last,last; lastOrDefault; takeLast,Last; LastOrDefault,,last; last_or_default,last; last_or_default,last; lastOrElse; head; headOption; headOrElse,
lastOption,http://reactivex.io/documentation/operators/last.html,Last,last,last,last; lastOrDefault,last; lastOrDefault,blockingLast; last; lastElement,last,last; lastOrDefault; takeLast,Last; LastOrDefault,,last; last_or_default,last; last_or_default,last; lastOrElse; head; headOption; headOrElse,
LastOrDefault,http://reactivex.io/documentation/operators/last.html,Last,last,last,last; lastOrDefault,last; lastOrDefault,blockingLast; last; lastElement,last,last; lastOrDefault; takeLast,Last; LastOrDefault,,last; last_or_default,last; last_or_default,last; lastOrElse; head; headOption; headOrElse,
lastOrElse,http://reactivex.io/documentation/operators/last.html,Last,last,last,last; lastOrDefault,last; lastOrDefault,blockingLast; last; lastElement,last,last; lastOrDefault; takeLast,Last; LastOrDefault,,last; last_or_default,last; last_or_default,last; lastOrElse; head; headOption; headOrElse,
Latest,http://reactivex.io/documentation/operators/first.html,First,first; single,first,first; firstOrDefault; latest; mostRecent; next; single; singleOrDefault; takeFirst,first; firstOrDefault; latest; mostRecent; next; single; singleOrDefault; takeFirst,blockingFirst; blockingSingle; first; firstElement; single; singleElement; takeFirst,find; findIndex; first; single,first; firstOrDefault; mostRecent; single; singleOrDefault; takeFirst,First; FirstOrDefault; Latest; Next; Single; SingleOrDefault,,first; first_or_default; single; single_or_default,first; first_or_default; single; single_or_default,first; firstOrElse; head; headOption; headOrElse; latest; next; single; singleOption; singleOrElse,single
latest,http://reactivex.io/documentation/operators/switch.html,Switch,,switch_on_next,switchOnNext,switchOnNext,switchOnNext; switchOnNextDelayError,switch,switchOnNext,Switch,switch; switchFirst,exclusive; select_switch; switch_latest,latest,switch,switchLatest
length,http://reactivex.io/documentation/operators/count.html,Count,count; longCount,count,count; countLong,count; countLong,,count,count,Count; LongCount,count,count,count,count; length; longCount; size,
let,http://reactivex.io/documentation/operators/publish.html,Publish,,multicast; publish,publish,publish,publish,let; letBind; multicast; publish; publishLast; publishValue,publish,Multicast; Publish; PublishLast,multicast; multicastWithSelector; publish; publishLast; publishValue,let; let_bind; multicast; publish; publishValue,,multicast; publish; publishLast,multicast; publish
letBind,http://reactivex.io/documentation/operators/publish.html,Publish,,multicast; publish,publish,publish,publish,let; letBind; multicast; publish; publishLast; publishValue,publish,Multicast; Publish; PublishLast,multicast; multicastWithSelector; publish; publishLast; publishValue,let; let_bind; multicast; publish; publishValue,,multicast; publish; publishLast,multicast; publish
lift,http://reactivex.io/documentation/implement-operator.html,,,,,,,,,,,,,,
limit,http://reactivex.io/documentation/operators/take.html,Take,take,take,limit; take,limit; take,take,take; takeUntilWithTime,take,Take,take; takeUntil,take; take_with_time,take,take,take
LongCount,http://reactivex.io/documentation/operators/count.html,Count,count; longCount,count,count; countLong,count; countLong,,count,count,Count; LongCount,count,count,count,count; length; longCount; size,
ManySelect,http://reactivex.io/documentation/operators/flatmap.html,FlatMap,flatmap; mapcat,concat_map; flat_map,concatMap; flatMap; flatMapIterable; StringObservable.split; switchMap,concatMap; flatMap; flatMapIterable; StringObervable.split; switchMap,concatMap; concatMapDelayError; concatMapEager; concatMapEagerDelayError; concatMapIterable; flatMap; flatMapIterable; switchMap; switchMapDelayError,concatMap; concatMapObserver; flatMap; flatMapFirst; flatMapLatest; flatMapObserver; flatMapWithMaxConcurrency; for; forIn; manySelect; selectConcat; selectConcatObserver; selectMany; selectManyObserver; selectSwitch; selectSwitchFirst; selectWithMatchConcurrent; switchMap,concatMap; flatMap; flatMapIterable; switchMap,ManySelect; SelectMany,flatMap; flatMapTo; selectMany; flatMapLatest; concatMap; concatMapTo,concat_all; expand; flat_map; for_in; many_select; select_many; select_switch,flat_map; flat_map_with_index,concatMap; flatMap; flatMapIterable; flatMapIterableWith; flatMapWith; switchMap,flatMap; flatMapWithIndex; flatMapFirst; flatMapLatest
Map,http://reactivex.io/documentation/operators/map.html,Map,keep; keep-indexed; map; map-indexed,map,byLine; cast; encode; map,byLine; cast; encode; map,cast; map,map; pluck; select,cast; map,Cast; Select,map; mapWithIndex; mapTo; select; pluck,map; pluck; select,map; map_with_index,map,map; mapWithIndex
map,http://reactivex.io/documentation/operators/zip.html,Zip,map; mapCat,zip,zip; zipWith,zip; zipWith,zip; zipArray; zipIterable; zipWith,forkJoin; zip; zipArray,zip; zipWith,Zip,zip; forkJoin,zip; zip_array,zip,zip; zipWith; zipWithIndex,zip
MapCat,http://reactivex.io/documentation/operators/flatmap.html,FlatMap,flatmap; mapcat,concat_map; flat_map,concatMap; flatMap; flatMapIterable; StringObservable.split; switchMap,concatMap; flatMap; flatMapIterable; StringObervable.split; switchMap,concatMap; concatMapDelayError; concatMapEager; concatMapEagerDelayError; concatMapIterable; flatMap; flatMapIterable; switchMap; switchMapDelayError,concatMap; concatMapObserver; flatMap; flatMapFirst; flatMapLatest; flatMapObserver; flatMapWithMaxConcurrency; for; forIn; manySelect; selectConcat; selectConcatObserver; selectMany; selectManyObserver; selectSwitch; selectSwitchFirst; selectWithMatchConcurrent; switchMap,concatMap; flatMap; flatMapIterable; switchMap,ManySelect; SelectMany,flatMap; flatMapTo; selectMany; flatMapLatest; concatMap; concatMapTo,concat_all; expand; flat_map; for_in; many_select; select_many; select_switch,flat_map; flat_map_with_index,concatMap; flatMap; flatMapIterable; flatMapIterableWith; flatMapWith; switchMap,flatMap; flatMapWithIndex; flatMapFirst; flatMapLatest
mapCat,http://reactivex.io/documentation/operators/zip.html,Zip,map; mapCat,zip,zip; zipWith,zip; zipWith,zip; zipArray; zipIterable; zipWith,forkJoin; zip; zipArray,zip; zipWith,Zip,zip; forkJoin,zip; zip_array,zip,zip; zipWith; zipWithIndex,zip
map-indexed,http://reactivex.io/documentation/operators/map.html,Map,keep; keep-indexed; map; map-indexed,map,byLine; cast; encode; map,byLine; cast; encode; map,cast; map,map; pluck; select,cast; map,Cast; Select,map; mapWithIndex; mapTo; select; pluck,map; pluck; select,map; map_with_index,map,map; mapWithIndex
mapTo,http://reactivex.io/documentation/operators/map.html,Map,keep; keep-indexed; map; map-indexed,map,byLine; cast; encode; map,byLine; cast; encode; map,cast; map,map; pluck; select,cast; map,Cast; Select,map; mapWithIndex; mapTo; select; pluck,map; pluck; select,map; map_with_index,map,map; mapWithIndex
mapWithIndex,http://reactivex.io/documentation/operators/map.html,Map,keep; keep-indexed; map; map-indexed,map,byLine; cast; encode; map,byLine; cast; encode; map,cast; map,map; pluck; select,cast; map,Cast; Select,map; mapWithIndex; mapTo; select; pluck,map; pluck; select,map; map_with_index,map,map; mapWithIndex
Materialize,http://reactivex.io/documentation/operators/materialize-dematerialize.html,Materialize/Dematerialize,,,dematerialize; materialize,dematerialize; materialize,dematerialize; materialize,dematerialize,dematerialize; materialize,dematerialize; materialize,materialize; dematerialize,dematerialize; materialize,dematerialize; materialize,,
Max,http://reactivex.io/documentation/operators/max.html,Max,,,max; maxBy,max; maxBy,,max; maxBy,max; maxBy,Max; MaxBy,max,max; max_by,max; max_by,,
MaxBy,http://reactivex.io/documentation/operators/max.html,Max,,,max; maxBy,max; maxBy,,max; maxBy,max; maxBy,Max; MaxBy,max,max; max_by,max; max_by,,
Merge,http://reactivex.io/documentation/operators/merge.html,Merge,interleave; interleave*; merge; merge*; merge-delay-error; merge-delay-error*,merge,merge; mergeDelayError; mergeWith,merge; mergeDelayError; mergeWith,merge; mergeArray; mergeArrayDelayError; mergeDelayError; mergeWith,merge; mergeAll; mergeDelayError,merge; mergeDelayError; mergeWith,Merge,merge; mergeAll,merge; merge_all; merge_observable,merge; merge_all; merge_concurrent,flatten; flattenDelayError; merge; mergeDelayError,merge
mergeAll,http://reactivex.io/documentation/operators/merge.html,Merge,interleave; interleave*; merge; merge*; merge-delay-error; merge-delay-error*,merge,merge; mergeDelayError; mergeWith,merge; mergeDelayError; mergeWith,merge; mergeArray; mergeArrayDelayError; mergeDelayError; mergeWith,merge; mergeAll; mergeDelayError,merge; mergeDelayError; mergeWith,Merge,merge; mergeAll,merge; merge_all; merge_observable,merge; merge_all; merge_concurrent,flatten; flattenDelayError; merge; mergeDelayError,merge
mergeArray,http://reactivex.io/documentation/operators/merge.html,Merge,interleave; interleave*; merge; merge*; merge-delay-error; merge-delay-error*,merge,merge; mergeDelayError; mergeWith,merge; mergeDelayError; mergeWith,merge; mergeArray; mergeArrayDelayError; mergeDelayError; mergeWith,merge; mergeAll; mergeDelayError,merge; mergeDelayError; mergeWith,Merge,merge; mergeAll,merge; merge_all; merge_observable,merge; merge_all; merge_concurrent,flatten; flattenDelayError; merge; mergeDelayError,merge
mergeArrayDelayError,http://reactivex.io/documentation/operators/merge.html,Merge,interleave; interleave*; merge; merge*; merge-delay-error; merge-delay-error*,merge,merge; mergeDelayError; mergeWith,merge; mergeDelayError; mergeWith,merge; mergeArray; mergeArrayDelayError; mergeDelayError; mergeWith,merge; mergeAll; mergeDelayError,merge; mergeDelayError; mergeWith,Merge,merge; mergeAll,merge; merge_all; merge_observable,merge; merge_all; merge_concurrent,flatten; flattenDelayError; merge; mergeDelayError,merge
merge_concurrent,http://reactivex.io/documentation/operators/merge.html,Merge,interleave; interleave*; merge; merge*; merge-delay-error; merge-delay-error*,merge,merge; mergeDelayError; mergeWith,merge; mergeDelayError; mergeWith,merge; mergeArray; mergeArrayDelayError; mergeDelayError; mergeWith,merge; mergeAll; mergeDelayError,merge; mergeDelayError; mergeWith,Merge,merge; mergeAll,merge; merge_all; merge_observable,merge; merge_all; merge_concurrent,flatten; flattenDelayError; merge; mergeDelayError,merge
mergeDelayError,http://reactivex.io/documentation/operators/merge.html,Merge,interleave; interleave*; merge; merge*; merge-delay-error; merge-delay-error*,merge,merge; mergeDelayError; mergeWith,merge; mergeDelayError; mergeWith,merge; mergeArray; mergeArrayDelayError; mergeDelayError; mergeWith,merge; mergeAll; mergeDelayError,merge; mergeDelayError; mergeWith,Merge,merge; mergeAll,merge; merge_all; merge_observable,merge; merge_all; merge_concurrent,flatten; flattenDelayError; merge; mergeDelayError,merge
mergeObservable,http://reactivex.io/documentation/operators/merge.html,Merge,interleave; interleave*; merge; merge*; merge-delay-error; merge-delay-error*,merge,merge; mergeDelayError; mergeWith,merge; mergeDelayError; mergeWith,merge; mergeArray; mergeArrayDelayError; mergeDelayError; mergeWith,merge; mergeAll; mergeDelayError,merge; mergeDelayError; mergeWith,Merge,merge; mergeAll,merge; merge_all; merge_observable,merge; merge_all; merge_concurrent,flatten; flattenDelayError; merge; mergeDelayError,merge
mergeWith,http://reactivex.io/documentation/operators/merge.html,Merge,interleave; interleave*; merge; merge*; merge-delay-error; merge-delay-error*,merge,merge; mergeDelayError; mergeWith,merge; mergeDelayError; mergeWith,merge; mergeArray; mergeArrayDelayError; mergeDelayError; mergeWith,merge; mergeAll; mergeDelayError,merge; mergeDelayError; mergeWith,Merge,merge; mergeAll,merge; merge_all; merge_observable,merge; merge_all; merge_concurrent,flatten; flattenDelayError; merge; mergeDelayError,merge
Min,http://reactivex.io/documentation/operators/min.html,Min,,,min; minBy,min; minBy,,min; minBy,min; minBy,Min; MinBy,min,min; min_by,min; min_by,,
MinBy,http://reactivex.io/documentation/operators/min.html,Min,,,min; minBy,min; minBy,,min; minBy,min; minBy,Min; MinBy,min,min; min_by,min; min_by,,
MostRecent,http://reactivex.io/documentation/operators/first.html,First,first; single,first,first; firstOrDefault; latest; mostRecent; next; single; singleOrDefault; takeFirst,first; firstOrDefault; latest; mostRecent; next; single; singleOrDefault; takeFirst,blockingFirst; blockingSingle; first; firstElement; single; singleElement; takeFirst,find; findIndex; first; single,first; firstOrDefault; mostRecent; single; singleOrDefault; takeFirst,First; FirstOrDefault; Latest; Next; Single; SingleOrDefault,,first; first_or_default; single; single_or_default,first; first_or_default; single; single_or_default,first; firstOrElse; head; headOption; headOrElse; latest; next; single; singleOption; singleOrElse,single
Multicast,http://reactivex.io/documentation/operators/publish.html,Publish,,multicast; publish,publish,publish,publish,let; letBind; multicast; publish; publishLast; publishValue,publish,Multicast; Publish; PublishLast,multicast; multicastWithSelector; publish; publishLast; publishValue,let; let_bind; multicast; publish; publishValue,,multicast; publish; publishLast,multicast; publish
multicastWithSelector,http://reactivex.io/documentation/operators/publish.html,Publish,,multicast; publish,publish,publish,publish,let; letBind; multicast; publish; publishLast; publishValue,publish,Multicast; Publish; PublishLast,multicast; multicastWithSelector; publish; publishLast; publishValue,let; let_bind; multicast; publish; publishValue,,multicast; publish; publishLast,multicast; publish
nest,http://reactivex.io/documentation/operators/to.html,To,BlockingObservable.blocking; interpose; BlockingObservable.into; BlockingObservable.seq; sort; sort-by; sorted-list-by,as_blocking,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,blockingIterable; blockingLatest; blockingMostRecent; blockingNext; sorted; to; toFuture; toList; toMap; toMultimap; toSortedList,toArray; toMap; toSet,BlockingObservable.from; BlockingObservable.getIterator; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,GetEnumerator; ToArray; ToDictionary; ToEnumerable; ToEvent; ToEventPattern; ToList; ToLookup; ToTask,toArray,BlockingObservable.to_iterable; to_array; to_blocking; to_dict; to_future; to_iterable; to_list; to_marbles; to_set,to_a; to_h,nest; to; toArray; toBlocking; toBuffer; BlockingObservable.toFuture; toIndexedSeq; BlockingObservable.toIterable; toIterable; toIterator; BlockingObservable.toList; toList; toMap; toMultiMap; toSet; toStream; toTraversable; toVector,toArray
Never,http://reactivex.io/documentation/operators/empty-never-throw.html,Empty/Never/Throw,empty; never; throw,empty; never; throw,empty; never; error,empty; never; error,empty; never; error,empty; never; throw,empty; never; error; asObservable,Empty; Never; Throw,empty; never; error,empty; never; throw; throw_exception,empty; never; raise_error,empty; never; error,empty; never; failWith
Next,http://reactivex.io/documentation/operators/takelast.html,TakeLast,next,,takeLast; takeLastBuffer,takeLast; takeLastBuffer,takeLast,takeLast; takeLastBuffer; takeLastBufferWithTime; takeLastWithTime,takeLast; takeLastBuffer,TakeLast,takeLast,take_last; take_last_buffer; take_last_with_time,take_last; take_last_buffer,tail; takeRight,takeLast
Next,http://reactivex.io/documentation/operators/first.html,First,first; single,first,first; firstOrDefault; latest; mostRecent; next; single; singleOrDefault; takeFirst,first; firstOrDefault; latest; mostRecent; next; single; singleOrDefault; takeFirst,blockingFirst; blockingSingle; first; firstElement; single; singleElement; takeFirst,find; findIndex; first; single,first; firstOrDefault; mostRecent; single; singleOrDefault; takeFirst,First; FirstOrDefault; Latest; Next; Single; SingleOrDefault,,first; first_or_default; single; single_or_default,first; first_or_default; single; single_or_default,first; firstOrElse; head; headOption; headOrElse; latest; next; single; singleOption; singleOrElse,single
none,http://reactivex.io/documentation/operators/contains.html,Contains,some,,contains; exists; isEmpty,contains; exists; isEmpty,any; contains; isEmpty,contains; findIndex; indexOf; isEmpty,contains; exists,Any; Contains,isEmpty,contains; find; find_index; is_empty; some,any?; contains?; none?,contains; exists; isEmpty,
nonEmpty,http://reactivex.io/documentation/operators/contains.html,Contains,some,,contains; exists; isEmpty,contains; exists; isEmpty,any; contains; isEmpty,contains; findIndex; indexOf; isEmpty,contains; exists,Any; Contains,isEmpty,contains; find; find_index; is_empty; some,any?; contains?; none?,contains; exists; isEmpty,
nth,http://reactivex.io/documentation/operators/elementat.html,ElementAt,nth,,elementAt; elementAtOrDefault,elementAt; elementAtOrDefault,elementAt,elementAt,elementAt; elementAtOrDefault,ElementAt; ElementAtOrDefault,,element_at; element_at_or_default,element_at; element_at_or_default,elementAt; elementAtOrDefault,elementAt
ObserveOn,http://reactivex.io/documentation/operators/observeon.html,ObserveOn,,observe_on,observeOn,observeOn,observeOn,observeOn,observeOn,ObserveOn; ObserveOnDispatcher,,observe_on,observe_on,observeOn,observeOn
ObserveOnDispatcher,http://reactivex.io/documentation/operators/observeon.html,ObserveOn,,observe_on,observeOn,observeOn,observeOn,observeOn,observeOn,ObserveOn; ObserveOnDispatcher,,observe_on,observe_on,observeOn,observeOn
observeSingleOn,http://reactivex.io/documentation/operators/observeon.html,ObserveOn,,observe_on,observeOn,observeOn,observeOn,observeOn,observeOn,ObserveOn; ObserveOnDispatcher,,observe_on,observe_on,observeOn,observeOn
of,http://reactivex.io/documentation/operators/from.html,From,seq,from,decode; from; fromAction; fromCallable; fromFunc0; fromRunnable; runAsync,decode; from; fromAction; fromCallable; fromFunc0; fromRunnable; runAsync,fromArray; fromCallable; fromFuture; fromIterable; fromPublisher,from; fromCallback; fromEvent; fromEventPattern; fromNodeCallback; fromPromise; of; ofArrayChanges; ofObjectChanges; ofWithScheduler; pairs,asObservable; from,AsObservable; FromAsyncPattern; FromEvent; FromEventPattern; ToObservable,fromArray; fromIterator; asObservable; fromPromise,from_array; from_callback; from_future; from_iterable; from_list; from_marbles; of,of_array; of_enumerable; of_enumerator,from; items,from; toObservable
of_array,http://reactivex.io/documentation/operators/from.html,From,seq,from,decode; from; fromAction; fromCallable; fromFunc0; fromRunnable; runAsync,decode; from; fromAction; fromCallable; fromFunc0; fromRunnable; runAsync,fromArray; fromCallable; fromFuture; fromIterable; fromPublisher,from; fromCallback; fromEvent; fromEventPattern; fromNodeCallback; fromPromise; of; ofArrayChanges; ofObjectChanges; ofWithScheduler; pairs,asObservable; from,AsObservable; FromAsyncPattern; FromEvent; FromEventPattern; ToObservable,fromArray; fromIterator; asObservable; fromPromise,from_array; from_callback; from_future; from_iterable; from_list; from_marbles; of,of_array; of_enumerable; of_enumerator,from; items,from; toObservable
ofArrayChanges,http://reactivex.io/documentation/operators/from.html,From,seq,from,decode; from; fromAction; fromCallable; fromFunc0; fromRunnable; runAsync,decode; from; fromAction; fromCallable; fromFunc0; fromRunnable; runAsync,fromArray; fromCallable; fromFuture; fromIterable; fromPublisher,from; fromCallback; fromEvent; fromEventPattern; fromNodeCallback; fromPromise; of; ofArrayChanges; ofObjectChanges; ofWithScheduler; pairs,asObservable; from,AsObservable; FromAsyncPattern; FromEvent; FromEventPattern; ToObservable,fromArray; fromIterator; asObservable; fromPromise,from_array; from_callback; from_future; from_iterable; from_list; from_marbles; of,of_array; of_enumerable; of_enumerator,from; items,from; toObservable
of_enumerable,http://reactivex.io/documentation/operators/from.html,From,seq,from,decode; from; fromAction; fromCallable; fromFunc0; fromRunnable; runAsync,decode; from; fromAction; fromCallable; fromFunc0; fromRunnable; runAsync,fromArray; fromCallable; fromFuture; fromIterable; fromPublisher,from; fromCallback; fromEvent; fromEventPattern; fromNodeCallback; fromPromise; of; ofArrayChanges; ofObjectChanges; ofWithScheduler; pairs,asObservable; from,AsObservable; FromAsyncPattern; FromEvent; FromEventPattern; ToObservable,fromArray; fromIterator; asObservable; fromPromise,from_array; from_callback; from_future; from_iterable; from_list; from_marbles; of,of_array; of_enumerable; of_enumerator,from; items,from; toObservable
of_enumerator,http://reactivex.io/documentation/operators/from.html,From,seq,from,decode; from; fromAction; fromCallable; fromFunc0; fromRunnable; runAsync,decode; from; fromAction; fromCallable; fromFunc0; fromRunnable; runAsync,fromArray; fromCallable; fromFuture; fromIterable; fromPublisher,from; fromCallback; fromEvent; fromEventPattern; fromNodeCallback; fromPromise; of; ofArrayChanges; ofObjectChanges; ofWithScheduler; pairs,asObservable; from,AsObservable; FromAsyncPattern; FromEvent; FromEventPattern; ToObservable,fromArray; fromIterator; asObservable; fromPromise,from_array; from_callback; from_future; from_iterable; from_list; from_marbles; of,of_array; of_enumerable; of_enumerator,from; items,from; toObservable
ofObjectChanges,http://reactivex.io/documentation/operators/from.html,From,seq,from,decode; from; fromAction; fromCallable; fromFunc0; fromRunnable; runAsync,decode; from; fromAction; fromCallable; fromFunc0; fromRunnable; runAsync,fromArray; fromCallable; fromFuture; fromIterable; fromPublisher,from; fromCallback; fromEvent; fromEventPattern; fromNodeCallback; fromPromise; of; ofArrayChanges; ofObjectChanges; ofWithScheduler; pairs,asObservable; from,AsObservable; FromAsyncPattern; FromEvent; FromEventPattern; ToObservable,fromArray; fromIterator; asObservable; fromPromise,from_array; from_callback; from_future; from_iterable; from_list; from_marbles; of,of_array; of_enumerable; of_enumerator,from; items,from; toObservable
OfType,http://reactivex.io/documentation/operators/filter.html,Filter,filter,filter,filter; ofType,filter; ofType,filter; ofType,filter; where,filter; ofType,OfType; Where,filter; where,filter; slice; where,select; select_with_index,collect; filter; filterNot; BlockingObservable.withFilter; withFilter,filter
ofWithScheduler,http://reactivex.io/documentation/operators/from.html,From,seq,from,decode; from; fromAction; fromCallable; fromFunc0; fromRunnable; runAsync,decode; from; fromAction; fromCallable; fromFunc0; fromRunnable; runAsync,fromArray; fromCallable; fromFuture; fromIterable; fromPublisher,from; fromCallback; fromEvent; fromEventPattern; fromNodeCallback; fromPromise; of; ofArrayChanges; ofObjectChanges; ofWithScheduler; pairs,asObservable; from,AsObservable; FromAsyncPattern; FromEvent; FromEventPattern; ToObservable,fromArray; fromIterator; asObservable; fromPromise,from_array; from_callback; from_future; from_iterable; from_list; from_marbles; of,of_array; of_enumerable; of_enumerator,from; items,from; toObservable
onBackpressureBlock,http://reactivex.io/documentation/operators/backpressure.html,,,,onBackpressureBuffer; onBackpressureDrop; onBackpressureLatest,onBackpressureBuffer; onBackpressureDrop; onBackpressureLatest,Flowable,controlled; pausable; pausableBuffered; stopAndWait; windowed,,,,,,onBackpressureBuffer; onBackpressureDrop; onBackpressureLatest,
onBackpressureBuffer,http://reactivex.io/documentation/operators/backpressure.html,,,,onBackpressureBuffer; onBackpressureDrop; onBackpressureLatest,onBackpressureBuffer; onBackpressureDrop; onBackpressureLatest,Flowable,controlled; pausable; pausableBuffered; stopAndWait; windowed,,,,,,onBackpressureBuffer; onBackpressureDrop; onBackpressureLatest,
onBackpressureDrop,http://reactivex.io/documentation/operators/backpressure.html,,,,onBackpressureBuffer; onBackpressureDrop; onBackpressureLatest,onBackpressureBuffer; onBackpressureDrop; onBackpressureLatest,Flowable,controlled; pausable; pausableBuffered; stopAndWait; windowed,,,,,,onBackpressureBuffer; onBackpressureDrop; onBackpressureLatest,
OnErrorResumeNext,http://reactivex.io/documentation/operators/catch.html,Catch,catch*,,onErrorResumeNext; onErrorReturn; onExceptionResumeNext,onErrorResumeNext; onErrorReturn; onExceptionResumeNext,onErrorResumeNext; onErrorReturn; onErrorReturnItem; onExceptionResumeNext,catch; onErrorResumeNext,onErrorResumeNext; onErrorReturn; onExceptionResumeNext,Catch; OnErrorResumeNext,catch,catch_exception; on_error_resume_next,on_error_resume_next; rescue_error,onErrorFlatMap; onErrorResumeNext; onErrorReturn; onExceptionResumeNext,catchError; catchErrorJustReturn
onErrorReturn,http://reactivex.io/documentation/operators/catch.html,Catch,catch*,,onErrorResumeNext; onErrorReturn; onExceptionResumeNext,onErrorResumeNext; onErrorReturn; onExceptionResumeNext,onErrorResumeNext; onErrorReturn; onErrorReturnItem; onExceptionResumeNext,catch; onErrorResumeNext,onErrorResumeNext; onErrorReturn; onExceptionResumeNext,Catch; OnErrorResumeNext,catch,catch_exception; on_error_resume_next,on_error_resume_next; rescue_error,onErrorFlatMap; onErrorResumeNext; onErrorReturn; onExceptionResumeNext,catchError; catchErrorJustReturn
onErrorReturnItem,http://reactivex.io/documentation/operators/catch.html,Catch,catch*,,onErrorResumeNext; onErrorReturn; onExceptionResumeNext,onErrorResumeNext; onErrorReturn; onExceptionResumeNext,onErrorResumeNext; onErrorReturn; onErrorReturnItem; onExceptionResumeNext,catch; onErrorResumeNext,onErrorResumeNext; onErrorReturn; onExceptionResumeNext,Catch; OnErrorResumeNext,catch,catch_exception; on_error_resume_next,on_error_resume_next; rescue_error,onErrorFlatMap; onErrorResumeNext; onErrorReturn; onExceptionResumeNext,catchError; catchErrorJustReturn
onExceptionResumeNext,http://reactivex.io/documentation/operators/catch.html,Catch,catch*,,onErrorResumeNext; onErrorReturn; onExceptionResumeNext,onErrorResumeNext; onErrorReturn; onExceptionResumeNext,onErrorResumeNext; onErrorReturn; onErrorReturnItem; onExceptionResumeNext,catch; onErrorResumeNext,onErrorResumeNext; onErrorReturn; onExceptionResumeNext,Catch; OnErrorResumeNext,catch,catch_exception; on_error_resume_next,on_error_resume_next; rescue_error,onErrorFlatMap; onErrorResumeNext; onErrorReturn; onExceptionResumeNext,catchError; catchErrorJustReturn
onTerminateDetach,http://reactivex.io/documentation/operators/do.html,Do,do; finally,finally,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo; doAfterTerminate,doAfterTerminate; doOnComplete; doOnDispose; doOnEach; doOnError; doOnLifecycle; doOnNext; doOnSubscribe; doOnTerminate; onTerminateDetach,do; doOnCompleted; doOnError; doOnNext; finally; tap; tapOnCompleted; tapOnError; tapOnNext,doOnCompleted; doOnEach; doOnError; doOnNext; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,Do; Finally,do; doOnError; doOnCompleted; finally,do_action; finally_action; tap,ensures; tap,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,doOn
orElse,http://reactivex.io/documentation/operators/defaultifempty.html,DefaultIfEmpty,,,defaultIfEmpty; switchIfEmpty,defaultIfEmpty; switchIfEmpty,defaultIfEmpty; switchIfEmpty,defaultIfEmpty,defaultIfEmpty,DefaultIfEmpty,defaultIfEmpty,default_if_empty,default_if_empty,orElse; switchIfEmpty,
pairs,http://reactivex.io/documentation/operators/from.html,From,seq,from,decode; from; fromAction; fromCallable; fromFunc0; fromRunnable; runAsync,decode; from; fromAction; fromCallable; fromFunc0; fromRunnable; runAsync,fromArray; fromCallable; fromFuture; fromIterable; fromPublisher,from; fromCallback; fromEvent; fromEventPattern; fromNodeCallback; fromPromise; of; ofArrayChanges; ofObjectChanges; ofWithScheduler; pairs,asObservable; from,AsObservable; FromAsyncPattern; FromEvent; FromEventPattern; ToObservable,fromArray; fromIterator; asObservable; fromPromise,from_array; from_callback; from_future; from_iterable; from_list; from_marbles; of,of_array; of_enumerable; of_enumerator,from; items,from; toObservable
pairwise,http://reactivex.io/documentation/operators/buffer.html,Buffer,,buffer; pairwise,buffer,buffer,buffer,buffer; bufferWithCount; bufferWithTime; bufferWithTimeOrCount,buffer,Buffer,bufferWithCount,buffer; buffer_with_count; buffer_with_time; buffer_with_time_or_count; pairwise,buffer_with_count; buffer_with_time,slidingBuffer; tumblingBuffer,buffer
partition,http://reactivex.io/documentation/operators/groupby.html,GroupBy,group-by; split-with,group_by,groupBy,groupBy,groupBy,groupBy; groupByUntil,groupBy,GroupBy; GroupByUntil,groupBy; groupByUntil; partition,group_by; group_by_until; partition,,groupBy,
partition-all,http://reactivex.io/documentation/operators/window.html,Window,partition-all,window; window_with_time; window_with_time_or_count,window,window,window,window; windowWithCount; windowWithTime; windowWithTimeOrCount,window,Window,,window; window_with_count; window_with_time; window_with_time_or_count,window_with_count,sliding; tumbling,window
pausable,http://reactivex.io/documentation/operators/backpressure.html,,,,onBackpressureBuffer; onBackpressureDrop; onBackpressureLatest,onBackpressureBuffer; onBackpressureDrop; onBackpressureLatest,Flowable,controlled; pausable; pausableBuffered; stopAndWait; windowed,,,,,,onBackpressureBuffer; onBackpressureDrop; onBackpressureLatest,
pausableBuffered,http://reactivex.io/documentation/operators/backpressure.html,,,,onBackpressureBuffer; onBackpressureDrop; onBackpressureLatest,onBackpressureBuffer; onBackpressureDrop; onBackpressureLatest,Flowable,controlled; pausable; pausableBuffered; stopAndWait; windowed,,,,,,onBackpressureBuffer; onBackpressureDrop; onBackpressureLatest,
pluck,http://reactivex.io/documentation/operators/map.html,Map,keep; keep-indexed; map; map-indexed,map,byLine; cast; encode; map,byLine; cast; encode; map,cast; map,map; pluck; select,cast; map,Cast; Select,map; mapWithIndex; mapTo; select; pluck,map; pluck; select,map; map_with_index,map,map; mapWithIndex
product,http://reactivex.io/documentation/operators/sum.html,Sum,,sum,sumDouble; sumFloat; sumInteger; sumLong; StringObservable.join; StringObservable.stringConcat,sumDouble; sumFloat; sumInteger; sumLong; StringObservable.join; StringObservable.stringConcat,,sum,sumDouble; sumFloat; sumInteger; sumLong,Sum,sum,sum,sum,product; sum,
Publish,http://reactivex.io/documentation/operators/publish.html,Publish,,multicast; publish,publish,publish,publish,let; letBind; multicast; publish; publishLast; publishValue,publish,Multicast; Publish; PublishLast,multicast; multicastWithSelector; publish; publishLast; publishValue,let; let_bind; multicast; publish; publishValue,,multicast; publish; publishLast,multicast; publish
PublishLast,http://reactivex.io/documentation/operators/publish.html,Publish,,multicast; publish,publish,publish,publish,let; letBind; multicast; publish; publishLast; publishValue,publish,Multicast; Publish; PublishLast,multicast; multicastWithSelector; publish; publishLast; publishValue,let; let_bind; multicast; publish; publishValue,,multicast; publish; publishLast,multicast; publish
publish_synchronized,http://reactivex.io/documentation/operators/replay.html,Replay,cache,publish_synchronized; replay,replay; cache,cache; replay,cache; replay,replay; shareReplay,replay; cache,Replay,replay; shareReplay,replay,,replay; cache,replay; shareReplay
publishValue,http://reactivex.io/documentation/operators/publish.html,Publish,,multicast; publish,publish,publish,publish,let; letBind; multicast; publish; publishLast; publishValue,publish,Multicast; Publish; PublishLast,multicast; multicastWithSelector; publish; publishLast; publishValue,let; let_bind; multicast; publish; publishValue,,multicast; publish; publishLast,multicast; publish
raise_error,http://reactivex.io/documentation/operators/empty-never-throw.html,Empty/Never/Throw,empty; never; throw,empty; never; throw,empty; never; error,empty; never; error,empty; never; error,empty; never; throw,empty; never; error; asObservable,Empty; Never; Throw,empty; never; error,empty; never; throw; throw_exception,empty; never; raise_error,empty; never; error,empty; never; failWith
Range,http://reactivex.io/documentation/operators/range.html,Range,range,range,range,range,intervalRange; range,range,range,Range,range,range,range,,range
Reduce,http://reactivex.io/documentation/operators/reduce.html,Reduce,into; iterate; reduce,iterate; reduce,collect; reduce,collect; reduce,collect; collectInto; reduce; reduceWith,reduce,collect; reduce,Aggregate,reduce,aggregate; expand; reduce,reduce,foldLeft; reduce,reduce
reduceWith,http://reactivex.io/documentation/operators/reduce.html,Reduce,into; iterate; reduce,iterate; reduce,collect; reduce,collect; reduce,collect; collectInto; reduce; reduceWith,reduce,collect; reduce,Aggregate,reduce,aggregate; expand; reduce,reduce,foldLeft; reduce,reduce
reductions,http://reactivex.io/documentation/operators/scan.html,Scan,reductions,,scan,scan,scan,expand; scan,scan,Scan,scan,scan,scan,scan,scan
RefCount,http://reactivex.io/documentation/operators/refcount.html,RefCount,,publish,refCount; share,refCount; share,share,refCount; share; shareValue,refCount; share,RefCount,share; singleInstance; shareValue,ref_count,,refCount; share,refCount
Repeat,http://reactivex.io/documentation/operators/repeat.html,Repeat,cycle,repeat,doWhile; repeat; repeatWhen; whileDo,doWhile; repeat; repeatWhen; whileDo,repeat; repeatUntil; repeatWhen,doWhile; repeat; while,doWhile; repeat; repeatWhen; whileDo,Repeat,repeat; repeatWhen,do_while; repeat; while_do,repeat; repeat_infinitely,repeat; repeatWhen,repeatElement
repeat_infinitely,http://reactivex.io/documentation/operators/repeat.html,Repeat,cycle,repeat,doWhile; repeat; repeatWhen; whileDo,doWhile; repeat; repeatWhen; whileDo,repeat; repeatUntil; repeatWhen,doWhile; repeat; while,doWhile; repeat; repeatWhen; whileDo,Repeat,repeat; repeatWhen,do_while; repeat; while_do,repeat; repeat_infinitely,repeat; repeatWhen,repeatElement
repeatUntil,http://reactivex.io/documentation/operators/repeat.html,Repeat,cycle,repeat,doWhile; repeat; repeatWhen; whileDo,doWhile; repeat; repeatWhen; whileDo,repeat; repeatUntil; repeatWhen,doWhile; repeat; while,doWhile; repeat; repeatWhen; whileDo,Repeat,repeat; repeatWhen,do_while; repeat; while_do,repeat; repeat_infinitely,repeat; repeatWhen,repeatElement
repeatWhen,http://reactivex.io/documentation/operators/repeat.html,Repeat,cycle,repeat,doWhile; repeat; repeatWhen; whileDo,doWhile; repeat; repeatWhen; whileDo,repeat; repeatUntil; repeatWhen,doWhile; repeat; while,doWhile; repeat; repeatWhen; whileDo,Repeat,repeat; repeatWhen,do_while; repeat; while_do,repeat; repeat_infinitely,repeat; repeatWhen,repeatElement
Replay,http://reactivex.io/documentation/operators/replay.html,Replay,cache,publish_synchronized; replay,replay; cache,cache; replay,cache; replay,replay; shareReplay,replay; cache,Replay,replay; shareReplay,replay,,replay; cache,replay; shareReplay
rescue_error,http://reactivex.io/documentation/operators/catch.html,Catch,catch*,,onErrorResumeNext; onErrorReturn; onExceptionResumeNext,onErrorResumeNext; onErrorReturn; onExceptionResumeNext,onErrorResumeNext; onErrorReturn; onErrorReturnItem; onExceptionResumeNext,catch; onErrorResumeNext,onErrorResumeNext; onErrorReturn; onExceptionResumeNext,Catch; OnErrorResumeNext,catch,catch_exception; on_error_resume_next,on_error_resume_next; rescue_error,onErrorFlatMap; onErrorResumeNext; onErrorReturn; onExceptionResumeNext,catchError; catchErrorJustReturn
rest,http://reactivex.io/documentation/operators/first.html,First,first; single,first,first; firstOrDefault; latest; mostRecent; next; single; singleOrDefault; takeFirst,first; firstOrDefault; latest; mostRecent; next; single; singleOrDefault; takeFirst,blockingFirst; blockingSingle; first; firstElement; single; singleElement; takeFirst,find; findIndex; first; single,first; firstOrDefault; mostRecent; single; singleOrDefault; takeFirst,First; FirstOrDefault; Latest; Next; Single; SingleOrDefault,,first; first_or_default; single; single_or_default,first; first_or_default; single; single_or_default,first; firstOrElse; head; headOption; headOrElse; latest; next; single; singleOption; singleOrElse,single
Retry,http://reactivex.io/documentation/operators/retry.html,Retry,,retry,retry; retryWhen,retry; retryWhen,retry; retryUntil; retryWhen,retry,retry; retryWhen,Retry,retry; retryWhen,retry,retry; retry_infinitely,retry; retryWhen,retry; retryWhen
retry_infinitely,http://reactivex.io/documentation/operators/retry.html,Retry,,retry,retry; retryWhen,retry; retryWhen,retry; retryUntil; retryWhen,retry,retry; retryWhen,Retry,retry; retryWhen,retry,retry; retry_infinitely,retry; retryWhen,retry; retryWhen
retryUntil,http://reactivex.io/documentation/operators/retry.html,Retry,,retry,retry; retryWhen,retry; retryWhen,retry; retryUntil; retryWhen,retry,retry; retryWhen,Retry,retry; retryWhen,retry,retry; retry_infinitely,retry; retryWhen,retry; retryWhen
retryWhen,http://reactivex.io/documentation/operators/retry.html,Retry,,retry,retry; retryWhen,retry; retryWhen,retry; retryUntil; retryWhen,retry,retry; retryWhen,Retry,retry; retryWhen,retry,retry; retry_infinitely,retry; retryWhen,retry; retryWhen
Return,http://reactivex.io/documentation/operators/just.html,Just,return,just,just,just,just,just; return,asObservable; just,Return,of,just; return_value,just,items; just; :+,just; sequenceOf
returnElement,http://reactivex.io/documentation/operators/just.html,Just,return,just,just,just,just,just; return,asObservable; just,Return,of,just; return_value,just,items; just; :+,just; sequenceOf
returnValue,http://reactivex.io/documentation/operators/just.html,Just,return,just,just,just,just,just; return,asObservable; just,Return,of,just; return_value,just,items; just; :+,just; sequenceOf
runAsync,http://reactivex.io/documentation/operators/from.html,From,seq,from,decode; from; fromAction; fromCallable; fromFunc0; fromRunnable; runAsync,decode; from; fromAction; fromCallable; fromFunc0; fromRunnable; runAsync,fromArray; fromCallable; fromFuture; fromIterable; fromPublisher,from; fromCallback; fromEvent; fromEventPattern; fromNodeCallback; fromPromise; of; ofArrayChanges; ofObjectChanges; ofWithScheduler; pairs,asObservable; from,AsObservable; FromAsyncPattern; FromEvent; FromEventPattern; ToObservable,fromArray; fromIterator; asObservable; fromPromise,from_array; from_callback; from_future; from_iterable; from_list; from_marbles; of,of_array; of_enumerable; of_enumerator,from; items,from; toObservable
safeSubscribe,http://reactivex.io/documentation/operators/subscribe.html,Subscribe,BlockingObservable.doseq; subscribe,subscribe,BlockingObservable.forEach; forEach; subscribe,BlockingObservable.forEach; forEach; subscribe,blockingForEach; blockingSubscribe; forEachWhile; safeSubscribe; subscribe,forEach; subscribe; subscribeOnCompleted; subscribeOnError; subscribeOnNext,BlockingObservable.forEach; forEach; subscribe,ForEach; Subscribe,subscribe,BlockingObservable.for_each; subscribe,subscribe,BlockingObservable.foreach; forEach; subscribe,subscribe
Sample,http://reactivex.io/documentation/operators/sample.html,Sample,,,sample; throttleFirst; throttleLast,sample; throttleFirst; throttleLast,sample; throttleFirst; throttleLast,sample; throttleFirst,sample; throttleFirst; throttleLast,Sample,,sample; throttle_first; throttle_last,,sample; throttleFirst; throttleLast,sample; sampleLatest
Scan,http://reactivex.io/documentation/operators/scan.html,Scan,reductions,,scan,scan,scan,expand; scan,scan,Scan,scan,scan,scan,scan,scan
scanWith,http://reactivex.io/documentation/operators/scan.html,Scan,reductions,,scan,scan,scan,expand; scan,scan,Scan,scan,scan,scan,scan,scan
scope,http://reactivex.io/documentation/operators/using.html,Using,,scope,using,using,using,using,using,Using,,using,using,using,using
Select,http://reactivex.io/documentation/operators/map.html,Map,keep; keep-indexed; map; map-indexed,map,byLine; cast; encode; map,byLine; cast; encode; map,cast; map,map; pluck; select,cast; map,Cast; Select,map; mapWithIndex; mapTo; select; pluck,map; pluck; select,map; map_with_index,map,map; mapWithIndex
select,http://reactivex.io/documentation/operators/filter.html,Filter,filter,filter,filter; ofType,filter; ofType,filter; ofType,filter; where,filter; ofType,OfType; Where,filter; where,filter; slice; where,select; select_with_index,collect; filter; filterNot; BlockingObservable.withFilter; withFilter,filter
selectConcat,http://reactivex.io/documentation/operators/flatmap.html,FlatMap,flatmap; mapcat,concat_map; flat_map,concatMap; flatMap; flatMapIterable; StringObservable.split; switchMap,concatMap; flatMap; flatMapIterable; StringObervable.split; switchMap,concatMap; concatMapDelayError; concatMapEager; concatMapEagerDelayError; concatMapIterable; flatMap; flatMapIterable; switchMap; switchMapDelayError,concatMap; concatMapObserver; flatMap; flatMapFirst; flatMapLatest; flatMapObserver; flatMapWithMaxConcurrency; for; forIn; manySelect; selectConcat; selectConcatObserver; selectMany; selectManyObserver; selectSwitch; selectSwitchFirst; selectWithMatchConcurrent; switchMap,concatMap; flatMap; flatMapIterable; switchMap,ManySelect; SelectMany,flatMap; flatMapTo; selectMany; flatMapLatest; concatMap; concatMapTo,concat_all; expand; flat_map; for_in; many_select; select_many; select_switch,flat_map; flat_map_with_index,concatMap; flatMap; flatMapIterable; flatMapIterableWith; flatMapWith; switchMap,flatMap; flatMapWithIndex; flatMapFirst; flatMapLatest
selectConcatObserver,http://reactivex.io/documentation/operators/flatmap.html,FlatMap,flatmap; mapcat,concat_map; flat_map,concatMap; flatMap; flatMapIterable; StringObservable.split; switchMap,concatMap; flatMap; flatMapIterable; StringObervable.split; switchMap,concatMap; concatMapDelayError; concatMapEager; concatMapEagerDelayError; concatMapIterable; flatMap; flatMapIterable; switchMap; switchMapDelayError,concatMap; concatMapObserver; flatMap; flatMapFirst; flatMapLatest; flatMapObserver; flatMapWithMaxConcurrency; for; forIn; manySelect; selectConcat; selectConcatObserver; selectMany; selectManyObserver; selectSwitch; selectSwitchFirst; selectWithMatchConcurrent; switchMap,concatMap; flatMap; flatMapIterable; switchMap,ManySelect; SelectMany,flatMap; flatMapTo; selectMany; flatMapLatest; concatMap; concatMapTo,concat_all; expand; flat_map; for_in; many_select; select_many; select_switch,flat_map; flat_map_with_index,concatMap; flatMap; flatMapIterable; flatMapIterableWith; flatMapWith; switchMap,flatMap; flatMapWithIndex; flatMapFirst; flatMapLatest
SelectMany,http://reactivex.io/documentation/operators/flatmap.html,FlatMap,flatmap; mapcat,concat_map; flat_map,concatMap; flatMap; flatMapIterable; StringObservable.split; switchMap,concatMap; flatMap; flatMapIterable; StringObervable.split; switchMap,concatMap; concatMapDelayError; concatMapEager; concatMapEagerDelayError; concatMapIterable; flatMap; flatMapIterable; switchMap; switchMapDelayError,concatMap; concatMapObserver; flatMap; flatMapFirst; flatMapLatest; flatMapObserver; flatMapWithMaxConcurrency; for; forIn; manySelect; selectConcat; selectConcatObserver; selectMany; selectManyObserver; selectSwitch; selectSwitchFirst; selectWithMatchConcurrent; switchMap,concatMap; flatMap; flatMapIterable; switchMap,ManySelect; SelectMany,flatMap; flatMapTo; selectMany; flatMapLatest; concatMap; concatMapTo,concat_all; expand; flat_map; for_in; many_select; select_many; select_switch,flat_map; flat_map_with_index,concatMap; flatMap; flatMapIterable; flatMapIterableWith; flatMapWith; switchMap,flatMap; flatMapWithIndex; flatMapFirst; flatMapLatest
selectManyObserver,http://reactivex.io/documentation/operators/flatmap.html,FlatMap,flatmap; mapcat,concat_map; flat_map,concatMap; flatMap; flatMapIterable; StringObservable.split; switchMap,concatMap; flatMap; flatMapIterable; StringObervable.split; switchMap,concatMap; concatMapDelayError; concatMapEager; concatMapEagerDelayError; concatMapIterable; flatMap; flatMapIterable; switchMap; switchMapDelayError,concatMap; concatMapObserver; flatMap; flatMapFirst; flatMapLatest; flatMapObserver; flatMapWithMaxConcurrency; for; forIn; manySelect; selectConcat; selectConcatObserver; selectMany; selectManyObserver; selectSwitch; selectSwitchFirst; selectWithMatchConcurrent; switchMap,concatMap; flatMap; flatMapIterable; switchMap,ManySelect; SelectMany,flatMap; flatMapTo; selectMany; flatMapLatest; concatMap; concatMapTo,concat_all; expand; flat_map; for_in; many_select; select_many; select_switch,flat_map; flat_map_with_index,concatMap; flatMap; flatMapIterable; flatMapIterableWith; flatMapWith; switchMap,flatMap; flatMapWithIndex; flatMapFirst; flatMapLatest
select_switch,http://reactivex.io/documentation/operators/switch.html,Switch,,switch_on_next,switchOnNext,switchOnNext,switchOnNext; switchOnNextDelayError,switch,switchOnNext,Switch,switch; switchFirst,exclusive; select_switch; switch_latest,latest,switch,switchLatest
selectSwitch,http://reactivex.io/documentation/operators/flatmap.html,FlatMap,flatmap; mapcat,concat_map; flat_map,concatMap; flatMap; flatMapIterable; StringObservable.split; switchMap,concatMap; flatMap; flatMapIterable; StringObervable.split; switchMap,concatMap; concatMapDelayError; concatMapEager; concatMapEagerDelayError; concatMapIterable; flatMap; flatMapIterable; switchMap; switchMapDelayError,concatMap; concatMapObserver; flatMap; flatMapFirst; flatMapLatest; flatMapObserver; flatMapWithMaxConcurrency; for; forIn; manySelect; selectConcat; selectConcatObserver; selectMany; selectManyObserver; selectSwitch; selectSwitchFirst; selectWithMatchConcurrent; switchMap,concatMap; flatMap; flatMapIterable; switchMap,ManySelect; SelectMany,flatMap; flatMapTo; selectMany; flatMapLatest; concatMap; concatMapTo,concat_all; expand; flat_map; for_in; many_select; select_many; select_switch,flat_map; flat_map_with_index,concatMap; flatMap; flatMapIterable; flatMapIterableWith; flatMapWith; switchMap,flatMap; flatMapWithIndex; flatMapFirst; flatMapLatest
selectSwitchFirst,http://reactivex.io/documentation/operators/flatmap.html,FlatMap,flatmap; mapcat,concat_map; flat_map,concatMap; flatMap; flatMapIterable; StringObservable.split; switchMap,concatMap; flatMap; flatMapIterable; StringObervable.split; switchMap,concatMap; concatMapDelayError; concatMapEager; concatMapEagerDelayError; concatMapIterable; flatMap; flatMapIterable; switchMap; switchMapDelayError,concatMap; concatMapObserver; flatMap; flatMapFirst; flatMapLatest; flatMapObserver; flatMapWithMaxConcurrency; for; forIn; manySelect; selectConcat; selectConcatObserver; selectMany; selectManyObserver; selectSwitch; selectSwitchFirst; selectWithMatchConcurrent; switchMap,concatMap; flatMap; flatMapIterable; switchMap,ManySelect; SelectMany,flatMap; flatMapTo; selectMany; flatMapLatest; concatMap; concatMapTo,concat_all; expand; flat_map; for_in; many_select; select_many; select_switch,flat_map; flat_map_with_index,concatMap; flatMap; flatMapIterable; flatMapIterableWith; flatMapWith; switchMap,flatMap; flatMapWithIndex; flatMapFirst; flatMapLatest
selectWithMaxConcurrent,http://reactivex.io/documentation/operators/flatmap.html,FlatMap,flatmap; mapcat,concat_map; flat_map,concatMap; flatMap; flatMapIterable; StringObservable.split; switchMap,concatMap; flatMap; flatMapIterable; StringObervable.split; switchMap,concatMap; concatMapDelayError; concatMapEager; concatMapEagerDelayError; concatMapIterable; flatMap; flatMapIterable; switchMap; switchMapDelayError,concatMap; concatMapObserver; flatMap; flatMapFirst; flatMapLatest; flatMapObserver; flatMapWithMaxConcurrency; for; forIn; manySelect; selectConcat; selectConcatObserver; selectMany; selectManyObserver; selectSwitch; selectSwitchFirst; selectWithMatchConcurrent; switchMap,concatMap; flatMap; flatMapIterable; switchMap,ManySelect; SelectMany,flatMap; flatMapTo; selectMany; flatMapLatest; concatMap; concatMapTo,concat_all; expand; flat_map; for_in; many_select; select_many; select_switch,flat_map; flat_map_with_index,concatMap; flatMap; flatMapIterable; flatMapIterableWith; flatMapWith; switchMap,flatMap; flatMapWithIndex; flatMapFirst; flatMapLatest
select_with_index,http://reactivex.io/documentation/operators/filter.html,Filter,filter,filter,filter; ofType,filter; ofType,filter; ofType,filter; where,filter; ofType,OfType; Where,filter; where,filter; slice; where,select; select_with_index,collect; filter; filterNot; BlockingObservable.withFilter; withFilter,filter
seq,http://reactivex.io/documentation/operators/from.html,From,seq,from,decode; from; fromAction; fromCallable; fromFunc0; fromRunnable; runAsync,decode; from; fromAction; fromCallable; fromFunc0; fromRunnable; runAsync,fromArray; fromCallable; fromFuture; fromIterable; fromPublisher,from; fromCallback; fromEvent; fromEventPattern; fromNodeCallback; fromPromise; of; ofArrayChanges; ofObjectChanges; ofWithScheduler; pairs,asObservable; from,AsObservable; FromAsyncPattern; FromEvent; FromEventPattern; ToObservable,fromArray; fromIterator; asObservable; fromPromise,from_array; from_callback; from_future; from_iterable; from_list; from_marbles; of,of_array; of_enumerable; of_enumerator,from; items,from; toObservable
SequenceEqual,http://reactivex.io/documentation/operators/sequenceequal.html,SequenceEqual,,,sequenceEqual,sequenceEqual,sequenceEqual,sequenceEqual,sequenceEqual,AssertEqual; SequenceEqual,,sequence_equal,sequence_eql?,sequenceEqual; sequenceEqualWith,
sequence_eql?,http://reactivex.io/documentation/operators/sequenceequal.html,SequenceEqual,,,sequenceEqual,sequenceEqual,sequenceEqual,sequenceEqual,sequenceEqual,AssertEqual; SequenceEqual,,sequence_equal,sequence_eql?,sequenceEqual; sequenceEqualWith,
SequenceEqualWith,http://reactivex.io/documentation/operators/sequenceequal.html,SequenceEqual,,,sequenceEqual,sequenceEqual,sequenceEqual,sequenceEqual,sequenceEqual,AssertEqual; SequenceEqual,,sequence_equal,sequence_eql?,sequenceEqual; sequenceEqualWith,
Serialize,http://reactivex.io/documentation/operators/serialize.html,Serialize,serialize,,serialize,serialize,serialize,,serialize,Synchronize,,,sychronize,serialize,
share,http://reactivex.io/documentation/operators/refcount.html,RefCount,,publish,refCount; share,refCount; share,share,refCount; share; shareValue,refCount; share,RefCount,share; singleInstance; shareValue,ref_count,,refCount; share,refCount
shareReplay,http://reactivex.io/documentation/operators/replay.html,Replay,cache,publish_synchronized; replay,replay; cache,cache; replay,cache; replay,replay; shareReplay,replay; cache,Replay,replay; shareReplay,replay,,replay; cache,replay; shareReplay
shareValue,http://reactivex.io/documentation/operators/refcount.html,RefCount,,publish,refCount; share,refCount; share,share,refCount; share; shareValue,refCount; share,RefCount,share; singleInstance; shareValue,ref_count,,refCount; share,refCount
Single,http://reactivex.io/documentation/operators/first.html,First,first; single,first,first; firstOrDefault; latest; mostRecent; next; single; singleOrDefault; takeFirst,first; firstOrDefault; latest; mostRecent; next; single; singleOrDefault; takeFirst,blockingFirst; blockingSingle; first; firstElement; single; singleElement; takeFirst,find; findIndex; first; single,first; firstOrDefault; mostRecent; single; singleOrDefault; takeFirst,First; FirstOrDefault; Latest; Next; Single; SingleOrDefault,,first; first_or_default; single; single_or_default,first; first_or_default; single; single_or_default,first; firstOrElse; head; headOption; headOrElse; latest; next; single; singleOption; singleOrElse,single
singleElement,http://reactivex.io/documentation/operators/first.html,First,first; single,first,first; firstOrDefault; latest; mostRecent; next; single; singleOrDefault; takeFirst,first; firstOrDefault; latest; mostRecent; next; single; singleOrDefault; takeFirst,blockingFirst; blockingSingle; first; firstElement; single; singleElement; takeFirst,find; findIndex; first; single,first; firstOrDefault; mostRecent; single; singleOrDefault; takeFirst,First; FirstOrDefault; Latest; Next; Single; SingleOrDefault,,first; first_or_default; single; single_or_default,first; first_or_default; single; single_or_default,first; firstOrElse; head; headOption; headOrElse; latest; next; single; singleOption; singleOrElse,single
SingleOrDefault,http://reactivex.io/documentation/operators/first.html,First,first; single,first,first; firstOrDefault; latest; mostRecent; next; single; singleOrDefault; takeFirst,first; firstOrDefault; latest; mostRecent; next; single; singleOrDefault; takeFirst,blockingFirst; blockingSingle; first; firstElement; single; singleElement; takeFirst,find; findIndex; first; single,first; firstOrDefault; mostRecent; single; singleOrDefault; takeFirst,First; FirstOrDefault; Latest; Next; Single; SingleOrDefault,,first; first_or_default; single; single_or_default,first; first_or_default; single; single_or_default,first; firstOrElse; head; headOption; headOrElse; latest; next; single; singleOption; singleOrElse,single
singleOption,http://reactivex.io/documentation/operators/first.html,First,first; single,first,first; firstOrDefault; latest; mostRecent; next; single; singleOrDefault; takeFirst,first; firstOrDefault; latest; mostRecent; next; single; singleOrDefault; takeFirst,blockingFirst; blockingSingle; first; firstElement; single; singleElement; takeFirst,find; findIndex; first; single,first; firstOrDefault; mostRecent; single; singleOrDefault; takeFirst,First; FirstOrDefault; Latest; Next; Single; SingleOrDefault,,first; first_or_default; single; single_or_default,first; first_or_default; single; single_or_default,first; firstOrElse; head; headOption; headOrElse; latest; next; single; singleOption; singleOrElse,single
singleOrElse,http://reactivex.io/documentation/operators/first.html,First,first; single,first,first; firstOrDefault; latest; mostRecent; next; single; singleOrDefault; takeFirst,first; firstOrDefault; latest; mostRecent; next; single; singleOrDefault; takeFirst,blockingFirst; blockingSingle; first; firstElement; single; singleElement; takeFirst,find; findIndex; first; single,first; firstOrDefault; mostRecent; single; singleOrDefault; takeFirst,First; FirstOrDefault; Latest; Next; Single; SingleOrDefault,,first; first_or_default; single; single_or_default,first; first_or_default; single; single_or_default,first; firstOrElse; head; headOption; headOrElse; latest; next; single; singleOption; singleOrElse,single
size,http://reactivex.io/documentation/operators/count.html,Count,count; longCount,count,count; countLong,count; countLong,,count,count,Count; LongCount,count,count,count,count; length; longCount; size,
Skip,http://reactivex.io/documentation/operators/skip.html,Skip,drop,skip,skip,skip,skip,skip; skipUntilWithTime,skip,Skip,skip,skip; skip_with_time,skip,drop,skip
SkipLast,http://reactivex.io/documentation/operators/skiplast.html,SkipLast,,,skipLast,skipLast,skipLast,skipLast; skipLastWithTime,skipLast,SkipLast,skipLast,skip_last; skip_last_with_time,skip_last,dropRight,
skipLastWithTime,http://reactivex.io/documentation/operators/skiplast.html,SkipLast,,,skipLast,skipLast,skipLast,skipLast; skipLastWithTime,skipLast,SkipLast,skipLast,skip_last; skip_last_with_time,skip_last,dropRight,
SkipUntil,http://reactivex.io/documentation/operators/skipuntil.html,SkipUntil,,skip_until,skipUntil,skipUntil,skipUntil,skipUntil,skipUntil,SkipUntil,skipUntil,skipUntil; skipUntil_with_time,skipUntil,dropUntil,skipUntil
skipUntilWithTime,http://reactivex.io/documentation/operators/skipuntil.html,SkipUntil,,skip_until,skipUntil,skipUntil,skipUntil,skipUntil,skipUntil,SkipUntil,skipUntil,skipUntil; skipUntil_with_time,skipUntil,dropUntil,skipUntil
SkipWhile,http://reactivex.io/documentation/operators/skipwhile.html,SkipWhile,drop-while,,skipWhile,skipWhile,skipWhile,skipWhile,skipWhile,SkipWhile,skipWhile; skipWhileWithIndex,skip_while,skip_while; skip_while_with_index,dropWhile,skipWhile; skipWhileWithIndex
skipWhileWithIndex,http://reactivex.io/documentation/operators/skipwhile.html,SkipWhile,drop-while,,skipWhile,skipWhile,skipWhile,skipWhile,skipWhile,SkipWhile,skipWhile; skipWhileWithIndex,skip_while,skip_while; skip_while_with_index,dropWhile,skipWhile; skipWhileWithIndex
skip_with_time,http://reactivex.io/documentation/operators/skip.html,Skip,drop,skip,skip,skip,skip,skip; skipUntilWithTime,skip,Skip,skip,skip; skip_with_time,skip,drop,skip
slice,http://reactivex.io/documentation/operators/filter.html,Filter,filter,filter,filter; ofType,filter; ofType,filter; ofType,filter; where,filter; ofType,OfType; Where,filter; where,filter; slice; where,select; select_with_index,collect; filter; filterNot; BlockingObservable.withFilter; withFilter,filter
sliding,http://reactivex.io/documentation/operators/window.html,Window,partition-all,window; window_with_time; window_with_time_or_count,window,window,window,window; windowWithCount; windowWithTime; windowWithTimeOrCount,window,Window,,window; window_with_count; window_with_time; window_with_time_or_count,window_with_count,sliding; tumbling,window
slidingBuffer,http://reactivex.io/documentation/operators/buffer.html,Buffer,,buffer; pairwise,buffer,buffer,buffer,buffer; bufferWithCount; bufferWithTime; bufferWithTimeOrCount,buffer,Buffer,bufferWithCount,buffer; buffer_with_count; buffer_with_time; buffer_with_time_or_count; pairwise,buffer_with_count; buffer_with_time,slidingBuffer; tumblingBuffer,buffer
some,http://reactivex.io/documentation/operators/contains.html,Contains,some,,contains; exists; isEmpty,contains; exists; isEmpty,any; contains; isEmpty,contains; findIndex; indexOf; isEmpty,contains; exists,Any; Contains,isEmpty,contains; find; find_index; is_empty; some,any?; contains?; none?,contains; exists; isEmpty,
sort,http://reactivex.io/documentation/operators/to.html,To,BlockingObservable.blocking; interpose; BlockingObservable.into; BlockingObservable.seq; sort; sort-by; sorted-list-by,as_blocking,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,blockingIterable; blockingLatest; blockingMostRecent; blockingNext; sorted; to; toFuture; toList; toMap; toMultimap; toSortedList,toArray; toMap; toSet,BlockingObservable.from; BlockingObservable.getIterator; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,GetEnumerator; ToArray; ToDictionary; ToEnumerable; ToEvent; ToEventPattern; ToList; ToLookup; ToTask,toArray,BlockingObservable.to_iterable; to_array; to_blocking; to_dict; to_future; to_iterable; to_list; to_marbles; to_set,to_a; to_h,nest; to; toArray; toBlocking; toBuffer; BlockingObservable.toFuture; toIndexedSeq; BlockingObservable.toIterable; toIterable; toIterator; BlockingObservable.toList; toList; toMap; toMultiMap; toSet; toStream; toTraversable; toVector,toArray
sorted,http://reactivex.io/documentation/operators/to.html,To,BlockingObservable.blocking; interpose; BlockingObservable.into; BlockingObservable.seq; sort; sort-by; sorted-list-by,as_blocking,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,blockingIterable; blockingLatest; blockingMostRecent; blockingNext; sorted; to; toFuture; toList; toMap; toMultimap; toSortedList,toArray; toMap; toSet,BlockingObservable.from; BlockingObservable.getIterator; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,GetEnumerator; ToArray; ToDictionary; ToEnumerable; ToEvent; ToEventPattern; ToList; ToLookup; ToTask,toArray,BlockingObservable.to_iterable; to_array; to_blocking; to_dict; to_future; to_iterable; to_list; to_marbles; to_set,to_a; to_h,nest; to; toArray; toBlocking; toBuffer; BlockingObservable.toFuture; toIndexedSeq; BlockingObservable.toIterable; toIterable; toIterator; BlockingObservable.toList; toList; toMap; toMultiMap; toSet; toStream; toTraversable; toVector,toArray
sort-by,http://reactivex.io/documentation/operators/to.html,To,BlockingObservable.blocking; interpose; BlockingObservable.into; BlockingObservable.seq; sort; sort-by; sorted-list-by,as_blocking,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,blockingIterable; blockingLatest; blockingMostRecent; blockingNext; sorted; to; toFuture; toList; toMap; toMultimap; toSortedList,toArray; toMap; toSet,BlockingObservable.from; BlockingObservable.getIterator; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,GetEnumerator; ToArray; ToDictionary; ToEnumerable; ToEvent; ToEventPattern; ToList; ToLookup; ToTask,toArray,BlockingObservable.to_iterable; to_array; to_blocking; to_dict; to_future; to_iterable; to_list; to_marbles; to_set,to_a; to_h,nest; to; toArray; toBlocking; toBuffer; BlockingObservable.toFuture; toIndexedSeq; BlockingObservable.toIterable; toIterable; toIterator; BlockingObservable.toList; toList; toMap; toMultiMap; toSet; toStream; toTraversable; toVector,toArray
sorted-list-by,http://reactivex.io/documentation/operators/to.html,To,BlockingObservable.blocking; interpose; BlockingObservable.into; BlockingObservable.seq; sort; sort-by; sorted-list-by,as_blocking,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,blockingIterable; blockingLatest; blockingMostRecent; blockingNext; sorted; to; toFuture; toList; toMap; toMultimap; toSortedList,toArray; toMap; toSet,BlockingObservable.from; BlockingObservable.getIterator; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,GetEnumerator; ToArray; ToDictionary; ToEnumerable; ToEvent; ToEventPattern; ToList; ToLookup; ToTask,toArray,BlockingObservable.to_iterable; to_array; to_blocking; to_dict; to_future; to_iterable; to_list; to_marbles; to_set,to_a; to_h,nest; to; toArray; toBlocking; toBuffer; BlockingObservable.toFuture; toIndexedSeq; BlockingObservable.toIterable; toIterable; toIterator; BlockingObservable.toList; toList; toMap; toMultiMap; toSet; toStream; toTraversable; toVector,toArray
split,http://reactivex.io/documentation/operators/flatmap.html,FlatMap,flatmap; mapcat,concat_map; flat_map,concatMap; flatMap; flatMapIterable; StringObservable.split; switchMap,concatMap; flatMap; flatMapIterable; StringObervable.split; switchMap,concatMap; concatMapDelayError; concatMapEager; concatMapEagerDelayError; concatMapIterable; flatMap; flatMapIterable; switchMap; switchMapDelayError,concatMap; concatMapObserver; flatMap; flatMapFirst; flatMapLatest; flatMapObserver; flatMapWithMaxConcurrency; for; forIn; manySelect; selectConcat; selectConcatObserver; selectMany; selectManyObserver; selectSwitch; selectSwitchFirst; selectWithMatchConcurrent; switchMap,concatMap; flatMap; flatMapIterable; switchMap,ManySelect; SelectMany,flatMap; flatMapTo; selectMany; flatMapLatest; concatMap; concatMapTo,concat_all; expand; flat_map; for_in; many_select; select_many; select_switch,flat_map; flat_map_with_index,concatMap; flatMap; flatMapIterable; flatMapIterableWith; flatMapWith; switchMap,flatMap; flatMapWithIndex; flatMapFirst; flatMapLatest
split-with,http://reactivex.io/documentation/operators/groupby.html,GroupBy,group-by; split-with,group_by,groupBy,groupBy,groupBy,groupBy; groupByUntil,groupBy,GroupBy; GroupByUntil,groupBy; groupByUntil; partition,group_by; group_by_until; partition,,groupBy,
Start,http://reactivex.io/documentation/operators/start.html,Start,,,asyncAction; asyncFunc; deferFuture; forEachFuture; fromAction; fromCallable; fromFunc0; fromRunnable; start; startFuture; toAsync,asyncAction; asyncFunc; deferFuture; forEachFuture; fromAction; fromCallable; fromFunc0; fromRunnable; start; startFuture; toAsync,fromCallable,start; startAsync; toAsync,asyncAction; asyncFunc; deferFuture; forEachFuture; fromAction; fromCallable; fromFunc0; fromRunnable; start; startFuture; toAsync,Start; ToAsync,start,start; start_async; to_async,,,
startAsync,http://reactivex.io/documentation/operators/start.html,Start,,,asyncAction; asyncFunc; deferFuture; forEachFuture; fromAction; fromCallable; fromFunc0; fromRunnable; start; startFuture; toAsync,asyncAction; asyncFunc; deferFuture; forEachFuture; fromAction; fromCallable; fromFunc0; fromRunnable; start; startFuture; toAsync,fromCallable,start; startAsync; toAsync,asyncAction; asyncFunc; deferFuture; forEachFuture; fromAction; fromCallable; fromFunc0; fromRunnable; start; startFuture; toAsync,Start; ToAsync,start,start; start_async; to_async,,,
startFuture,http://reactivex.io/documentation/operators/start.html,Start,,,asyncAction; asyncFunc; deferFuture; forEachFuture; fromAction; fromCallable; fromFunc0; fromRunnable; start; startFuture; toAsync,asyncAction; asyncFunc; deferFuture; forEachFuture; fromAction; fromCallable; fromFunc0; fromRunnable; start; startFuture; toAsync,fromCallable,start; startAsync; toAsync,asyncAction; asyncFunc; deferFuture; forEachFuture; fromAction; fromCallable; fromFunc0; fromRunnable; start; startFuture; toAsync,Start; ToAsync,start,start; start_async; to_async,,,
StartWith,http://reactivex.io/documentation/operators/startwith.html,StartWith,cons,start_with,startWith,startWith,startWith,startWith,startWith,StartWith,startWith; startWithArray,start_with,start_with,+:,startWith
startWithArray,http://reactivex.io/documentation/operators/startwith.html,StartWith,cons,start_with,startWith,startWith,startWith,startWith,startWith,StartWith,startWith; startWithArray,start_with,start_with,+:,startWith
stringConcat,http://reactivex.io/documentation/operators/sum.html,Sum,,sum,sumDouble; sumFloat; sumInteger; sumLong; StringObservable.join; StringObservable.stringConcat,sumDouble; sumFloat; sumInteger; sumLong; StringObservable.join; StringObservable.stringConcat,,sum,sumDouble; sumFloat; sumInteger; sumLong,Sum,sum,sum,sum,product; sum,
stopAndWait,http://reactivex.io/documentation/operators/backpressure.html,,,,onBackpressureBuffer; onBackpressureDrop; onBackpressureLatest,onBackpressureBuffer; onBackpressureDrop; onBackpressureLatest,Flowable,controlled; pausable; pausableBuffered; stopAndWait; windowed,,,,,,onBackpressureBuffer; onBackpressureDrop; onBackpressureLatest,
subscribe,http://reactivex.io/documentation/operators/subscribe.html,Subscribe,BlockingObservable.doseq; subscribe,subscribe,BlockingObservable.forEach; forEach; subscribe,BlockingObservable.forEach; forEach; subscribe,blockingForEach; blockingSubscribe; forEachWhile; safeSubscribe; subscribe,forEach; subscribe; subscribeOnCompleted; subscribeOnError; subscribeOnNext,BlockingObservable.forEach; forEach; subscribe,ForEach; Subscribe,subscribe,BlockingObservable.for_each; subscribe,subscribe,BlockingObservable.foreach; forEach; subscribe,subscribe
subscribeActual,http://reactivex.io/documentation/operators/subscribe.html,Subscribe,BlockingObservable.doseq; subscribe,subscribe,BlockingObservable.forEach; forEach; subscribe,BlockingObservable.forEach; forEach; subscribe,blockingForEach; blockingSubscribe; forEachWhile; safeSubscribe; subscribe,forEach; subscribe; subscribeOnCompleted; subscribeOnError; subscribeOnNext,BlockingObservable.forEach; forEach; subscribe,ForEach; Subscribe,subscribe,BlockingObservable.for_each; subscribe,subscribe,BlockingObservable.foreach; forEach; subscribe,subscribe
SubscribeOn,http://reactivex.io/documentation/operators/subscribeon.html,SubscribeOn,subscribe-on; unsubscribe-on,,subscribeOn; unsubscribeOn,subscribeOn; unsubscribeOn,subscribeOn; unsubscribeOn,subscribeOn,subscribeOn; unsubscribeOn,SubscribeOn; SubscribeOnDispatcher,,subscribe_on,subscribe_on,subscribeOn; unsubscribeOn,subscribeOn
SubscribeOnDispatcher,http://reactivex.io/documentation/operators/subscribeon.html,SubscribeOn,subscribe-on; unsubscribe-on,,subscribeOn; unsubscribeOn,subscribeOn; unsubscribeOn,subscribeOn; unsubscribeOn,subscribeOn,subscribeOn; unsubscribeOn,SubscribeOn; SubscribeOnDispatcher,,subscribe_on,subscribe_on,subscribeOn; unsubscribeOn,subscribeOn
subscribeOnCompleted,http://reactivex.io/documentation/operators/subscribe.html,Subscribe,BlockingObservable.doseq; subscribe,subscribe,BlockingObservable.forEach; forEach; subscribe,BlockingObservable.forEach; forEach; subscribe,blockingForEach; blockingSubscribe; forEachWhile; safeSubscribe; subscribe,forEach; subscribe; subscribeOnCompleted; subscribeOnError; subscribeOnNext,BlockingObservable.forEach; forEach; subscribe,ForEach; Subscribe,subscribe,BlockingObservable.for_each; subscribe,subscribe,BlockingObservable.foreach; forEach; subscribe,subscribe
subscribeOnError,http://reactivex.io/documentation/operators/subscribe.html,Subscribe,BlockingObservable.doseq; subscribe,subscribe,BlockingObservable.forEach; forEach; subscribe,BlockingObservable.forEach; forEach; subscribe,blockingForEach; blockingSubscribe; forEachWhile; safeSubscribe; subscribe,forEach; subscribe; subscribeOnCompleted; subscribeOnError; subscribeOnNext,BlockingObservable.forEach; forEach; subscribe,ForEach; Subscribe,subscribe,BlockingObservable.for_each; subscribe,subscribe,BlockingObservable.foreach; forEach; subscribe,subscribe
subscribeOnNext,http://reactivex.io/documentation/operators/subscribe.html,Subscribe,BlockingObservable.doseq; subscribe,subscribe,BlockingObservable.forEach; forEach; subscribe,BlockingObservable.forEach; forEach; subscribe,blockingForEach; blockingSubscribe; forEachWhile; safeSubscribe; subscribe,forEach; subscribe; subscribeOnCompleted; subscribeOnError; subscribeOnNext,BlockingObservable.forEach; forEach; subscribe,ForEach; Subscribe,subscribe,BlockingObservable.for_each; subscribe,subscribe,BlockingObservable.foreach; forEach; subscribe,subscribe
subscribeWith,http://reactivex.io/documentation/operators/subscribe.html,Subscribe,BlockingObservable.doseq; subscribe,subscribe,BlockingObservable.forEach; forEach; subscribe,BlockingObservable.forEach; forEach; subscribe,blockingForEach; blockingSubscribe; forEachWhile; safeSubscribe; subscribe,forEach; subscribe; subscribeOnCompleted; subscribeOnError; subscribeOnNext,BlockingObservable.forEach; forEach; subscribe,ForEach; Subscribe,subscribe,BlockingObservable.for_each; subscribe,subscribe,BlockingObservable.foreach; forEach; subscribe,subscribe
Sum,http://reactivex.io/documentation/operators/sum.html,Sum,,sum,sumDouble; sumFloat; sumInteger; sumLong; StringObservable.join; StringObservable.stringConcat,sumDouble; sumFloat; sumInteger; sumLong; StringObservable.join; StringObservable.stringConcat,,sum,sumDouble; sumFloat; sumInteger; sumLong,Sum,sum,sum,sum,product; sum,
sumDouble,http://reactivex.io/documentation/operators/sum.html,Sum,,sum,sumDouble; sumFloat; sumInteger; sumLong; StringObservable.join; StringObservable.stringConcat,sumDouble; sumFloat; sumInteger; sumLong; StringObservable.join; StringObservable.stringConcat,,sum,sumDouble; sumFloat; sumInteger; sumLong,Sum,sum,sum,sum,product; sum,
sumFloat,http://reactivex.io/documentation/operators/sum.html,Sum,,sum,sumDouble; sumFloat; sumInteger; sumLong; StringObservable.join; StringObservable.stringConcat,sumDouble; sumFloat; sumInteger; sumLong; StringObservable.join; StringObservable.stringConcat,,sum,sumDouble; sumFloat; sumInteger; sumLong,Sum,sum,sum,sum,product; sum,
sumInteger,http://reactivex.io/documentation/operators/sum.html,Sum,,sum,sumDouble; sumFloat; sumInteger; sumLong; StringObservable.join; StringObservable.stringConcat,sumDouble; sumFloat; sumInteger; sumLong; StringObservable.join; StringObservable.stringConcat,,sum,sumDouble; sumFloat; sumInteger; sumLong,Sum,sum,sum,sum,product; sum,
sumLong,http://reactivex.io/documentation/operators/sum.html,Sum,,sum,sumDouble; sumFloat; sumInteger; sumLong; StringObservable.join; StringObservable.stringConcat,sumDouble; sumFloat; sumInteger; sumLong; StringObservable.join; StringObservable.stringConcat,,sum,sumDouble; sumFloat; sumInteger; sumLong,Sum,sum,sum,sum,product; sum,
Switch,http://reactivex.io/documentation/operators/switch.html,Switch,,switch_on_next,switchOnNext,switchOnNext,switchOnNext; switchOnNextDelayError,switch,switchOnNext,Switch,switch; switchFirst,exclusive; select_switch; switch_latest,latest,switch,switchLatest
switchCase,http://reactivex.io/documentation/operators/defer.html,Defer,,defer,defer; ifThen; switchCase,defer; ifThen; switchCase,defer,case; defer; if; switchCase,defer; switchCase,Defer,defer,case; defer; if_then; switch_case,defer,defer,defer
switchIfEmpty,http://reactivex.io/documentation/operators/defaultifempty.html,DefaultIfEmpty,,,defaultIfEmpty; switchIfEmpty,defaultIfEmpty; switchIfEmpty,defaultIfEmpty; switchIfEmpty,defaultIfEmpty,defaultIfEmpty,DefaultIfEmpty,defaultIfEmpty,default_if_empty,default_if_empty,orElse; switchIfEmpty,
switchLatest,http://reactivex.io/documentation/operators/switch.html,Switch,,switch_on_next,switchOnNext,switchOnNext,switchOnNext; switchOnNextDelayError,switch,switchOnNext,Switch,switch; switchFirst,exclusive; select_switch; switch_latest,latest,switch,switchLatest
switchMap,http://reactivex.io/documentation/operators/flatmap.html,FlatMap,flatmap; mapcat,concat_map; flat_map,concatMap; flatMap; flatMapIterable; StringObservable.split; switchMap,concatMap; flatMap; flatMapIterable; StringObervable.split; switchMap,concatMap; concatMapDelayError; concatMapEager; concatMapEagerDelayError; concatMapIterable; flatMap; flatMapIterable; switchMap; switchMapDelayError,concatMap; concatMapObserver; flatMap; flatMapFirst; flatMapLatest; flatMapObserver; flatMapWithMaxConcurrency; for; forIn; manySelect; selectConcat; selectConcatObserver; selectMany; selectManyObserver; selectSwitch; selectSwitchFirst; selectWithMatchConcurrent; switchMap,concatMap; flatMap; flatMapIterable; switchMap,ManySelect; SelectMany,flatMap; flatMapTo; selectMany; flatMapLatest; concatMap; concatMapTo,concat_all; expand; flat_map; for_in; many_select; select_many; select_switch,flat_map; flat_map_with_index,concatMap; flatMap; flatMapIterable; flatMapIterableWith; flatMapWith; switchMap,flatMap; flatMapWithIndex; flatMapFirst; flatMapLatest
switchMapDelayError,http://reactivex.io/documentation/operators/flatmap.html,FlatMap,flatmap; mapcat,concat_map; flat_map,concatMap; flatMap; flatMapIterable; StringObservable.split; switchMap,concatMap; flatMap; flatMapIterable; StringObervable.split; switchMap,concatMap; concatMapDelayError; concatMapEager; concatMapEagerDelayError; concatMapIterable; flatMap; flatMapIterable; switchMap; switchMapDelayError,concatMap; concatMapObserver; flatMap; flatMapFirst; flatMapLatest; flatMapObserver; flatMapWithMaxConcurrency; for; forIn; manySelect; selectConcat; selectConcatObserver; selectMany; selectManyObserver; selectSwitch; selectSwitchFirst; selectWithMatchConcurrent; switchMap,concatMap; flatMap; flatMapIterable; switchMap,ManySelect; SelectMany,flatMap; flatMapTo; selectMany; flatMapLatest; concatMap; concatMapTo,concat_all; expand; flat_map; for_in; many_select; select_many; select_switch,flat_map; flat_map_with_index,concatMap; flatMap; flatMapIterable; flatMapIterableWith; flatMapWith; switchMap,flatMap; flatMapWithIndex; flatMapFirst; flatMapLatest
switchOnNext,http://reactivex.io/documentation/operators/switch.html,Switch,,switch_on_next,switchOnNext,switchOnNext,switchOnNext; switchOnNextDelayError,switch,switchOnNext,Switch,switch; switchFirst,exclusive; select_switch; switch_latest,latest,switch,switchLatest
switchOnNextDelayError,http://reactivex.io/documentation/operators/switch.html,Switch,,switch_on_next,switchOnNext,switchOnNext,switchOnNext; switchOnNextDelayError,switch,switchOnNext,Switch,switch; switchFirst,exclusive; select_switch; switch_latest,latest,switch,switchLatest
Synchronize,http://reactivex.io/documentation/operators/serialize.html,Serialize,serialize,,serialize,serialize,serialize,,serialize,Synchronize,,,sychronize,serialize,
Take,http://reactivex.io/documentation/operators/take.html,Take,take,take,limit; take,limit; take,take,take; takeUntilWithTime,take,Take,take; takeUntil,take; take_with_time,take,take,take
take_with_time,http://reactivex.io/documentation/operators/take.html,Take,take,take,limit; take,limit; take,take,take; takeUntilWithTime,take,Take,take; takeUntil,take; take_with_time,take,take,take
takeFirst,http://reactivex.io/documentation/operators/first.html,First,first; single,first,first; firstOrDefault; latest; mostRecent; next; single; singleOrDefault; takeFirst,first; firstOrDefault; latest; mostRecent; next; single; singleOrDefault; takeFirst,blockingFirst; blockingSingle; first; firstElement; single; singleElement; takeFirst,find; findIndex; first; single,first; firstOrDefault; mostRecent; single; singleOrDefault; takeFirst,First; FirstOrDefault; Latest; Next; Single; SingleOrDefault,,first; first_or_default; single; single_or_default,first; first_or_default; single; single_or_default,first; firstOrElse; head; headOption; headOrElse; latest; next; single; singleOption; singleOrElse,single
TakeLast,http://reactivex.io/documentation/operators/takelast.html,TakeLast,next,,takeLast; takeLastBuffer,takeLast; takeLastBuffer,takeLast,takeLast; takeLastBuffer; takeLastBufferWithTime; takeLastWithTime,takeLast; takeLastBuffer,TakeLast,takeLast,take_last; take_last_buffer; take_last_with_time,take_last; take_last_buffer,tail; takeRight,takeLast
takeLastBuffer,http://reactivex.io/documentation/operators/takelast.html,TakeLast,next,,takeLast; takeLastBuffer,takeLast; takeLastBuffer,takeLast,takeLast; takeLastBuffer; takeLastBufferWithTime; takeLastWithTime,takeLast; takeLastBuffer,TakeLast,takeLast,take_last; take_last_buffer; take_last_with_time,take_last; take_last_buffer,tail; takeRight,takeLast
takeLastBufferWithTime,http://reactivex.io/documentation/operators/takelast.html,TakeLast,next,,takeLast; takeLastBuffer,takeLast; takeLastBuffer,takeLast,takeLast; takeLastBuffer; takeLastBufferWithTime; takeLastWithTime,takeLast; takeLastBuffer,TakeLast,takeLast,take_last; take_last_buffer; take_last_with_time,take_last; take_last_buffer,tail; takeRight,takeLast
takeLastWithTime,http://reactivex.io/documentation/operators/takelast.html,TakeLast,next,,takeLast; takeLastBuffer,takeLast; takeLastBuffer,takeLast,takeLast; takeLastBuffer; takeLastBufferWithTime; takeLastWithTime,takeLast; takeLastBuffer,TakeLast,takeLast,take_last; take_last_buffer; take_last_with_time,take_last; take_last_buffer,tail; takeRight,takeLast
takeRightTakeLast,http://reactivex.io/documentation/operators/last.html,Last,last,last,last; lastOrDefault,last; lastOrDefault,blockingLast; last; lastElement,last,last; lastOrDefault; takeLast,Last; LastOrDefault,,last; last_or_default,last; last_or_default,last; lastOrElse; head; headOption; headOrElse,
TakeUntil,http://reactivex.io/documentation/operators/takeuntil.html,TakeUntil,,take_until,takeUntil,takeUntil,takeUntil,takeUntil,takeUntil,TakeUntil,takeUntil,take_until; take_until_with_time,take_until,takeUntil,takeUntil
takeUntilWithTime,http://reactivex.io/documentation/operators/takeuntil.html,TakeUntil,,take_until,takeUntil,takeUntil,takeUntil,takeUntil,takeUntil,TakeUntil,takeUntil,take_until; take_until_with_time,take_until,takeUntil,takeUntil
TakeWhile,http://reactivex.io/documentation/operators/takewhile.html,TakeWhile,take-while,,takeWhile,takeWhile,takeWhile,takeWhile,takeWhile,TakeWhile,takeWhile; takeWhileWithIndex,take_while,take_while; take_while_with_index,takeWhile,takeWhile; takeWhileWithIndex
takeWhileWithIndex,http://reactivex.io/documentation/operators/takewhile.html,TakeWhile,take-while,,takeWhile,takeWhile,takeWhile,takeWhile,takeWhile,TakeWhile,takeWhile; takeWhileWithIndex,take_while,take_while; take_while_with_index,takeWhile,takeWhile; takeWhileWithIndex
tail,http://reactivex.io/documentation/operators/takelast.html,TakeLast,next,,takeLast; takeLastBuffer,takeLast; takeLastBuffer,takeLast,takeLast; takeLastBuffer; takeLastBufferWithTime; takeLastWithTime,takeLast; takeLastBuffer,TakeLast,takeLast,take_last; take_last_buffer; take_last_with_time,take_last; take_last_buffer,tail; takeRight,takeLast
tap,http://reactivex.io/documentation/operators/do.html,Do,do; finally,finally,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo; doAfterTerminate,doAfterTerminate; doOnComplete; doOnDispose; doOnEach; doOnError; doOnLifecycle; doOnNext; doOnSubscribe; doOnTerminate; onTerminateDetach,do; doOnCompleted; doOnError; doOnNext; finally; tap; tapOnCompleted; tapOnError; tapOnNext,doOnCompleted; doOnEach; doOnError; doOnNext; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,Do; Finally,do; doOnError; doOnCompleted; finally,do_action; finally_action; tap,ensures; tap,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,doOn
tapOnCompleted,http://reactivex.io/documentation/operators/do.html,Do,do; finally,finally,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo; doAfterTerminate,doAfterTerminate; doOnComplete; doOnDispose; doOnEach; doOnError; doOnLifecycle; doOnNext; doOnSubscribe; doOnTerminate; onTerminateDetach,do; doOnCompleted; doOnError; doOnNext; finally; tap; tapOnCompleted; tapOnError; tapOnNext,doOnCompleted; doOnEach; doOnError; doOnNext; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,Do; Finally,do; doOnError; doOnCompleted; finally,do_action; finally_action; tap,ensures; tap,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,doOn
tapOnError,http://reactivex.io/documentation/operators/do.html,Do,do; finally,finally,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo; doAfterTerminate,doAfterTerminate; doOnComplete; doOnDispose; doOnEach; doOnError; doOnLifecycle; doOnNext; doOnSubscribe; doOnTerminate; onTerminateDetach,do; doOnCompleted; doOnError; doOnNext; finally; tap; tapOnCompleted; tapOnError; tapOnNext,doOnCompleted; doOnEach; doOnError; doOnNext; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,Do; Finally,do; doOnError; doOnCompleted; finally,do_action; finally_action; tap,ensures; tap,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,doOn
tapOnNext,http://reactivex.io/documentation/operators/do.html,Do,do; finally,finally,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo; doAfterTerminate,doAfterTerminate; doOnComplete; doOnDispose; doOnEach; doOnError; doOnLifecycle; doOnNext; doOnSubscribe; doOnTerminate; onTerminateDetach,do; doOnCompleted; doOnError; doOnNext; finally; tap; tapOnCompleted; tapOnError; tapOnNext,doOnCompleted; doOnEach; doOnError; doOnNext; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,Do; Finally,do; doOnError; doOnCompleted; finally,do_action; finally_action; tap,ensures; tap,doOnCompleted; doOnEach; doOnError; doOnNext; doOnRequest; doOnSubscribe; doOnTerminate; doOnUnsubscribe; finallyDo,doOn
Then,http://reactivex.io/documentation/operators/and-then-when.html,And/Then/When,,,and; then; when,and; then; when,,and; thenDo; when,and; then; when,And; Then; When,,and_; then_do; when,,,
thenDo,http://reactivex.io/documentation/operators/and-then-when.html,And/Then/When,,,and; then; when,and; then; when,,and; thenDo; when,and; then; when,And; Then; When,,and_; then_do; when,,,
Throttle,http://reactivex.io/documentation/operators/debounce.html,Debounce,,,debounce; throttleWithTimeout,debounce; throttleWithTimeout,debounce; throttleWithTimeout,debounce; debounceWithSelector; throttleWithTimeout,debounce; throttleWithTimeout,Throttle,throttle,debounce; throttle_with_selector; throttle_with_timeout,,debounce; throttleWithTimeout,debounce; throttle
throttleFirst,http://reactivex.io/documentation/operators/sample.html,Sample,,,sample; throttleFirst; throttleLast,sample; throttleFirst; throttleLast,sample; throttleFirst; throttleLast,sample; throttleFirst,sample; throttleFirst; throttleLast,Sample,,sample; throttle_first; throttle_last,,sample; throttleFirst; throttleLast,sample; sampleLatest
throttleLast,http://reactivex.io/documentation/operators/sample.html,Sample,,,sample; throttleFirst; throttleLast,sample; throttleFirst; throttleLast,sample; throttleFirst; throttleLast,sample; throttleFirst,sample; throttleFirst; throttleLast,Sample,,sample; throttle_first; throttle_last,,sample; throttleFirst; throttleLast,sample; sampleLatest
throttleWithSelector,http://reactivex.io/documentation/operators/debounce.html,Debounce,,,debounce; throttleWithTimeout,debounce; throttleWithTimeout,debounce; throttleWithTimeout,debounce; debounceWithSelector; throttleWithTimeout,debounce; throttleWithTimeout,Throttle,throttle,debounce; throttle_with_selector; throttle_with_timeout,,debounce; throttleWithTimeout,debounce; throttle
throttleWithTimeout,http://reactivex.io/documentation/operators/debounce.html,Debounce,,,debounce; throttleWithTimeout,debounce; throttleWithTimeout,debounce; throttleWithTimeout,debounce; debounceWithSelector; throttleWithTimeout,debounce; throttleWithTimeout,Throttle,throttle,debounce; throttle_with_selector; throttle_with_timeout,,debounce; throttleWithTimeout,debounce; throttle
Throw,http://reactivex.io/documentation/operators/empty-never-throw.html,Empty/Never/Throw,empty; never; throw,empty; never; throw,empty; never; error,empty; never; error,empty; never; error,empty; never; throw,empty; never; error; asObservable,Empty; Never; Throw,empty; never; error,empty; never; throw; throw_exception,empty; never; raise_error,empty; never; error,empty; never; failWith
throwError,http://reactivex.io/documentation/operators/empty-never-throw.html,Empty/Never/Throw,empty; never; throw,empty; never; throw,empty; never; error,empty; never; error,empty; never; error,empty; never; throw,empty; never; error; asObservable,Empty; Never; Throw,empty; never; error,empty; never; throw; throw_exception,empty; never; raise_error,empty; never; error,empty; never; failWith
throwException,http://reactivex.io/documentation/operators/empty-never-throw.html,Empty/Never/Throw,empty; never; throw,empty; never; throw,empty; never; error,empty; never; error,empty; never; error,empty; never; throw,empty; never; error; asObservable,Empty; Never; Throw,empty; never; error,empty; never; throw; throw_exception,empty; never; raise_error,empty; never; error,empty; never; failWith
TimeInterval,http://reactivex.io/documentation/operators/timeinterval.html,TimeInterval,,,timeInterval,timeInterval,timeInterval,timeInterval,timeInterval,TimeInterval,,time_interval,,timeInterval,
Timeout,http://reactivex.io/documentation/operators/timeout.html,Timeout,,,timeout,timeout,timeout,timeout; timeoutWithSelector,timeout,Timeout,timeout,timeout; timeout_with_selector,,timeout,timeout
timeoutWithSelector,http://reactivex.io/documentation/operators/timeout.html,Timeout,,,timeout,timeout,timeout,timeout; timeoutWithSelector,timeout,Timeout,timeout,timeout; timeout_with_selector,,timeout,timeout
Timer,http://reactivex.io/documentation/operators/timer.html,Timer,,,timer,timer,timer,timer,timer,Timer,timer,timer,,timer,timer
Timestamp,http://reactivex.io/documentation/operators/timestamp.html,Timestamp,,,timestamp,timestamp,timestamp,timestamp,timestamp,Timestamp,timestamp,timestamp,,timestamp,
To,http://reactivex.io/documentation/operators/to.html,To,BlockingObservable.blocking; interpose; BlockingObservable.into; BlockingObservable.seq; sort; sort-by; sorted-list-by,as_blocking,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,blockingIterable; blockingLatest; blockingMostRecent; blockingNext; sorted; to; toFuture; toList; toMap; toMultimap; toSortedList,toArray; toMap; toSet,BlockingObservable.from; BlockingObservable.getIterator; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,GetEnumerator; ToArray; ToDictionary; ToEnumerable; ToEvent; ToEventPattern; ToList; ToLookup; ToTask,toArray,BlockingObservable.to_iterable; to_array; to_blocking; to_dict; to_future; to_iterable; to_list; to_marbles; to_set,to_a; to_h,nest; to; toArray; toBlocking; toBuffer; BlockingObservable.toFuture; toIndexedSeq; BlockingObservable.toIterable; toIterable; toIterator; BlockingObservable.toList; toList; toMap; toMultiMap; toSet; toStream; toTraversable; toVector,toArray
to_a,http://reactivex.io/documentation/operators/to.html,To,BlockingObservable.blocking; interpose; BlockingObservable.into; BlockingObservable.seq; sort; sort-by; sorted-list-by,as_blocking,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,blockingIterable; blockingLatest; blockingMostRecent; blockingNext; sorted; to; toFuture; toList; toMap; toMultimap; toSortedList,toArray; toMap; toSet,BlockingObservable.from; BlockingObservable.getIterator; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,GetEnumerator; ToArray; ToDictionary; ToEnumerable; ToEvent; ToEventPattern; ToList; ToLookup; ToTask,toArray,BlockingObservable.to_iterable; to_array; to_blocking; to_dict; to_future; to_iterable; to_list; to_marbles; to_set,to_a; to_h,nest; to; toArray; toBlocking; toBuffer; BlockingObservable.toFuture; toIndexedSeq; BlockingObservable.toIterable; toIterable; toIterator; BlockingObservable.toList; toList; toMap; toMultiMap; toSet; toStream; toTraversable; toVector,toArray
ToArray,http://reactivex.io/documentation/operators/to.html,To,BlockingObservable.blocking; interpose; BlockingObservable.into; BlockingObservable.seq; sort; sort-by; sorted-list-by,as_blocking,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,blockingIterable; blockingLatest; blockingMostRecent; blockingNext; sorted; to; toFuture; toList; toMap; toMultimap; toSortedList,toArray; toMap; toSet,BlockingObservable.from; BlockingObservable.getIterator; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,GetEnumerator; ToArray; ToDictionary; ToEnumerable; ToEvent; ToEventPattern; ToList; ToLookup; ToTask,toArray,BlockingObservable.to_iterable; to_array; to_blocking; to_dict; to_future; to_iterable; to_list; to_marbles; to_set,to_a; to_h,nest; to; toArray; toBlocking; toBuffer; BlockingObservable.toFuture; toIndexedSeq; BlockingObservable.toIterable; toIterable; toIterator; BlockingObservable.toList; toList; toMap; toMultiMap; toSet; toStream; toTraversable; toVector,toArray
ToAsync,http://reactivex.io/documentation/operators/start.html,Start,,,asyncAction; asyncFunc; deferFuture; forEachFuture; fromAction; fromCallable; fromFunc0; fromRunnable; start; startFuture; toAsync,asyncAction; asyncFunc; deferFuture; forEachFuture; fromAction; fromCallable; fromFunc0; fromRunnable; start; startFuture; toAsync,fromCallable,start; startAsync; toAsync,asyncAction; asyncFunc; deferFuture; forEachFuture; fromAction; fromCallable; fromFunc0; fromRunnable; start; startFuture; toAsync,Start; ToAsync,start,start; start_async; to_async,,,
toBlocking,http://reactivex.io/documentation/operators/to.html,To,BlockingObservable.blocking; interpose; BlockingObservable.into; BlockingObservable.seq; sort; sort-by; sorted-list-by,as_blocking,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,blockingIterable; blockingLatest; blockingMostRecent; blockingNext; sorted; to; toFuture; toList; toMap; toMultimap; toSortedList,toArray; toMap; toSet,BlockingObservable.from; BlockingObservable.getIterator; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,GetEnumerator; ToArray; ToDictionary; ToEnumerable; ToEvent; ToEventPattern; ToList; ToLookup; ToTask,toArray,BlockingObservable.to_iterable; to_array; to_blocking; to_dict; to_future; to_iterable; to_list; to_marbles; to_set,to_a; to_h,nest; to; toArray; toBlocking; toBuffer; BlockingObservable.toFuture; toIndexedSeq; BlockingObservable.toIterable; toIterable; toIterator; BlockingObservable.toList; toList; toMap; toMultiMap; toSet; toStream; toTraversable; toVector,toArray
toBuffer,http://reactivex.io/documentation/operators/to.html,To,BlockingObservable.blocking; interpose; BlockingObservable.into; BlockingObservable.seq; sort; sort-by; sorted-list-by,as_blocking,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,blockingIterable; blockingLatest; blockingMostRecent; blockingNext; sorted; to; toFuture; toList; toMap; toMultimap; toSortedList,toArray; toMap; toSet,BlockingObservable.from; BlockingObservable.getIterator; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,GetEnumerator; ToArray; ToDictionary; ToEnumerable; ToEvent; ToEventPattern; ToList; ToLookup; ToTask,toArray,BlockingObservable.to_iterable; to_array; to_blocking; to_dict; to_future; to_iterable; to_list; to_marbles; to_set,to_a; to_h,nest; to; toArray; toBlocking; toBuffer; BlockingObservable.toFuture; toIndexedSeq; BlockingObservable.toIterable; toIterable; toIterator; BlockingObservable.toList; toList; toMap; toMultiMap; toSet; toStream; toTraversable; toVector,toArray
to_dict,http://reactivex.io/documentation/operators/to.html,To,BlockingObservable.blocking; interpose; BlockingObservable.into; BlockingObservable.seq; sort; sort-by; sorted-list-by,as_blocking,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,blockingIterable; blockingLatest; blockingMostRecent; blockingNext; sorted; to; toFuture; toList; toMap; toMultimap; toSortedList,toArray; toMap; toSet,BlockingObservable.from; BlockingObservable.getIterator; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,GetEnumerator; ToArray; ToDictionary; ToEnumerable; ToEvent; ToEventPattern; ToList; ToLookup; ToTask,toArray,BlockingObservable.to_iterable; to_array; to_blocking; to_dict; to_future; to_iterable; to_list; to_marbles; to_set,to_a; to_h,nest; to; toArray; toBlocking; toBuffer; BlockingObservable.toFuture; toIndexedSeq; BlockingObservable.toIterable; toIterable; toIterator; BlockingObservable.toList; toList; toMap; toMultiMap; toSet; toStream; toTraversable; toVector,toArray
ToDictionary,http://reactivex.io/documentation/operators/to.html,To,BlockingObservable.blocking; interpose; BlockingObservable.into; BlockingObservable.seq; sort; sort-by; sorted-list-by,as_blocking,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,blockingIterable; blockingLatest; blockingMostRecent; blockingNext; sorted; to; toFuture; toList; toMap; toMultimap; toSortedList,toArray; toMap; toSet,BlockingObservable.from; BlockingObservable.getIterator; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,GetEnumerator; ToArray; ToDictionary; ToEnumerable; ToEvent; ToEventPattern; ToList; ToLookup; ToTask,toArray,BlockingObservable.to_iterable; to_array; to_blocking; to_dict; to_future; to_iterable; to_list; to_marbles; to_set,to_a; to_h,nest; to; toArray; toBlocking; toBuffer; BlockingObservable.toFuture; toIndexedSeq; BlockingObservable.toIterable; toIterable; toIterator; BlockingObservable.toList; toList; toMap; toMultiMap; toSet; toStream; toTraversable; toVector,toArray
ToEnumerable,http://reactivex.io/documentation/operators/to.html,To,BlockingObservable.blocking; interpose; BlockingObservable.into; BlockingObservable.seq; sort; sort-by; sorted-list-by,as_blocking,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,blockingIterable; blockingLatest; blockingMostRecent; blockingNext; sorted; to; toFuture; toList; toMap; toMultimap; toSortedList,toArray; toMap; toSet,BlockingObservable.from; BlockingObservable.getIterator; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,GetEnumerator; ToArray; ToDictionary; ToEnumerable; ToEvent; ToEventPattern; ToList; ToLookup; ToTask,toArray,BlockingObservable.to_iterable; to_array; to_blocking; to_dict; to_future; to_iterable; to_list; to_marbles; to_set,to_a; to_h,nest; to; toArray; toBlocking; toBuffer; BlockingObservable.toFuture; toIndexedSeq; BlockingObservable.toIterable; toIterable; toIterator; BlockingObservable.toList; toList; toMap; toMultiMap; toSet; toStream; toTraversable; toVector,toArray
ToEvent,http://reactivex.io/documentation/operators/to.html,To,BlockingObservable.blocking; interpose; BlockingObservable.into; BlockingObservable.seq; sort; sort-by; sorted-list-by,as_blocking,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,blockingIterable; blockingLatest; blockingMostRecent; blockingNext; sorted; to; toFuture; toList; toMap; toMultimap; toSortedList,toArray; toMap; toSet,BlockingObservable.from; BlockingObservable.getIterator; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,GetEnumerator; ToArray; ToDictionary; ToEnumerable; ToEvent; ToEventPattern; ToList; ToLookup; ToTask,toArray,BlockingObservable.to_iterable; to_array; to_blocking; to_dict; to_future; to_iterable; to_list; to_marbles; to_set,to_a; to_h,nest; to; toArray; toBlocking; toBuffer; BlockingObservable.toFuture; toIndexedSeq; BlockingObservable.toIterable; toIterable; toIterator; BlockingObservable.toList; toList; toMap; toMultiMap; toSet; toStream; toTraversable; toVector,toArray
ToEventPattern,http://reactivex.io/documentation/operators/to.html,To,BlockingObservable.blocking; interpose; BlockingObservable.into; BlockingObservable.seq; sort; sort-by; sorted-list-by,as_blocking,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,blockingIterable; blockingLatest; blockingMostRecent; blockingNext; sorted; to; toFuture; toList; toMap; toMultimap; toSortedList,toArray; toMap; toSet,BlockingObservable.from; BlockingObservable.getIterator; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,GetEnumerator; ToArray; ToDictionary; ToEnumerable; ToEvent; ToEventPattern; ToList; ToLookup; ToTask,toArray,BlockingObservable.to_iterable; to_array; to_blocking; to_dict; to_future; to_iterable; to_list; to_marbles; to_set,to_a; to_h,nest; to; toArray; toBlocking; toBuffer; BlockingObservable.toFuture; toIndexedSeq; BlockingObservable.toIterable; toIterable; toIterator; BlockingObservable.toList; toList; toMap; toMultiMap; toSet; toStream; toTraversable; toVector,toArray
ToFlowable,http://reactivex.io/documentation/operators/to.html,To,BlockingObservable.blocking; interpose; BlockingObservable.into; BlockingObservable.seq; sort; sort-by; sorted-list-by,as_blocking,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,blockingIterable; blockingLatest; blockingMostRecent; blockingNext; sorted; to; toFuture; toList; toMap; toMultimap; toSortedList,toArray; toMap; toSet,BlockingObservable.from; BlockingObservable.getIterator; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,GetEnumerator; ToArray; ToDictionary; ToEnumerable; ToEvent; ToEventPattern; ToList; ToLookup; ToTask,toArray,BlockingObservable.to_iterable; to_array; to_blocking; to_dict; to_future; to_iterable; to_list; to_marbles; to_set,to_a; to_h,nest; to; toArray; toBlocking; toBuffer; BlockingObservable.toFuture; toIndexedSeq; BlockingObservable.toIterable; toIterable; toIterator; BlockingObservable.toList; toList; toMap; toMultiMap; toSet; toStream; toTraversable; toVector,toArray
ToFuture,http://reactivex.io/documentation/operators/to.html,To,BlockingObservable.blocking; interpose; BlockingObservable.into; BlockingObservable.seq; sort; sort-by; sorted-list-by,as_blocking,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,blockingIterable; blockingLatest; blockingMostRecent; blockingNext; sorted; to; toFuture; toList; toMap; toMultimap; toSortedList,toArray; toMap; toSet,BlockingObservable.from; BlockingObservable.getIterator; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,GetEnumerator; ToArray; ToDictionary; ToEnumerable; ToEvent; ToEventPattern; ToList; ToLookup; ToTask,toArray,BlockingObservable.to_iterable; to_array; to_blocking; to_dict; to_future; to_iterable; to_list; to_marbles; to_set,to_a; to_h,nest; to; toArray; toBlocking; toBuffer; BlockingObservable.toFuture; toIndexedSeq; BlockingObservable.toIterable; toIterable; toIterator; BlockingObservable.toList; toList; toMap; toMultiMap; toSet; toStream; toTraversable; toVector,toArray
to_h,http://reactivex.io/documentation/operators/to.html,To,BlockingObservable.blocking; interpose; BlockingObservable.into; BlockingObservable.seq; sort; sort-by; sorted-list-by,as_blocking,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,blockingIterable; blockingLatest; blockingMostRecent; blockingNext; sorted; to; toFuture; toList; toMap; toMultimap; toSortedList,toArray; toMap; toSet,BlockingObservable.from; BlockingObservable.getIterator; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,GetEnumerator; ToArray; ToDictionary; ToEnumerable; ToEvent; ToEventPattern; ToList; ToLookup; ToTask,toArray,BlockingObservable.to_iterable; to_array; to_blocking; to_dict; to_future; to_iterable; to_list; to_marbles; to_set,to_a; to_h,nest; to; toArray; toBlocking; toBuffer; BlockingObservable.toFuture; toIndexedSeq; BlockingObservable.toIterable; toIterable; toIterator; BlockingObservable.toList; toList; toMap; toMultiMap; toSet; toStream; toTraversable; toVector,toArray
toIndexedSeq,http://reactivex.io/documentation/operators/to.html,To,BlockingObservable.blocking; interpose; BlockingObservable.into; BlockingObservable.seq; sort; sort-by; sorted-list-by,as_blocking,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,blockingIterable; blockingLatest; blockingMostRecent; blockingNext; sorted; to; toFuture; toList; toMap; toMultimap; toSortedList,toArray; toMap; toSet,BlockingObservable.from; BlockingObservable.getIterator; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,GetEnumerator; ToArray; ToDictionary; ToEnumerable; ToEvent; ToEventPattern; ToList; ToLookup; ToTask,toArray,BlockingObservable.to_iterable; to_array; to_blocking; to_dict; to_future; to_iterable; to_list; to_marbles; to_set,to_a; to_h,nest; to; toArray; toBlocking; toBuffer; BlockingObservable.toFuture; toIndexedSeq; BlockingObservable.toIterable; toIterable; toIterator; BlockingObservable.toList; toList; toMap; toMultiMap; toSet; toStream; toTraversable; toVector,toArray
toIterable,http://reactivex.io/documentation/operators/to.html,To,BlockingObservable.blocking; interpose; BlockingObservable.into; BlockingObservable.seq; sort; sort-by; sorted-list-by,as_blocking,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,blockingIterable; blockingLatest; blockingMostRecent; blockingNext; sorted; to; toFuture; toList; toMap; toMultimap; toSortedList,toArray; toMap; toSet,BlockingObservable.from; BlockingObservable.getIterator; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,GetEnumerator; ToArray; ToDictionary; ToEnumerable; ToEvent; ToEventPattern; ToList; ToLookup; ToTask,toArray,BlockingObservable.to_iterable; to_array; to_blocking; to_dict; to_future; to_iterable; to_list; to_marbles; to_set,to_a; to_h,nest; to; toArray; toBlocking; toBuffer; BlockingObservable.toFuture; toIndexedSeq; BlockingObservable.toIterable; toIterable; toIterator; BlockingObservable.toList; toList; toMap; toMultiMap; toSet; toStream; toTraversable; toVector,toArray
toIterator,http://reactivex.io/documentation/operators/to.html,To,BlockingObservable.blocking; interpose; BlockingObservable.into; BlockingObservable.seq; sort; sort-by; sorted-list-by,as_blocking,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,blockingIterable; blockingLatest; blockingMostRecent; blockingNext; sorted; to; toFuture; toList; toMap; toMultimap; toSortedList,toArray; toMap; toSet,BlockingObservable.from; BlockingObservable.getIterator; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,GetEnumerator; ToArray; ToDictionary; ToEnumerable; ToEvent; ToEventPattern; ToList; ToLookup; ToTask,toArray,BlockingObservable.to_iterable; to_array; to_blocking; to_dict; to_future; to_iterable; to_list; to_marbles; to_set,to_a; to_h,nest; to; toArray; toBlocking; toBuffer; BlockingObservable.toFuture; toIndexedSeq; BlockingObservable.toIterable; toIterable; toIterator; BlockingObservable.toList; toList; toMap; toMultiMap; toSet; toStream; toTraversable; toVector,toArray
ToList,http://reactivex.io/documentation/operators/to.html,To,BlockingObservable.blocking; interpose; BlockingObservable.into; BlockingObservable.seq; sort; sort-by; sorted-list-by,as_blocking,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,blockingIterable; blockingLatest; blockingMostRecent; blockingNext; sorted; to; toFuture; toList; toMap; toMultimap; toSortedList,toArray; toMap; toSet,BlockingObservable.from; BlockingObservable.getIterator; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,GetEnumerator; ToArray; ToDictionary; ToEnumerable; ToEvent; ToEventPattern; ToList; ToLookup; ToTask,toArray,BlockingObservable.to_iterable; to_array; to_blocking; to_dict; to_future; to_iterable; to_list; to_marbles; to_set,to_a; to_h,nest; to; toArray; toBlocking; toBuffer; BlockingObservable.toFuture; toIndexedSeq; BlockingObservable.toIterable; toIterable; toIterator; BlockingObservable.toList; toList; toMap; toMultiMap; toSet; toStream; toTraversable; toVector,toArray
ToLookup,http://reactivex.io/documentation/operators/to.html,To,BlockingObservable.blocking; interpose; BlockingObservable.into; BlockingObservable.seq; sort; sort-by; sorted-list-by,as_blocking,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,blockingIterable; blockingLatest; blockingMostRecent; blockingNext; sorted; to; toFuture; toList; toMap; toMultimap; toSortedList,toArray; toMap; toSet,BlockingObservable.from; BlockingObservable.getIterator; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,GetEnumerator; ToArray; ToDictionary; ToEnumerable; ToEvent; ToEventPattern; ToList; ToLookup; ToTask,toArray,BlockingObservable.to_iterable; to_array; to_blocking; to_dict; to_future; to_iterable; to_list; to_marbles; to_set,to_a; to_h,nest; to; toArray; toBlocking; toBuffer; BlockingObservable.toFuture; toIndexedSeq; BlockingObservable.toIterable; toIterable; toIterator; BlockingObservable.toList; toList; toMap; toMultiMap; toSet; toStream; toTraversable; toVector,toArray
toMap,http://reactivex.io/documentation/operators/to.html,To,BlockingObservable.blocking; interpose; BlockingObservable.into; BlockingObservable.seq; sort; sort-by; sorted-list-by,as_blocking,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,blockingIterable; blockingLatest; blockingMostRecent; blockingNext; sorted; to; toFuture; toList; toMap; toMultimap; toSortedList,toArray; toMap; toSet,BlockingObservable.from; BlockingObservable.getIterator; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,GetEnumerator; ToArray; ToDictionary; ToEnumerable; ToEvent; ToEventPattern; ToList; ToLookup; ToTask,toArray,BlockingObservable.to_iterable; to_array; to_blocking; to_dict; to_future; to_iterable; to_list; to_marbles; to_set,to_a; to_h,nest; to; toArray; toBlocking; toBuffer; BlockingObservable.toFuture; toIndexedSeq; BlockingObservable.toIterable; toIterable; toIterator; BlockingObservable.toList; toList; toMap; toMultiMap; toSet; toStream; toTraversable; toVector,toArray
toMultiMap,http://reactivex.io/documentation/operators/to.html,To,BlockingObservable.blocking; interpose; BlockingObservable.into; BlockingObservable.seq; sort; sort-by; sorted-list-by,as_blocking,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,blockingIterable; blockingLatest; blockingMostRecent; blockingNext; sorted; to; toFuture; toList; toMap; toMultimap; toSortedList,toArray; toMap; toSet,BlockingObservable.from; BlockingObservable.getIterator; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,GetEnumerator; ToArray; ToDictionary; ToEnumerable; ToEvent; ToEventPattern; ToList; ToLookup; ToTask,toArray,BlockingObservable.to_iterable; to_array; to_blocking; to_dict; to_future; to_iterable; to_list; to_marbles; to_set,to_a; to_h,nest; to; toArray; toBlocking; toBuffer; BlockingObservable.toFuture; toIndexedSeq; BlockingObservable.toIterable; toIterable; toIterator; BlockingObservable.toList; toList; toMap; toMultiMap; toSet; toStream; toTraversable; toVector,toArray
ToObservable,http://reactivex.io/documentation/operators/from.html,From,seq,from,decode; from; fromAction; fromCallable; fromFunc0; fromRunnable; runAsync,decode; from; fromAction; fromCallable; fromFunc0; fromRunnable; runAsync,fromArray; fromCallable; fromFuture; fromIterable; fromPublisher,from; fromCallback; fromEvent; fromEventPattern; fromNodeCallback; fromPromise; of; ofArrayChanges; ofObjectChanges; ofWithScheduler; pairs,asObservable; from,AsObservable; FromAsyncPattern; FromEvent; FromEventPattern; ToObservable,fromArray; fromIterator; asObservable; fromPromise,from_array; from_callback; from_future; from_iterable; from_list; from_marbles; of,of_array; of_enumerable; of_enumerator,from; items,from; toObservable
toSet,http://reactivex.io/documentation/operators/to.html,To,BlockingObservable.blocking; interpose; BlockingObservable.into; BlockingObservable.seq; sort; sort-by; sorted-list-by,as_blocking,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,blockingIterable; blockingLatest; blockingMostRecent; blockingNext; sorted; to; toFuture; toList; toMap; toMultimap; toSortedList,toArray; toMap; toSet,BlockingObservable.from; BlockingObservable.getIterator; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,GetEnumerator; ToArray; ToDictionary; ToEnumerable; ToEvent; ToEventPattern; ToList; ToLookup; ToTask,toArray,BlockingObservable.to_iterable; to_array; to_blocking; to_dict; to_future; to_iterable; to_list; to_marbles; to_set,to_a; to_h,nest; to; toArray; toBlocking; toBuffer; BlockingObservable.toFuture; toIndexedSeq; BlockingObservable.toIterable; toIterable; toIterator; BlockingObservable.toList; toList; toMap; toMultiMap; toSet; toStream; toTraversable; toVector,toArray
toSortedList,http://reactivex.io/documentation/operators/to.html,To,BlockingObservable.blocking; interpose; BlockingObservable.into; BlockingObservable.seq; sort; sort-by; sorted-list-by,as_blocking,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,blockingIterable; blockingLatest; blockingMostRecent; blockingNext; sorted; to; toFuture; toList; toMap; toMultimap; toSortedList,toArray; toMap; toSet,BlockingObservable.from; BlockingObservable.getIterator; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,GetEnumerator; ToArray; ToDictionary; ToEnumerable; ToEvent; ToEventPattern; ToList; ToLookup; ToTask,toArray,BlockingObservable.to_iterable; to_array; to_blocking; to_dict; to_future; to_iterable; to_list; to_marbles; to_set,to_a; to_h,nest; to; toArray; toBlocking; toBuffer; BlockingObservable.toFuture; toIndexedSeq; BlockingObservable.toIterable; toIterable; toIterator; BlockingObservable.toList; toList; toMap; toMultiMap; toSet; toStream; toTraversable; toVector,toArray
toStream,http://reactivex.io/documentation/operators/to.html,To,BlockingObservable.blocking; interpose; BlockingObservable.into; BlockingObservable.seq; sort; sort-by; sorted-list-by,as_blocking,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,blockingIterable; blockingLatest; blockingMostRecent; blockingNext; sorted; to; toFuture; toList; toMap; toMultimap; toSortedList,toArray; toMap; toSet,BlockingObservable.from; BlockingObservable.getIterator; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,GetEnumerator; ToArray; ToDictionary; ToEnumerable; ToEvent; ToEventPattern; ToList; ToLookup; ToTask,toArray,BlockingObservable.to_iterable; to_array; to_blocking; to_dict; to_future; to_iterable; to_list; to_marbles; to_set,to_a; to_h,nest; to; toArray; toBlocking; toBuffer; BlockingObservable.toFuture; toIndexedSeq; BlockingObservable.toIterable; toIterable; toIterator; BlockingObservable.toList; toList; toMap; toMultiMap; toSet; toStream; toTraversable; toVector,toArray
ToTask,http://reactivex.io/documentation/operators/to.html,To,BlockingObservable.blocking; interpose; BlockingObservable.into; BlockingObservable.seq; sort; sort-by; sorted-list-by,as_blocking,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,blockingIterable; blockingLatest; blockingMostRecent; blockingNext; sorted; to; toFuture; toList; toMap; toMultimap; toSortedList,toArray; toMap; toSet,BlockingObservable.from; BlockingObservable.getIterator; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,GetEnumerator; ToArray; ToDictionary; ToEnumerable; ToEvent; ToEventPattern; ToList; ToLookup; ToTask,toArray,BlockingObservable.to_iterable; to_array; to_blocking; to_dict; to_future; to_iterable; to_list; to_marbles; to_set,to_a; to_h,nest; to; toArray; toBlocking; toBuffer; BlockingObservable.toFuture; toIndexedSeq; BlockingObservable.toIterable; toIterable; toIterator; BlockingObservable.toList; toList; toMap; toMultiMap; toSet; toStream; toTraversable; toVector,toArray
toTraversable,http://reactivex.io/documentation/operators/to.html,To,BlockingObservable.blocking; interpose; BlockingObservable.into; BlockingObservable.seq; sort; sort-by; sorted-list-by,as_blocking,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,blockingIterable; blockingLatest; blockingMostRecent; blockingNext; sorted; to; toFuture; toList; toMap; toMultimap; toSortedList,toArray; toMap; toSet,BlockingObservable.from; BlockingObservable.getIterator; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,GetEnumerator; ToArray; ToDictionary; ToEnumerable; ToEvent; ToEventPattern; ToList; ToLookup; ToTask,toArray,BlockingObservable.to_iterable; to_array; to_blocking; to_dict; to_future; to_iterable; to_list; to_marbles; to_set,to_a; to_h,nest; to; toArray; toBlocking; toBuffer; BlockingObservable.toFuture; toIndexedSeq; BlockingObservable.toIterable; toIterable; toIterator; BlockingObservable.toList; toList; toMap; toMultiMap; toSet; toStream; toTraversable; toVector,toArray
toVector,http://reactivex.io/documentation/operators/to.html,To,BlockingObservable.blocking; interpose; BlockingObservable.into; BlockingObservable.seq; sort; sort-by; sorted-list-by,as_blocking,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,BlockingObservable.from; BlockingObservable.getIterator; nest; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,blockingIterable; blockingLatest; blockingMostRecent; blockingNext; sorted; to; toFuture; toList; toMap; toMultimap; toSortedList,toArray; toMap; toSet,BlockingObservable.from; BlockingObservable.getIterator; toBlocking; BlockingObservable.toFuture; BlockingObservable.toIterable; toList; toMap; toMultiMap; toSortedList,GetEnumerator; ToArray; ToDictionary; ToEnumerable; ToEvent; ToEventPattern; ToList; ToLookup; ToTask,toArray,BlockingObservable.to_iterable; to_array; to_blocking; to_dict; to_future; to_iterable; to_list; to_marbles; to_set,to_a; to_h,nest; to; toArray; toBlocking; toBuffer; BlockingObservable.toFuture; toIndexedSeq; BlockingObservable.toIterable; toIterable; toIterator; BlockingObservable.toList; toList; toMap; toMultiMap; toSet; toStream; toTraversable; toVector,toArray
tumbling,http://reactivex.io/documentation/operators/window.html,Window,partition-all,window; window_with_time; window_with_time_or_count,window,window,window,window; windowWithCount; windowWithTime; windowWithTimeOrCount,window,Window,,window; window_with_count; window_with_time; window_with_time_or_count,window_with_count,sliding; tumbling,window
tumblingBuffer,http://reactivex.io/documentation/operators/buffer.html,Buffer,,buffer; pairwise,buffer,buffer,buffer,buffer; bufferWithCount; bufferWithTime; bufferWithTimeOrCount,buffer,Buffer,bufferWithCount,buffer; buffer_with_count; buffer_with_time; buffer_with_time_or_count; pairwise,buffer_with_count; buffer_with_time,slidingBuffer; tumblingBuffer,buffer
unsafeCreate,http://reactivex.io/documentation/operators/create.html,Create,generator,,create,create,create; generate; unsafeCreate,create; createWithDisposable; generate; generateWithAbsoluteTime; generateWithRelativeTime,create,Create; Generate,create,create; generate; generate_with_relative_time,create; generate,apply; create,create; generate
unsubscribeOn,http://reactivex.io/documentation/operators/subscribeon.html,SubscribeOn,subscribe-on; unsubscribe-on,,subscribeOn; unsubscribeOn,subscribeOn; unsubscribeOn,subscribeOn; unsubscribeOn,subscribeOn,subscribeOn; unsubscribeOn,SubscribeOn; SubscribeOnDispatcher,,subscribe_on,subscribe_on,subscribeOn; unsubscribeOn,subscribeOn
Using,http://reactivex.io/documentation/operators/using.html,Using,,scope,using,using,using,using,using,Using,,using,using,using,using
When,http://reactivex.io/documentation/operators/and-then-when.html,And/Then/When,,,and; then; when,and; then; when,,and; thenDo; when,and; then; when,And; Then; When,,and_; then_do; when,,,
Where,http://reactivex.io/documentation/operators/filter.html,Filter,filter,filter,filter; ofType,filter; ofType,filter; ofType,filter; where,filter; ofType,OfType; Where,filter; where,filter; slice; where,select; select_with_index,collect; filter; filterNot; BlockingObservable.withFilter; withFilter,filter
while,http://reactivex.io/documentation/operators/repeat.html,Repeat,cycle,repeat,doWhile; repeat; repeatWhen; whileDo,doWhile; repeat; repeatWhen; whileDo,repeat; repeatUntil; repeatWhen,doWhile; repeat; while,doWhile; repeat; repeatWhen; whileDo,Repeat,repeat; repeatWhen,do_while; repeat; while_do,repeat; repeat_infinitely,repeat; repeatWhen,repeatElement
whileDo,http://reactivex.io/documentation/operators/repeat.html,Repeat,cycle,repeat,doWhile; repeat; repeatWhen; whileDo,doWhile; repeat; repeatWhen; whileDo,repeat; repeatUntil; repeatWhen,doWhile; repeat; while,doWhile; repeat; repeatWhen; whileDo,Repeat,repeat; repeatWhen,do_while; repeat; while_do,repeat; repeat_infinitely,repeat; repeatWhen,repeatElement
Window,http://reactivex.io/documentation/operators/window.html,Window,partition-all,window; window_with_time; window_with_time_or_count,window,window,window,window; windowWithCount; windowWithTime; windowWithTimeOrCount,window,Window,,window; window_with_count; window_with_time; window_with_time_or_count,window_with_count,sliding; tumbling,window
windowWithCount,http://reactivex.io/documentation/operators/window.html,Window,partition-all,window; window_with_time; window_with_time_or_count,window,window,window,window; windowWithCount; windowWithTime; windowWithTimeOrCount,window,Window,,window; window_with_count; window_with_time; window_with_time_or_count,window_with_count,sliding; tumbling,window
windowWithTime,http://reactivex.io/documentation/operators/window.html,Window,partition-all,window; window_with_time; window_with_time_or_count,window,window,window,window; windowWithCount; windowWithTime; windowWithTimeOrCount,window,Window,,window; window_with_count; window_with_time; window_with_time_or_count,window_with_count,sliding; tumbling,window
windowWithTimeOrCount,http://reactivex.io/documentation/operators/window.html,Window,partition-all,window; window_with_time; window_with_time_or_count,window,window,window,window; windowWithCount; windowWithTime; windowWithTimeOrCount,window,Window,,window; window_with_count; window_with_time; window_with_time_or_count,window_with_count,sliding; tumbling,window
windowed,http://reactivex.io/documentation/operators/backpressure.html,,,,onBackpressureBuffer; onBackpressureDrop; onBackpressureLatest,onBackpressureBuffer; onBackpressureDrop; onBackpressureLatest,Flowable,controlled; pausable; pausableBuffered; stopAndWait; windowed,,,,,,onBackpressureBuffer; onBackpressureDrop; onBackpressureLatest,
withFilter,http://reactivex.io/documentation/operators/filter.html,Filter,filter,filter,filter; ofType,filter; ofType,filter; ofType,filter; where,filter; ofType,OfType; Where,filter; where,filter; slice; where,select; select_with_index,collect; filter; filterNot; BlockingObservable.withFilter; withFilter,filter
withLatestFrom,http://reactivex.io/documentation/operators/combinelatest.html,CombineLatest,,combine_latest,combineLatest; withLatestFrom,combineLatest; withLatestFrom,combineLatest; combineLatestDelayError; withLatestFrom,combineLatest; withLatestFrom,combineLatest,CombineLatest,combineLatest; withLatestFrom,combine_latest; with_latest_from,combine_latest,combineLatest; combineLatestWith,combineLatest; withLatestFrom
Zip,http://reactivex.io/documentation/operators/zip.html,Zip,map; mapCat,zip,zip; zipWith,zip; zipWith,zip; zipArray; zipIterable; zipWith,forkJoin; zip; zipArray,zip; zipWith,Zip,zip; forkJoin,zip; zip_array,zip,zip; zipWith; zipWithIndex,zip
zipArray,http://reactivex.io/documentation/operators/zip.html,Zip,map; mapCat,zip,zip; zipWith,zip; zipWith,zip; zipArray; zipIterable; zipWith,forkJoin; zip; zipArray,zip; zipWith,Zip,zip; forkJoin,zip; zip_array,zip,zip; zipWith; zipWithIndex,zip
zipIterable,http://reactivex.io/documentation/operators/zip.html,Zip,map; mapCat,zip,zip; zipWith,zip; zipWith,zip; zipArray; zipIterable; zipWith,forkJoin; zip; zipArray,zip; zipWith,Zip,zip; forkJoin,zip; zip_array,zip,zip; zipWith; zipWithIndex,zip
zipWith,http://reactivex.io/documentation/operators/zip.html,Zip,map; mapCat,zip,zip; zipWith,zip; zipWith,zip; zipArray; zipIterable; zipWith,forkJoin; zip; zipArray,zip; zipWith,Zip,zip; forkJoin,zip; zip_array,zip,zip; zipWith; zipWithIndex,zip
zipWithIndex,http://reactivex.io/documentation/operators/zip.html,Zip,map; mapCat,zip,zip; zipWith,zip; zipWith,zip; zipArray; zipIterable; zipWith,forkJoin; zip; zipArray,zip; zipWith,Zip,zip; forkJoin,zip; zip_array,zip,zip; zipWith; zipWithIndex,zip
++,http://reactivex.io/documentation/operators/concat.html,Concat,concat; concat*,concat,concat; concatWith,concat; concatWith,concat; concatArray; concatArrayDelayError; concatArrayEager; concatDelayError; concatEager; concatWith,concat; concatAll,concat; concatWith,Concat,concat; concatAll,concat; concatAll,concat; merge_all,concat; ++,concat
+:,http://reactivex.io/documentation/operators/startwith.html,StartWith,cons,start_with,startWith,startWith,startWith,startWith,startWith,StartWith,startWith; startWithArray,start_with,start_with,+:,startWith
:+,http://reactivex.io/documentation/operators/just.html,Just,return,just,just,just,just,just; return,asObservable; just,Return,of,just; return_value,just,items; just; :+,just; sequenceOf